/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#ifndef QuotationAccountDao_H
#define QuotationAccountDao_H

#include <thrift/TDispatchProcessor.h>
#include "quotation_account_dao_types.h"



class QuotationAccountDaoIf {
 public:
  virtual ~QuotationAccountDaoIf() {}
  virtual void reqContractActiveRule( ::ContractActiveRulePage& _return, const  ::platform::comm::PlatformArgs& platformArgs, const  ::ReqContractActiveRuleOption& option, const  ::platform::page::IndexedPageOption& pageOption) = 0;
  virtual void reqContractRegisterRule( ::ContractRegisterRulePage& _return, const  ::platform::comm::PlatformArgs& platformArgs, const  ::ReqContractRegisterRuleOption& option, const  ::platform::page::IndexedPageOption& pageOption) = 0;
  virtual void reqQuotationAccount( ::QuotationAccountPage& _return, const  ::platform::comm::PlatformArgs& platformArgs, const  ::ReqQuotationAccountOption& option, const  ::platform::page::IndexedPageOption& pageOption) = 0;
  virtual void addContractActiveRule(const  ::platform::comm::PlatformArgs& platformArgs, const  ::ContractActiveRule& rule) = 0;
  virtual void addContractRegisterRule(const  ::platform::comm::PlatformArgs& platformArgs, const  ::ContractRegisterRule& rule) = 0;
  virtual int64_t addQuotationAccount(const  ::platform::comm::PlatformArgs& platformArgs, const  ::QuotationAccount& account) = 0;
  virtual void updateContractActiveRule(const  ::platform::comm::PlatformArgs& platformArgs, const  ::ContractActiveRule& rule) = 0;
  virtual void updateContractRegisterRule(const  ::platform::comm::PlatformArgs& platformArgs, const  ::ContractRegisterRule& rule) = 0;
  virtual void updateQuotationAccount(const  ::platform::comm::PlatformArgs& platformArgs, const  ::QuotationAccount& account) = 0;
  virtual void removeContractActiveRule(const  ::platform::comm::PlatformArgs& platformArgs, const int32_t sledCommodityId) = 0;
  virtual void removeContractRegisterRule(const  ::platform::comm::PlatformArgs& platformArgs, const int32_t sledCommodityId, const  ::QuotationPlatformEnv::type platformEnv) = 0;
  virtual void removeQuotationAccount(const  ::platform::comm::PlatformArgs& platformArgs, const int64_t accountId) = 0;
  virtual void reqAccountCommodityRegisterAbility( ::AccountCommodityRegisterAbilityPage& _return, const  ::platform::comm::PlatformArgs& platformArgs, const  ::ReqAccountCommodityRegisterAbilityOption& option, const  ::platform::page::IndexedPageOption& pageOption) = 0;
  virtual void addAccountCommodityRegisterAbility(const  ::platform::comm::PlatformArgs& platformArgs, const  ::AccountCommodityRegisterAbility& ability) = 0;
  virtual void removeAccountCommodityRegisterAbility(const  ::platform::comm::PlatformArgs& platformArgs, const int64_t supportAbilityId) = 0;
  virtual void reqQuotationAccountSupport( ::QuotationAccountSupportPage& _return, const  ::platform::comm::PlatformArgs& platformArgs, const  ::ReqQuotationAccountSupportOption& option, const  ::platform::page::IndexedPageOption& pageOption) = 0;
  virtual void setCommodityRegisterOrderIndex(const  ::platform::comm::PlatformArgs& platformArgs, const int32_t sledCommodityId, const  ::QuotationPlatformEnv::type platformEnv, const int32_t orderIndex) = 0;
};

class QuotationAccountDaoIfFactory {
 public:
  typedef QuotationAccountDaoIf Handler;

  virtual ~QuotationAccountDaoIfFactory() {}

  virtual QuotationAccountDaoIf* getHandler(const ::apache::thrift::TConnectionInfo& connInfo) = 0;
  virtual void releaseHandler(QuotationAccountDaoIf* /* handler */) = 0;
};

class QuotationAccountDaoIfSingletonFactory : virtual public QuotationAccountDaoIfFactory {
 public:
  QuotationAccountDaoIfSingletonFactory(const boost::shared_ptr<QuotationAccountDaoIf>& iface) : iface_(iface) {}
  virtual ~QuotationAccountDaoIfSingletonFactory() {}

  virtual QuotationAccountDaoIf* getHandler(const ::apache::thrift::TConnectionInfo&) {
    return iface_.get();
  }
  virtual void releaseHandler(QuotationAccountDaoIf* /* handler */) {}

 protected:
  boost::shared_ptr<QuotationAccountDaoIf> iface_;
};

class QuotationAccountDaoNull : virtual public QuotationAccountDaoIf {
 public:
  virtual ~QuotationAccountDaoNull() {}
  void reqContractActiveRule( ::ContractActiveRulePage& /* _return */, const  ::platform::comm::PlatformArgs& /* platformArgs */, const  ::ReqContractActiveRuleOption& /* option */, const  ::platform::page::IndexedPageOption& /* pageOption */) {
    return;
  }
  void reqContractRegisterRule( ::ContractRegisterRulePage& /* _return */, const  ::platform::comm::PlatformArgs& /* platformArgs */, const  ::ReqContractRegisterRuleOption& /* option */, const  ::platform::page::IndexedPageOption& /* pageOption */) {
    return;
  }
  void reqQuotationAccount( ::QuotationAccountPage& /* _return */, const  ::platform::comm::PlatformArgs& /* platformArgs */, const  ::ReqQuotationAccountOption& /* option */, const  ::platform::page::IndexedPageOption& /* pageOption */) {
    return;
  }
  void addContractActiveRule(const  ::platform::comm::PlatformArgs& /* platformArgs */, const  ::ContractActiveRule& /* rule */) {
    return;
  }
  void addContractRegisterRule(const  ::platform::comm::PlatformArgs& /* platformArgs */, const  ::ContractRegisterRule& /* rule */) {
    return;
  }
  int64_t addQuotationAccount(const  ::platform::comm::PlatformArgs& /* platformArgs */, const  ::QuotationAccount& /* account */) {
    int64_t _return = 0;
    return _return;
  }
  void updateContractActiveRule(const  ::platform::comm::PlatformArgs& /* platformArgs */, const  ::ContractActiveRule& /* rule */) {
    return;
  }
  void updateContractRegisterRule(const  ::platform::comm::PlatformArgs& /* platformArgs */, const  ::ContractRegisterRule& /* rule */) {
    return;
  }
  void updateQuotationAccount(const  ::platform::comm::PlatformArgs& /* platformArgs */, const  ::QuotationAccount& /* account */) {
    return;
  }
  void removeContractActiveRule(const  ::platform::comm::PlatformArgs& /* platformArgs */, const int32_t /* sledCommodityId */) {
    return;
  }
  void removeContractRegisterRule(const  ::platform::comm::PlatformArgs& /* platformArgs */, const int32_t /* sledCommodityId */, const  ::QuotationPlatformEnv::type /* platformEnv */) {
    return;
  }
  void removeQuotationAccount(const  ::platform::comm::PlatformArgs& /* platformArgs */, const int64_t /* accountId */) {
    return;
  }
  void reqAccountCommodityRegisterAbility( ::AccountCommodityRegisterAbilityPage& /* _return */, const  ::platform::comm::PlatformArgs& /* platformArgs */, const  ::ReqAccountCommodityRegisterAbilityOption& /* option */, const  ::platform::page::IndexedPageOption& /* pageOption */) {
    return;
  }
  void addAccountCommodityRegisterAbility(const  ::platform::comm::PlatformArgs& /* platformArgs */, const  ::AccountCommodityRegisterAbility& /* ability */) {
    return;
  }
  void removeAccountCommodityRegisterAbility(const  ::platform::comm::PlatformArgs& /* platformArgs */, const int64_t /* supportAbilityId */) {
    return;
  }
  void reqQuotationAccountSupport( ::QuotationAccountSupportPage& /* _return */, const  ::platform::comm::PlatformArgs& /* platformArgs */, const  ::ReqQuotationAccountSupportOption& /* option */, const  ::platform::page::IndexedPageOption& /* pageOption */) {
    return;
  }
  void setCommodityRegisterOrderIndex(const  ::platform::comm::PlatformArgs& /* platformArgs */, const int32_t /* sledCommodityId */, const  ::QuotationPlatformEnv::type /* platformEnv */, const int32_t /* orderIndex */) {
    return;
  }
};

typedef struct _QuotationAccountDao_reqContractActiveRule_args__isset {
  _QuotationAccountDao_reqContractActiveRule_args__isset() : platformArgs(false), option(false), pageOption(false) {}
  bool platformArgs;
  bool option;
  bool pageOption;
} _QuotationAccountDao_reqContractActiveRule_args__isset;

class QuotationAccountDao_reqContractActiveRule_args {
 public:

  QuotationAccountDao_reqContractActiveRule_args() {
  }

  virtual ~QuotationAccountDao_reqContractActiveRule_args() throw() {}

   ::platform::comm::PlatformArgs platformArgs;
   ::ReqContractActiveRuleOption option;
   ::platform::page::IndexedPageOption pageOption;

  _QuotationAccountDao_reqContractActiveRule_args__isset __isset;

  void __set_platformArgs(const  ::platform::comm::PlatformArgs& val) {
    platformArgs = val;
  }

  void __set_option(const  ::ReqContractActiveRuleOption& val) {
    option = val;
  }

  void __set_pageOption(const  ::platform::page::IndexedPageOption& val) {
    pageOption = val;
  }

  bool operator == (const QuotationAccountDao_reqContractActiveRule_args & rhs) const
  {
    if (!(platformArgs == rhs.platformArgs))
      return false;
    if (!(option == rhs.option))
      return false;
    if (!(pageOption == rhs.pageOption))
      return false;
    return true;
  }
  bool operator != (const QuotationAccountDao_reqContractActiveRule_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const QuotationAccountDao_reqContractActiveRule_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class QuotationAccountDao_reqContractActiveRule_pargs {
 public:


  virtual ~QuotationAccountDao_reqContractActiveRule_pargs() throw() {}

  const  ::platform::comm::PlatformArgs* platformArgs;
  const  ::ReqContractActiveRuleOption* option;
  const  ::platform::page::IndexedPageOption* pageOption;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _QuotationAccountDao_reqContractActiveRule_result__isset {
  _QuotationAccountDao_reqContractActiveRule_result__isset() : success(false), err(false) {}
  bool success;
  bool err;
} _QuotationAccountDao_reqContractActiveRule_result__isset;

class QuotationAccountDao_reqContractActiveRule_result {
 public:

  QuotationAccountDao_reqContractActiveRule_result() {
  }

  virtual ~QuotationAccountDao_reqContractActiveRule_result() throw() {}

   ::ContractActiveRulePage success;
   ::platform::comm::ErrorInfo err;

  _QuotationAccountDao_reqContractActiveRule_result__isset __isset;

  void __set_success(const  ::ContractActiveRulePage& val) {
    success = val;
  }

  void __set_err(const  ::platform::comm::ErrorInfo& val) {
    err = val;
  }

  bool operator == (const QuotationAccountDao_reqContractActiveRule_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(err == rhs.err))
      return false;
    return true;
  }
  bool operator != (const QuotationAccountDao_reqContractActiveRule_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const QuotationAccountDao_reqContractActiveRule_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _QuotationAccountDao_reqContractActiveRule_presult__isset {
  _QuotationAccountDao_reqContractActiveRule_presult__isset() : success(false), err(false) {}
  bool success;
  bool err;
} _QuotationAccountDao_reqContractActiveRule_presult__isset;

class QuotationAccountDao_reqContractActiveRule_presult {
 public:


  virtual ~QuotationAccountDao_reqContractActiveRule_presult() throw() {}

   ::ContractActiveRulePage* success;
   ::platform::comm::ErrorInfo err;

  _QuotationAccountDao_reqContractActiveRule_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _QuotationAccountDao_reqContractRegisterRule_args__isset {
  _QuotationAccountDao_reqContractRegisterRule_args__isset() : platformArgs(false), option(false), pageOption(false) {}
  bool platformArgs;
  bool option;
  bool pageOption;
} _QuotationAccountDao_reqContractRegisterRule_args__isset;

class QuotationAccountDao_reqContractRegisterRule_args {
 public:

  QuotationAccountDao_reqContractRegisterRule_args() {
  }

  virtual ~QuotationAccountDao_reqContractRegisterRule_args() throw() {}

   ::platform::comm::PlatformArgs platformArgs;
   ::ReqContractRegisterRuleOption option;
   ::platform::page::IndexedPageOption pageOption;

  _QuotationAccountDao_reqContractRegisterRule_args__isset __isset;

  void __set_platformArgs(const  ::platform::comm::PlatformArgs& val) {
    platformArgs = val;
  }

  void __set_option(const  ::ReqContractRegisterRuleOption& val) {
    option = val;
  }

  void __set_pageOption(const  ::platform::page::IndexedPageOption& val) {
    pageOption = val;
  }

  bool operator == (const QuotationAccountDao_reqContractRegisterRule_args & rhs) const
  {
    if (!(platformArgs == rhs.platformArgs))
      return false;
    if (!(option == rhs.option))
      return false;
    if (!(pageOption == rhs.pageOption))
      return false;
    return true;
  }
  bool operator != (const QuotationAccountDao_reqContractRegisterRule_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const QuotationAccountDao_reqContractRegisterRule_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class QuotationAccountDao_reqContractRegisterRule_pargs {
 public:


  virtual ~QuotationAccountDao_reqContractRegisterRule_pargs() throw() {}

  const  ::platform::comm::PlatformArgs* platformArgs;
  const  ::ReqContractRegisterRuleOption* option;
  const  ::platform::page::IndexedPageOption* pageOption;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _QuotationAccountDao_reqContractRegisterRule_result__isset {
  _QuotationAccountDao_reqContractRegisterRule_result__isset() : success(false), err(false) {}
  bool success;
  bool err;
} _QuotationAccountDao_reqContractRegisterRule_result__isset;

class QuotationAccountDao_reqContractRegisterRule_result {
 public:

  QuotationAccountDao_reqContractRegisterRule_result() {
  }

  virtual ~QuotationAccountDao_reqContractRegisterRule_result() throw() {}

   ::ContractRegisterRulePage success;
   ::platform::comm::ErrorInfo err;

  _QuotationAccountDao_reqContractRegisterRule_result__isset __isset;

  void __set_success(const  ::ContractRegisterRulePage& val) {
    success = val;
  }

  void __set_err(const  ::platform::comm::ErrorInfo& val) {
    err = val;
  }

  bool operator == (const QuotationAccountDao_reqContractRegisterRule_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(err == rhs.err))
      return false;
    return true;
  }
  bool operator != (const QuotationAccountDao_reqContractRegisterRule_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const QuotationAccountDao_reqContractRegisterRule_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _QuotationAccountDao_reqContractRegisterRule_presult__isset {
  _QuotationAccountDao_reqContractRegisterRule_presult__isset() : success(false), err(false) {}
  bool success;
  bool err;
} _QuotationAccountDao_reqContractRegisterRule_presult__isset;

class QuotationAccountDao_reqContractRegisterRule_presult {
 public:


  virtual ~QuotationAccountDao_reqContractRegisterRule_presult() throw() {}

   ::ContractRegisterRulePage* success;
   ::platform::comm::ErrorInfo err;

  _QuotationAccountDao_reqContractRegisterRule_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _QuotationAccountDao_reqQuotationAccount_args__isset {
  _QuotationAccountDao_reqQuotationAccount_args__isset() : platformArgs(false), option(false), pageOption(false) {}
  bool platformArgs;
  bool option;
  bool pageOption;
} _QuotationAccountDao_reqQuotationAccount_args__isset;

class QuotationAccountDao_reqQuotationAccount_args {
 public:

  QuotationAccountDao_reqQuotationAccount_args() {
  }

  virtual ~QuotationAccountDao_reqQuotationAccount_args() throw() {}

   ::platform::comm::PlatformArgs platformArgs;
   ::ReqQuotationAccountOption option;
   ::platform::page::IndexedPageOption pageOption;

  _QuotationAccountDao_reqQuotationAccount_args__isset __isset;

  void __set_platformArgs(const  ::platform::comm::PlatformArgs& val) {
    platformArgs = val;
  }

  void __set_option(const  ::ReqQuotationAccountOption& val) {
    option = val;
  }

  void __set_pageOption(const  ::platform::page::IndexedPageOption& val) {
    pageOption = val;
  }

  bool operator == (const QuotationAccountDao_reqQuotationAccount_args & rhs) const
  {
    if (!(platformArgs == rhs.platformArgs))
      return false;
    if (!(option == rhs.option))
      return false;
    if (!(pageOption == rhs.pageOption))
      return false;
    return true;
  }
  bool operator != (const QuotationAccountDao_reqQuotationAccount_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const QuotationAccountDao_reqQuotationAccount_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class QuotationAccountDao_reqQuotationAccount_pargs {
 public:


  virtual ~QuotationAccountDao_reqQuotationAccount_pargs() throw() {}

  const  ::platform::comm::PlatformArgs* platformArgs;
  const  ::ReqQuotationAccountOption* option;
  const  ::platform::page::IndexedPageOption* pageOption;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _QuotationAccountDao_reqQuotationAccount_result__isset {
  _QuotationAccountDao_reqQuotationAccount_result__isset() : success(false), err(false) {}
  bool success;
  bool err;
} _QuotationAccountDao_reqQuotationAccount_result__isset;

class QuotationAccountDao_reqQuotationAccount_result {
 public:

  QuotationAccountDao_reqQuotationAccount_result() {
  }

  virtual ~QuotationAccountDao_reqQuotationAccount_result() throw() {}

   ::QuotationAccountPage success;
   ::platform::comm::ErrorInfo err;

  _QuotationAccountDao_reqQuotationAccount_result__isset __isset;

  void __set_success(const  ::QuotationAccountPage& val) {
    success = val;
  }

  void __set_err(const  ::platform::comm::ErrorInfo& val) {
    err = val;
  }

  bool operator == (const QuotationAccountDao_reqQuotationAccount_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(err == rhs.err))
      return false;
    return true;
  }
  bool operator != (const QuotationAccountDao_reqQuotationAccount_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const QuotationAccountDao_reqQuotationAccount_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _QuotationAccountDao_reqQuotationAccount_presult__isset {
  _QuotationAccountDao_reqQuotationAccount_presult__isset() : success(false), err(false) {}
  bool success;
  bool err;
} _QuotationAccountDao_reqQuotationAccount_presult__isset;

class QuotationAccountDao_reqQuotationAccount_presult {
 public:


  virtual ~QuotationAccountDao_reqQuotationAccount_presult() throw() {}

   ::QuotationAccountPage* success;
   ::platform::comm::ErrorInfo err;

  _QuotationAccountDao_reqQuotationAccount_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _QuotationAccountDao_addContractActiveRule_args__isset {
  _QuotationAccountDao_addContractActiveRule_args__isset() : platformArgs(false), rule(false) {}
  bool platformArgs;
  bool rule;
} _QuotationAccountDao_addContractActiveRule_args__isset;

class QuotationAccountDao_addContractActiveRule_args {
 public:

  QuotationAccountDao_addContractActiveRule_args() {
  }

  virtual ~QuotationAccountDao_addContractActiveRule_args() throw() {}

   ::platform::comm::PlatformArgs platformArgs;
   ::ContractActiveRule rule;

  _QuotationAccountDao_addContractActiveRule_args__isset __isset;

  void __set_platformArgs(const  ::platform::comm::PlatformArgs& val) {
    platformArgs = val;
  }

  void __set_rule(const  ::ContractActiveRule& val) {
    rule = val;
  }

  bool operator == (const QuotationAccountDao_addContractActiveRule_args & rhs) const
  {
    if (!(platformArgs == rhs.platformArgs))
      return false;
    if (!(rule == rhs.rule))
      return false;
    return true;
  }
  bool operator != (const QuotationAccountDao_addContractActiveRule_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const QuotationAccountDao_addContractActiveRule_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class QuotationAccountDao_addContractActiveRule_pargs {
 public:


  virtual ~QuotationAccountDao_addContractActiveRule_pargs() throw() {}

  const  ::platform::comm::PlatformArgs* platformArgs;
  const  ::ContractActiveRule* rule;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _QuotationAccountDao_addContractActiveRule_result__isset {
  _QuotationAccountDao_addContractActiveRule_result__isset() : err(false) {}
  bool err;
} _QuotationAccountDao_addContractActiveRule_result__isset;

class QuotationAccountDao_addContractActiveRule_result {
 public:

  QuotationAccountDao_addContractActiveRule_result() {
  }

  virtual ~QuotationAccountDao_addContractActiveRule_result() throw() {}

   ::platform::comm::ErrorInfo err;

  _QuotationAccountDao_addContractActiveRule_result__isset __isset;

  void __set_err(const  ::platform::comm::ErrorInfo& val) {
    err = val;
  }

  bool operator == (const QuotationAccountDao_addContractActiveRule_result & rhs) const
  {
    if (!(err == rhs.err))
      return false;
    return true;
  }
  bool operator != (const QuotationAccountDao_addContractActiveRule_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const QuotationAccountDao_addContractActiveRule_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _QuotationAccountDao_addContractActiveRule_presult__isset {
  _QuotationAccountDao_addContractActiveRule_presult__isset() : err(false) {}
  bool err;
} _QuotationAccountDao_addContractActiveRule_presult__isset;

class QuotationAccountDao_addContractActiveRule_presult {
 public:


  virtual ~QuotationAccountDao_addContractActiveRule_presult() throw() {}

   ::platform::comm::ErrorInfo err;

  _QuotationAccountDao_addContractActiveRule_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _QuotationAccountDao_addContractRegisterRule_args__isset {
  _QuotationAccountDao_addContractRegisterRule_args__isset() : platformArgs(false), rule(false) {}
  bool platformArgs;
  bool rule;
} _QuotationAccountDao_addContractRegisterRule_args__isset;

class QuotationAccountDao_addContractRegisterRule_args {
 public:

  QuotationAccountDao_addContractRegisterRule_args() {
  }

  virtual ~QuotationAccountDao_addContractRegisterRule_args() throw() {}

   ::platform::comm::PlatformArgs platformArgs;
   ::ContractRegisterRule rule;

  _QuotationAccountDao_addContractRegisterRule_args__isset __isset;

  void __set_platformArgs(const  ::platform::comm::PlatformArgs& val) {
    platformArgs = val;
  }

  void __set_rule(const  ::ContractRegisterRule& val) {
    rule = val;
  }

  bool operator == (const QuotationAccountDao_addContractRegisterRule_args & rhs) const
  {
    if (!(platformArgs == rhs.platformArgs))
      return false;
    if (!(rule == rhs.rule))
      return false;
    return true;
  }
  bool operator != (const QuotationAccountDao_addContractRegisterRule_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const QuotationAccountDao_addContractRegisterRule_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class QuotationAccountDao_addContractRegisterRule_pargs {
 public:


  virtual ~QuotationAccountDao_addContractRegisterRule_pargs() throw() {}

  const  ::platform::comm::PlatformArgs* platformArgs;
  const  ::ContractRegisterRule* rule;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _QuotationAccountDao_addContractRegisterRule_result__isset {
  _QuotationAccountDao_addContractRegisterRule_result__isset() : err(false) {}
  bool err;
} _QuotationAccountDao_addContractRegisterRule_result__isset;

class QuotationAccountDao_addContractRegisterRule_result {
 public:

  QuotationAccountDao_addContractRegisterRule_result() {
  }

  virtual ~QuotationAccountDao_addContractRegisterRule_result() throw() {}

   ::platform::comm::ErrorInfo err;

  _QuotationAccountDao_addContractRegisterRule_result__isset __isset;

  void __set_err(const  ::platform::comm::ErrorInfo& val) {
    err = val;
  }

  bool operator == (const QuotationAccountDao_addContractRegisterRule_result & rhs) const
  {
    if (!(err == rhs.err))
      return false;
    return true;
  }
  bool operator != (const QuotationAccountDao_addContractRegisterRule_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const QuotationAccountDao_addContractRegisterRule_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _QuotationAccountDao_addContractRegisterRule_presult__isset {
  _QuotationAccountDao_addContractRegisterRule_presult__isset() : err(false) {}
  bool err;
} _QuotationAccountDao_addContractRegisterRule_presult__isset;

class QuotationAccountDao_addContractRegisterRule_presult {
 public:


  virtual ~QuotationAccountDao_addContractRegisterRule_presult() throw() {}

   ::platform::comm::ErrorInfo err;

  _QuotationAccountDao_addContractRegisterRule_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _QuotationAccountDao_addQuotationAccount_args__isset {
  _QuotationAccountDao_addQuotationAccount_args__isset() : platformArgs(false), account(false) {}
  bool platformArgs;
  bool account;
} _QuotationAccountDao_addQuotationAccount_args__isset;

class QuotationAccountDao_addQuotationAccount_args {
 public:

  QuotationAccountDao_addQuotationAccount_args() {
  }

  virtual ~QuotationAccountDao_addQuotationAccount_args() throw() {}

   ::platform::comm::PlatformArgs platformArgs;
   ::QuotationAccount account;

  _QuotationAccountDao_addQuotationAccount_args__isset __isset;

  void __set_platformArgs(const  ::platform::comm::PlatformArgs& val) {
    platformArgs = val;
  }

  void __set_account(const  ::QuotationAccount& val) {
    account = val;
  }

  bool operator == (const QuotationAccountDao_addQuotationAccount_args & rhs) const
  {
    if (!(platformArgs == rhs.platformArgs))
      return false;
    if (!(account == rhs.account))
      return false;
    return true;
  }
  bool operator != (const QuotationAccountDao_addQuotationAccount_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const QuotationAccountDao_addQuotationAccount_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class QuotationAccountDao_addQuotationAccount_pargs {
 public:


  virtual ~QuotationAccountDao_addQuotationAccount_pargs() throw() {}

  const  ::platform::comm::PlatformArgs* platformArgs;
  const  ::QuotationAccount* account;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _QuotationAccountDao_addQuotationAccount_result__isset {
  _QuotationAccountDao_addQuotationAccount_result__isset() : success(false), err(false) {}
  bool success;
  bool err;
} _QuotationAccountDao_addQuotationAccount_result__isset;

class QuotationAccountDao_addQuotationAccount_result {
 public:

  QuotationAccountDao_addQuotationAccount_result() : success(0) {
  }

  virtual ~QuotationAccountDao_addQuotationAccount_result() throw() {}

  int64_t success;
   ::platform::comm::ErrorInfo err;

  _QuotationAccountDao_addQuotationAccount_result__isset __isset;

  void __set_success(const int64_t val) {
    success = val;
  }

  void __set_err(const  ::platform::comm::ErrorInfo& val) {
    err = val;
  }

  bool operator == (const QuotationAccountDao_addQuotationAccount_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(err == rhs.err))
      return false;
    return true;
  }
  bool operator != (const QuotationAccountDao_addQuotationAccount_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const QuotationAccountDao_addQuotationAccount_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _QuotationAccountDao_addQuotationAccount_presult__isset {
  _QuotationAccountDao_addQuotationAccount_presult__isset() : success(false), err(false) {}
  bool success;
  bool err;
} _QuotationAccountDao_addQuotationAccount_presult__isset;

class QuotationAccountDao_addQuotationAccount_presult {
 public:


  virtual ~QuotationAccountDao_addQuotationAccount_presult() throw() {}

  int64_t* success;
   ::platform::comm::ErrorInfo err;

  _QuotationAccountDao_addQuotationAccount_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _QuotationAccountDao_updateContractActiveRule_args__isset {
  _QuotationAccountDao_updateContractActiveRule_args__isset() : platformArgs(false), rule(false) {}
  bool platformArgs;
  bool rule;
} _QuotationAccountDao_updateContractActiveRule_args__isset;

class QuotationAccountDao_updateContractActiveRule_args {
 public:

  QuotationAccountDao_updateContractActiveRule_args() {
  }

  virtual ~QuotationAccountDao_updateContractActiveRule_args() throw() {}

   ::platform::comm::PlatformArgs platformArgs;
   ::ContractActiveRule rule;

  _QuotationAccountDao_updateContractActiveRule_args__isset __isset;

  void __set_platformArgs(const  ::platform::comm::PlatformArgs& val) {
    platformArgs = val;
  }

  void __set_rule(const  ::ContractActiveRule& val) {
    rule = val;
  }

  bool operator == (const QuotationAccountDao_updateContractActiveRule_args & rhs) const
  {
    if (!(platformArgs == rhs.platformArgs))
      return false;
    if (!(rule == rhs.rule))
      return false;
    return true;
  }
  bool operator != (const QuotationAccountDao_updateContractActiveRule_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const QuotationAccountDao_updateContractActiveRule_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class QuotationAccountDao_updateContractActiveRule_pargs {
 public:


  virtual ~QuotationAccountDao_updateContractActiveRule_pargs() throw() {}

  const  ::platform::comm::PlatformArgs* platformArgs;
  const  ::ContractActiveRule* rule;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _QuotationAccountDao_updateContractActiveRule_result__isset {
  _QuotationAccountDao_updateContractActiveRule_result__isset() : err(false) {}
  bool err;
} _QuotationAccountDao_updateContractActiveRule_result__isset;

class QuotationAccountDao_updateContractActiveRule_result {
 public:

  QuotationAccountDao_updateContractActiveRule_result() {
  }

  virtual ~QuotationAccountDao_updateContractActiveRule_result() throw() {}

   ::platform::comm::ErrorInfo err;

  _QuotationAccountDao_updateContractActiveRule_result__isset __isset;

  void __set_err(const  ::platform::comm::ErrorInfo& val) {
    err = val;
  }

  bool operator == (const QuotationAccountDao_updateContractActiveRule_result & rhs) const
  {
    if (!(err == rhs.err))
      return false;
    return true;
  }
  bool operator != (const QuotationAccountDao_updateContractActiveRule_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const QuotationAccountDao_updateContractActiveRule_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _QuotationAccountDao_updateContractActiveRule_presult__isset {
  _QuotationAccountDao_updateContractActiveRule_presult__isset() : err(false) {}
  bool err;
} _QuotationAccountDao_updateContractActiveRule_presult__isset;

class QuotationAccountDao_updateContractActiveRule_presult {
 public:


  virtual ~QuotationAccountDao_updateContractActiveRule_presult() throw() {}

   ::platform::comm::ErrorInfo err;

  _QuotationAccountDao_updateContractActiveRule_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _QuotationAccountDao_updateContractRegisterRule_args__isset {
  _QuotationAccountDao_updateContractRegisterRule_args__isset() : platformArgs(false), rule(false) {}
  bool platformArgs;
  bool rule;
} _QuotationAccountDao_updateContractRegisterRule_args__isset;

class QuotationAccountDao_updateContractRegisterRule_args {
 public:

  QuotationAccountDao_updateContractRegisterRule_args() {
  }

  virtual ~QuotationAccountDao_updateContractRegisterRule_args() throw() {}

   ::platform::comm::PlatformArgs platformArgs;
   ::ContractRegisterRule rule;

  _QuotationAccountDao_updateContractRegisterRule_args__isset __isset;

  void __set_platformArgs(const  ::platform::comm::PlatformArgs& val) {
    platformArgs = val;
  }

  void __set_rule(const  ::ContractRegisterRule& val) {
    rule = val;
  }

  bool operator == (const QuotationAccountDao_updateContractRegisterRule_args & rhs) const
  {
    if (!(platformArgs == rhs.platformArgs))
      return false;
    if (!(rule == rhs.rule))
      return false;
    return true;
  }
  bool operator != (const QuotationAccountDao_updateContractRegisterRule_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const QuotationAccountDao_updateContractRegisterRule_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class QuotationAccountDao_updateContractRegisterRule_pargs {
 public:


  virtual ~QuotationAccountDao_updateContractRegisterRule_pargs() throw() {}

  const  ::platform::comm::PlatformArgs* platformArgs;
  const  ::ContractRegisterRule* rule;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _QuotationAccountDao_updateContractRegisterRule_result__isset {
  _QuotationAccountDao_updateContractRegisterRule_result__isset() : err(false) {}
  bool err;
} _QuotationAccountDao_updateContractRegisterRule_result__isset;

class QuotationAccountDao_updateContractRegisterRule_result {
 public:

  QuotationAccountDao_updateContractRegisterRule_result() {
  }

  virtual ~QuotationAccountDao_updateContractRegisterRule_result() throw() {}

   ::platform::comm::ErrorInfo err;

  _QuotationAccountDao_updateContractRegisterRule_result__isset __isset;

  void __set_err(const  ::platform::comm::ErrorInfo& val) {
    err = val;
  }

  bool operator == (const QuotationAccountDao_updateContractRegisterRule_result & rhs) const
  {
    if (!(err == rhs.err))
      return false;
    return true;
  }
  bool operator != (const QuotationAccountDao_updateContractRegisterRule_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const QuotationAccountDao_updateContractRegisterRule_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _QuotationAccountDao_updateContractRegisterRule_presult__isset {
  _QuotationAccountDao_updateContractRegisterRule_presult__isset() : err(false) {}
  bool err;
} _QuotationAccountDao_updateContractRegisterRule_presult__isset;

class QuotationAccountDao_updateContractRegisterRule_presult {
 public:


  virtual ~QuotationAccountDao_updateContractRegisterRule_presult() throw() {}

   ::platform::comm::ErrorInfo err;

  _QuotationAccountDao_updateContractRegisterRule_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _QuotationAccountDao_updateQuotationAccount_args__isset {
  _QuotationAccountDao_updateQuotationAccount_args__isset() : platformArgs(false), account(false) {}
  bool platformArgs;
  bool account;
} _QuotationAccountDao_updateQuotationAccount_args__isset;

class QuotationAccountDao_updateQuotationAccount_args {
 public:

  QuotationAccountDao_updateQuotationAccount_args() {
  }

  virtual ~QuotationAccountDao_updateQuotationAccount_args() throw() {}

   ::platform::comm::PlatformArgs platformArgs;
   ::QuotationAccount account;

  _QuotationAccountDao_updateQuotationAccount_args__isset __isset;

  void __set_platformArgs(const  ::platform::comm::PlatformArgs& val) {
    platformArgs = val;
  }

  void __set_account(const  ::QuotationAccount& val) {
    account = val;
  }

  bool operator == (const QuotationAccountDao_updateQuotationAccount_args & rhs) const
  {
    if (!(platformArgs == rhs.platformArgs))
      return false;
    if (!(account == rhs.account))
      return false;
    return true;
  }
  bool operator != (const QuotationAccountDao_updateQuotationAccount_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const QuotationAccountDao_updateQuotationAccount_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class QuotationAccountDao_updateQuotationAccount_pargs {
 public:


  virtual ~QuotationAccountDao_updateQuotationAccount_pargs() throw() {}

  const  ::platform::comm::PlatformArgs* platformArgs;
  const  ::QuotationAccount* account;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _QuotationAccountDao_updateQuotationAccount_result__isset {
  _QuotationAccountDao_updateQuotationAccount_result__isset() : err(false) {}
  bool err;
} _QuotationAccountDao_updateQuotationAccount_result__isset;

class QuotationAccountDao_updateQuotationAccount_result {
 public:

  QuotationAccountDao_updateQuotationAccount_result() {
  }

  virtual ~QuotationAccountDao_updateQuotationAccount_result() throw() {}

   ::platform::comm::ErrorInfo err;

  _QuotationAccountDao_updateQuotationAccount_result__isset __isset;

  void __set_err(const  ::platform::comm::ErrorInfo& val) {
    err = val;
  }

  bool operator == (const QuotationAccountDao_updateQuotationAccount_result & rhs) const
  {
    if (!(err == rhs.err))
      return false;
    return true;
  }
  bool operator != (const QuotationAccountDao_updateQuotationAccount_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const QuotationAccountDao_updateQuotationAccount_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _QuotationAccountDao_updateQuotationAccount_presult__isset {
  _QuotationAccountDao_updateQuotationAccount_presult__isset() : err(false) {}
  bool err;
} _QuotationAccountDao_updateQuotationAccount_presult__isset;

class QuotationAccountDao_updateQuotationAccount_presult {
 public:


  virtual ~QuotationAccountDao_updateQuotationAccount_presult() throw() {}

   ::platform::comm::ErrorInfo err;

  _QuotationAccountDao_updateQuotationAccount_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _QuotationAccountDao_removeContractActiveRule_args__isset {
  _QuotationAccountDao_removeContractActiveRule_args__isset() : platformArgs(false), sledCommodityId(false) {}
  bool platformArgs;
  bool sledCommodityId;
} _QuotationAccountDao_removeContractActiveRule_args__isset;

class QuotationAccountDao_removeContractActiveRule_args {
 public:

  QuotationAccountDao_removeContractActiveRule_args() : sledCommodityId(0) {
  }

  virtual ~QuotationAccountDao_removeContractActiveRule_args() throw() {}

   ::platform::comm::PlatformArgs platformArgs;
  int32_t sledCommodityId;

  _QuotationAccountDao_removeContractActiveRule_args__isset __isset;

  void __set_platformArgs(const  ::platform::comm::PlatformArgs& val) {
    platformArgs = val;
  }

  void __set_sledCommodityId(const int32_t val) {
    sledCommodityId = val;
  }

  bool operator == (const QuotationAccountDao_removeContractActiveRule_args & rhs) const
  {
    if (!(platformArgs == rhs.platformArgs))
      return false;
    if (!(sledCommodityId == rhs.sledCommodityId))
      return false;
    return true;
  }
  bool operator != (const QuotationAccountDao_removeContractActiveRule_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const QuotationAccountDao_removeContractActiveRule_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class QuotationAccountDao_removeContractActiveRule_pargs {
 public:


  virtual ~QuotationAccountDao_removeContractActiveRule_pargs() throw() {}

  const  ::platform::comm::PlatformArgs* platformArgs;
  const int32_t* sledCommodityId;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _QuotationAccountDao_removeContractActiveRule_result__isset {
  _QuotationAccountDao_removeContractActiveRule_result__isset() : err(false) {}
  bool err;
} _QuotationAccountDao_removeContractActiveRule_result__isset;

class QuotationAccountDao_removeContractActiveRule_result {
 public:

  QuotationAccountDao_removeContractActiveRule_result() {
  }

  virtual ~QuotationAccountDao_removeContractActiveRule_result() throw() {}

   ::platform::comm::ErrorInfo err;

  _QuotationAccountDao_removeContractActiveRule_result__isset __isset;

  void __set_err(const  ::platform::comm::ErrorInfo& val) {
    err = val;
  }

  bool operator == (const QuotationAccountDao_removeContractActiveRule_result & rhs) const
  {
    if (!(err == rhs.err))
      return false;
    return true;
  }
  bool operator != (const QuotationAccountDao_removeContractActiveRule_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const QuotationAccountDao_removeContractActiveRule_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _QuotationAccountDao_removeContractActiveRule_presult__isset {
  _QuotationAccountDao_removeContractActiveRule_presult__isset() : err(false) {}
  bool err;
} _QuotationAccountDao_removeContractActiveRule_presult__isset;

class QuotationAccountDao_removeContractActiveRule_presult {
 public:


  virtual ~QuotationAccountDao_removeContractActiveRule_presult() throw() {}

   ::platform::comm::ErrorInfo err;

  _QuotationAccountDao_removeContractActiveRule_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _QuotationAccountDao_removeContractRegisterRule_args__isset {
  _QuotationAccountDao_removeContractRegisterRule_args__isset() : platformArgs(false), sledCommodityId(false), platformEnv(false) {}
  bool platformArgs;
  bool sledCommodityId;
  bool platformEnv;
} _QuotationAccountDao_removeContractRegisterRule_args__isset;

class QuotationAccountDao_removeContractRegisterRule_args {
 public:

  QuotationAccountDao_removeContractRegisterRule_args() : sledCommodityId(0), platformEnv(( ::QuotationPlatformEnv::type)0) {
  }

  virtual ~QuotationAccountDao_removeContractRegisterRule_args() throw() {}

   ::platform::comm::PlatformArgs platformArgs;
  int32_t sledCommodityId;
   ::QuotationPlatformEnv::type platformEnv;

  _QuotationAccountDao_removeContractRegisterRule_args__isset __isset;

  void __set_platformArgs(const  ::platform::comm::PlatformArgs& val) {
    platformArgs = val;
  }

  void __set_sledCommodityId(const int32_t val) {
    sledCommodityId = val;
  }

  void __set_platformEnv(const  ::QuotationPlatformEnv::type val) {
    platformEnv = val;
  }

  bool operator == (const QuotationAccountDao_removeContractRegisterRule_args & rhs) const
  {
    if (!(platformArgs == rhs.platformArgs))
      return false;
    if (!(sledCommodityId == rhs.sledCommodityId))
      return false;
    if (!(platformEnv == rhs.platformEnv))
      return false;
    return true;
  }
  bool operator != (const QuotationAccountDao_removeContractRegisterRule_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const QuotationAccountDao_removeContractRegisterRule_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class QuotationAccountDao_removeContractRegisterRule_pargs {
 public:


  virtual ~QuotationAccountDao_removeContractRegisterRule_pargs() throw() {}

  const  ::platform::comm::PlatformArgs* platformArgs;
  const int32_t* sledCommodityId;
  const  ::QuotationPlatformEnv::type* platformEnv;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _QuotationAccountDao_removeContractRegisterRule_result__isset {
  _QuotationAccountDao_removeContractRegisterRule_result__isset() : err(false) {}
  bool err;
} _QuotationAccountDao_removeContractRegisterRule_result__isset;

class QuotationAccountDao_removeContractRegisterRule_result {
 public:

  QuotationAccountDao_removeContractRegisterRule_result() {
  }

  virtual ~QuotationAccountDao_removeContractRegisterRule_result() throw() {}

   ::platform::comm::ErrorInfo err;

  _QuotationAccountDao_removeContractRegisterRule_result__isset __isset;

  void __set_err(const  ::platform::comm::ErrorInfo& val) {
    err = val;
  }

  bool operator == (const QuotationAccountDao_removeContractRegisterRule_result & rhs) const
  {
    if (!(err == rhs.err))
      return false;
    return true;
  }
  bool operator != (const QuotationAccountDao_removeContractRegisterRule_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const QuotationAccountDao_removeContractRegisterRule_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _QuotationAccountDao_removeContractRegisterRule_presult__isset {
  _QuotationAccountDao_removeContractRegisterRule_presult__isset() : err(false) {}
  bool err;
} _QuotationAccountDao_removeContractRegisterRule_presult__isset;

class QuotationAccountDao_removeContractRegisterRule_presult {
 public:


  virtual ~QuotationAccountDao_removeContractRegisterRule_presult() throw() {}

   ::platform::comm::ErrorInfo err;

  _QuotationAccountDao_removeContractRegisterRule_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _QuotationAccountDao_removeQuotationAccount_args__isset {
  _QuotationAccountDao_removeQuotationAccount_args__isset() : platformArgs(false), accountId(false) {}
  bool platformArgs;
  bool accountId;
} _QuotationAccountDao_removeQuotationAccount_args__isset;

class QuotationAccountDao_removeQuotationAccount_args {
 public:

  QuotationAccountDao_removeQuotationAccount_args() : accountId(0) {
  }

  virtual ~QuotationAccountDao_removeQuotationAccount_args() throw() {}

   ::platform::comm::PlatformArgs platformArgs;
  int64_t accountId;

  _QuotationAccountDao_removeQuotationAccount_args__isset __isset;

  void __set_platformArgs(const  ::platform::comm::PlatformArgs& val) {
    platformArgs = val;
  }

  void __set_accountId(const int64_t val) {
    accountId = val;
  }

  bool operator == (const QuotationAccountDao_removeQuotationAccount_args & rhs) const
  {
    if (!(platformArgs == rhs.platformArgs))
      return false;
    if (!(accountId == rhs.accountId))
      return false;
    return true;
  }
  bool operator != (const QuotationAccountDao_removeQuotationAccount_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const QuotationAccountDao_removeQuotationAccount_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class QuotationAccountDao_removeQuotationAccount_pargs {
 public:


  virtual ~QuotationAccountDao_removeQuotationAccount_pargs() throw() {}

  const  ::platform::comm::PlatformArgs* platformArgs;
  const int64_t* accountId;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _QuotationAccountDao_removeQuotationAccount_result__isset {
  _QuotationAccountDao_removeQuotationAccount_result__isset() : err(false) {}
  bool err;
} _QuotationAccountDao_removeQuotationAccount_result__isset;

class QuotationAccountDao_removeQuotationAccount_result {
 public:

  QuotationAccountDao_removeQuotationAccount_result() {
  }

  virtual ~QuotationAccountDao_removeQuotationAccount_result() throw() {}

   ::platform::comm::ErrorInfo err;

  _QuotationAccountDao_removeQuotationAccount_result__isset __isset;

  void __set_err(const  ::platform::comm::ErrorInfo& val) {
    err = val;
  }

  bool operator == (const QuotationAccountDao_removeQuotationAccount_result & rhs) const
  {
    if (!(err == rhs.err))
      return false;
    return true;
  }
  bool operator != (const QuotationAccountDao_removeQuotationAccount_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const QuotationAccountDao_removeQuotationAccount_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _QuotationAccountDao_removeQuotationAccount_presult__isset {
  _QuotationAccountDao_removeQuotationAccount_presult__isset() : err(false) {}
  bool err;
} _QuotationAccountDao_removeQuotationAccount_presult__isset;

class QuotationAccountDao_removeQuotationAccount_presult {
 public:


  virtual ~QuotationAccountDao_removeQuotationAccount_presult() throw() {}

   ::platform::comm::ErrorInfo err;

  _QuotationAccountDao_removeQuotationAccount_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _QuotationAccountDao_reqAccountCommodityRegisterAbility_args__isset {
  _QuotationAccountDao_reqAccountCommodityRegisterAbility_args__isset() : platformArgs(false), option(false), pageOption(false) {}
  bool platformArgs;
  bool option;
  bool pageOption;
} _QuotationAccountDao_reqAccountCommodityRegisterAbility_args__isset;

class QuotationAccountDao_reqAccountCommodityRegisterAbility_args {
 public:

  QuotationAccountDao_reqAccountCommodityRegisterAbility_args() {
  }

  virtual ~QuotationAccountDao_reqAccountCommodityRegisterAbility_args() throw() {}

   ::platform::comm::PlatformArgs platformArgs;
   ::ReqAccountCommodityRegisterAbilityOption option;
   ::platform::page::IndexedPageOption pageOption;

  _QuotationAccountDao_reqAccountCommodityRegisterAbility_args__isset __isset;

  void __set_platformArgs(const  ::platform::comm::PlatformArgs& val) {
    platformArgs = val;
  }

  void __set_option(const  ::ReqAccountCommodityRegisterAbilityOption& val) {
    option = val;
  }

  void __set_pageOption(const  ::platform::page::IndexedPageOption& val) {
    pageOption = val;
  }

  bool operator == (const QuotationAccountDao_reqAccountCommodityRegisterAbility_args & rhs) const
  {
    if (!(platformArgs == rhs.platformArgs))
      return false;
    if (!(option == rhs.option))
      return false;
    if (!(pageOption == rhs.pageOption))
      return false;
    return true;
  }
  bool operator != (const QuotationAccountDao_reqAccountCommodityRegisterAbility_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const QuotationAccountDao_reqAccountCommodityRegisterAbility_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class QuotationAccountDao_reqAccountCommodityRegisterAbility_pargs {
 public:


  virtual ~QuotationAccountDao_reqAccountCommodityRegisterAbility_pargs() throw() {}

  const  ::platform::comm::PlatformArgs* platformArgs;
  const  ::ReqAccountCommodityRegisterAbilityOption* option;
  const  ::platform::page::IndexedPageOption* pageOption;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _QuotationAccountDao_reqAccountCommodityRegisterAbility_result__isset {
  _QuotationAccountDao_reqAccountCommodityRegisterAbility_result__isset() : success(false), err(false) {}
  bool success;
  bool err;
} _QuotationAccountDao_reqAccountCommodityRegisterAbility_result__isset;

class QuotationAccountDao_reqAccountCommodityRegisterAbility_result {
 public:

  QuotationAccountDao_reqAccountCommodityRegisterAbility_result() {
  }

  virtual ~QuotationAccountDao_reqAccountCommodityRegisterAbility_result() throw() {}

   ::AccountCommodityRegisterAbilityPage success;
   ::platform::comm::ErrorInfo err;

  _QuotationAccountDao_reqAccountCommodityRegisterAbility_result__isset __isset;

  void __set_success(const  ::AccountCommodityRegisterAbilityPage& val) {
    success = val;
  }

  void __set_err(const  ::platform::comm::ErrorInfo& val) {
    err = val;
  }

  bool operator == (const QuotationAccountDao_reqAccountCommodityRegisterAbility_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(err == rhs.err))
      return false;
    return true;
  }
  bool operator != (const QuotationAccountDao_reqAccountCommodityRegisterAbility_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const QuotationAccountDao_reqAccountCommodityRegisterAbility_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _QuotationAccountDao_reqAccountCommodityRegisterAbility_presult__isset {
  _QuotationAccountDao_reqAccountCommodityRegisterAbility_presult__isset() : success(false), err(false) {}
  bool success;
  bool err;
} _QuotationAccountDao_reqAccountCommodityRegisterAbility_presult__isset;

class QuotationAccountDao_reqAccountCommodityRegisterAbility_presult {
 public:


  virtual ~QuotationAccountDao_reqAccountCommodityRegisterAbility_presult() throw() {}

   ::AccountCommodityRegisterAbilityPage* success;
   ::platform::comm::ErrorInfo err;

  _QuotationAccountDao_reqAccountCommodityRegisterAbility_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _QuotationAccountDao_addAccountCommodityRegisterAbility_args__isset {
  _QuotationAccountDao_addAccountCommodityRegisterAbility_args__isset() : platformArgs(false), ability(false) {}
  bool platformArgs;
  bool ability;
} _QuotationAccountDao_addAccountCommodityRegisterAbility_args__isset;

class QuotationAccountDao_addAccountCommodityRegisterAbility_args {
 public:

  QuotationAccountDao_addAccountCommodityRegisterAbility_args() {
  }

  virtual ~QuotationAccountDao_addAccountCommodityRegisterAbility_args() throw() {}

   ::platform::comm::PlatformArgs platformArgs;
   ::AccountCommodityRegisterAbility ability;

  _QuotationAccountDao_addAccountCommodityRegisterAbility_args__isset __isset;

  void __set_platformArgs(const  ::platform::comm::PlatformArgs& val) {
    platformArgs = val;
  }

  void __set_ability(const  ::AccountCommodityRegisterAbility& val) {
    ability = val;
  }

  bool operator == (const QuotationAccountDao_addAccountCommodityRegisterAbility_args & rhs) const
  {
    if (!(platformArgs == rhs.platformArgs))
      return false;
    if (!(ability == rhs.ability))
      return false;
    return true;
  }
  bool operator != (const QuotationAccountDao_addAccountCommodityRegisterAbility_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const QuotationAccountDao_addAccountCommodityRegisterAbility_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class QuotationAccountDao_addAccountCommodityRegisterAbility_pargs {
 public:


  virtual ~QuotationAccountDao_addAccountCommodityRegisterAbility_pargs() throw() {}

  const  ::platform::comm::PlatformArgs* platformArgs;
  const  ::AccountCommodityRegisterAbility* ability;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _QuotationAccountDao_addAccountCommodityRegisterAbility_result__isset {
  _QuotationAccountDao_addAccountCommodityRegisterAbility_result__isset() : err(false) {}
  bool err;
} _QuotationAccountDao_addAccountCommodityRegisterAbility_result__isset;

class QuotationAccountDao_addAccountCommodityRegisterAbility_result {
 public:

  QuotationAccountDao_addAccountCommodityRegisterAbility_result() {
  }

  virtual ~QuotationAccountDao_addAccountCommodityRegisterAbility_result() throw() {}

   ::platform::comm::ErrorInfo err;

  _QuotationAccountDao_addAccountCommodityRegisterAbility_result__isset __isset;

  void __set_err(const  ::platform::comm::ErrorInfo& val) {
    err = val;
  }

  bool operator == (const QuotationAccountDao_addAccountCommodityRegisterAbility_result & rhs) const
  {
    if (!(err == rhs.err))
      return false;
    return true;
  }
  bool operator != (const QuotationAccountDao_addAccountCommodityRegisterAbility_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const QuotationAccountDao_addAccountCommodityRegisterAbility_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _QuotationAccountDao_addAccountCommodityRegisterAbility_presult__isset {
  _QuotationAccountDao_addAccountCommodityRegisterAbility_presult__isset() : err(false) {}
  bool err;
} _QuotationAccountDao_addAccountCommodityRegisterAbility_presult__isset;

class QuotationAccountDao_addAccountCommodityRegisterAbility_presult {
 public:


  virtual ~QuotationAccountDao_addAccountCommodityRegisterAbility_presult() throw() {}

   ::platform::comm::ErrorInfo err;

  _QuotationAccountDao_addAccountCommodityRegisterAbility_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _QuotationAccountDao_removeAccountCommodityRegisterAbility_args__isset {
  _QuotationAccountDao_removeAccountCommodityRegisterAbility_args__isset() : platformArgs(false), supportAbilityId(false) {}
  bool platformArgs;
  bool supportAbilityId;
} _QuotationAccountDao_removeAccountCommodityRegisterAbility_args__isset;

class QuotationAccountDao_removeAccountCommodityRegisterAbility_args {
 public:

  QuotationAccountDao_removeAccountCommodityRegisterAbility_args() : supportAbilityId(0) {
  }

  virtual ~QuotationAccountDao_removeAccountCommodityRegisterAbility_args() throw() {}

   ::platform::comm::PlatformArgs platformArgs;
  int64_t supportAbilityId;

  _QuotationAccountDao_removeAccountCommodityRegisterAbility_args__isset __isset;

  void __set_platformArgs(const  ::platform::comm::PlatformArgs& val) {
    platformArgs = val;
  }

  void __set_supportAbilityId(const int64_t val) {
    supportAbilityId = val;
  }

  bool operator == (const QuotationAccountDao_removeAccountCommodityRegisterAbility_args & rhs) const
  {
    if (!(platformArgs == rhs.platformArgs))
      return false;
    if (!(supportAbilityId == rhs.supportAbilityId))
      return false;
    return true;
  }
  bool operator != (const QuotationAccountDao_removeAccountCommodityRegisterAbility_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const QuotationAccountDao_removeAccountCommodityRegisterAbility_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class QuotationAccountDao_removeAccountCommodityRegisterAbility_pargs {
 public:


  virtual ~QuotationAccountDao_removeAccountCommodityRegisterAbility_pargs() throw() {}

  const  ::platform::comm::PlatformArgs* platformArgs;
  const int64_t* supportAbilityId;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _QuotationAccountDao_removeAccountCommodityRegisterAbility_result__isset {
  _QuotationAccountDao_removeAccountCommodityRegisterAbility_result__isset() : err(false) {}
  bool err;
} _QuotationAccountDao_removeAccountCommodityRegisterAbility_result__isset;

class QuotationAccountDao_removeAccountCommodityRegisterAbility_result {
 public:

  QuotationAccountDao_removeAccountCommodityRegisterAbility_result() {
  }

  virtual ~QuotationAccountDao_removeAccountCommodityRegisterAbility_result() throw() {}

   ::platform::comm::ErrorInfo err;

  _QuotationAccountDao_removeAccountCommodityRegisterAbility_result__isset __isset;

  void __set_err(const  ::platform::comm::ErrorInfo& val) {
    err = val;
  }

  bool operator == (const QuotationAccountDao_removeAccountCommodityRegisterAbility_result & rhs) const
  {
    if (!(err == rhs.err))
      return false;
    return true;
  }
  bool operator != (const QuotationAccountDao_removeAccountCommodityRegisterAbility_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const QuotationAccountDao_removeAccountCommodityRegisterAbility_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _QuotationAccountDao_removeAccountCommodityRegisterAbility_presult__isset {
  _QuotationAccountDao_removeAccountCommodityRegisterAbility_presult__isset() : err(false) {}
  bool err;
} _QuotationAccountDao_removeAccountCommodityRegisterAbility_presult__isset;

class QuotationAccountDao_removeAccountCommodityRegisterAbility_presult {
 public:


  virtual ~QuotationAccountDao_removeAccountCommodityRegisterAbility_presult() throw() {}

   ::platform::comm::ErrorInfo err;

  _QuotationAccountDao_removeAccountCommodityRegisterAbility_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _QuotationAccountDao_reqQuotationAccountSupport_args__isset {
  _QuotationAccountDao_reqQuotationAccountSupport_args__isset() : platformArgs(false), option(false), pageOption(false) {}
  bool platformArgs;
  bool option;
  bool pageOption;
} _QuotationAccountDao_reqQuotationAccountSupport_args__isset;

class QuotationAccountDao_reqQuotationAccountSupport_args {
 public:

  QuotationAccountDao_reqQuotationAccountSupport_args() {
  }

  virtual ~QuotationAccountDao_reqQuotationAccountSupport_args() throw() {}

   ::platform::comm::PlatformArgs platformArgs;
   ::ReqQuotationAccountSupportOption option;
   ::platform::page::IndexedPageOption pageOption;

  _QuotationAccountDao_reqQuotationAccountSupport_args__isset __isset;

  void __set_platformArgs(const  ::platform::comm::PlatformArgs& val) {
    platformArgs = val;
  }

  void __set_option(const  ::ReqQuotationAccountSupportOption& val) {
    option = val;
  }

  void __set_pageOption(const  ::platform::page::IndexedPageOption& val) {
    pageOption = val;
  }

  bool operator == (const QuotationAccountDao_reqQuotationAccountSupport_args & rhs) const
  {
    if (!(platformArgs == rhs.platformArgs))
      return false;
    if (!(option == rhs.option))
      return false;
    if (!(pageOption == rhs.pageOption))
      return false;
    return true;
  }
  bool operator != (const QuotationAccountDao_reqQuotationAccountSupport_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const QuotationAccountDao_reqQuotationAccountSupport_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class QuotationAccountDao_reqQuotationAccountSupport_pargs {
 public:


  virtual ~QuotationAccountDao_reqQuotationAccountSupport_pargs() throw() {}

  const  ::platform::comm::PlatformArgs* platformArgs;
  const  ::ReqQuotationAccountSupportOption* option;
  const  ::platform::page::IndexedPageOption* pageOption;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _QuotationAccountDao_reqQuotationAccountSupport_result__isset {
  _QuotationAccountDao_reqQuotationAccountSupport_result__isset() : success(false), err(false) {}
  bool success;
  bool err;
} _QuotationAccountDao_reqQuotationAccountSupport_result__isset;

class QuotationAccountDao_reqQuotationAccountSupport_result {
 public:

  QuotationAccountDao_reqQuotationAccountSupport_result() {
  }

  virtual ~QuotationAccountDao_reqQuotationAccountSupport_result() throw() {}

   ::QuotationAccountSupportPage success;
   ::platform::comm::ErrorInfo err;

  _QuotationAccountDao_reqQuotationAccountSupport_result__isset __isset;

  void __set_success(const  ::QuotationAccountSupportPage& val) {
    success = val;
  }

  void __set_err(const  ::platform::comm::ErrorInfo& val) {
    err = val;
  }

  bool operator == (const QuotationAccountDao_reqQuotationAccountSupport_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(err == rhs.err))
      return false;
    return true;
  }
  bool operator != (const QuotationAccountDao_reqQuotationAccountSupport_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const QuotationAccountDao_reqQuotationAccountSupport_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _QuotationAccountDao_reqQuotationAccountSupport_presult__isset {
  _QuotationAccountDao_reqQuotationAccountSupport_presult__isset() : success(false), err(false) {}
  bool success;
  bool err;
} _QuotationAccountDao_reqQuotationAccountSupport_presult__isset;

class QuotationAccountDao_reqQuotationAccountSupport_presult {
 public:


  virtual ~QuotationAccountDao_reqQuotationAccountSupport_presult() throw() {}

   ::QuotationAccountSupportPage* success;
   ::platform::comm::ErrorInfo err;

  _QuotationAccountDao_reqQuotationAccountSupport_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _QuotationAccountDao_setCommodityRegisterOrderIndex_args__isset {
  _QuotationAccountDao_setCommodityRegisterOrderIndex_args__isset() : platformArgs(false), sledCommodityId(false), platformEnv(false), orderIndex(false) {}
  bool platformArgs;
  bool sledCommodityId;
  bool platformEnv;
  bool orderIndex;
} _QuotationAccountDao_setCommodityRegisterOrderIndex_args__isset;

class QuotationAccountDao_setCommodityRegisterOrderIndex_args {
 public:

  QuotationAccountDao_setCommodityRegisterOrderIndex_args() : sledCommodityId(0), platformEnv(( ::QuotationPlatformEnv::type)0), orderIndex(0) {
  }

  virtual ~QuotationAccountDao_setCommodityRegisterOrderIndex_args() throw() {}

   ::platform::comm::PlatformArgs platformArgs;
  int32_t sledCommodityId;
   ::QuotationPlatformEnv::type platformEnv;
  int32_t orderIndex;

  _QuotationAccountDao_setCommodityRegisterOrderIndex_args__isset __isset;

  void __set_platformArgs(const  ::platform::comm::PlatformArgs& val) {
    platformArgs = val;
  }

  void __set_sledCommodityId(const int32_t val) {
    sledCommodityId = val;
  }

  void __set_platformEnv(const  ::QuotationPlatformEnv::type val) {
    platformEnv = val;
  }

  void __set_orderIndex(const int32_t val) {
    orderIndex = val;
  }

  bool operator == (const QuotationAccountDao_setCommodityRegisterOrderIndex_args & rhs) const
  {
    if (!(platformArgs == rhs.platformArgs))
      return false;
    if (!(sledCommodityId == rhs.sledCommodityId))
      return false;
    if (!(platformEnv == rhs.platformEnv))
      return false;
    if (!(orderIndex == rhs.orderIndex))
      return false;
    return true;
  }
  bool operator != (const QuotationAccountDao_setCommodityRegisterOrderIndex_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const QuotationAccountDao_setCommodityRegisterOrderIndex_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class QuotationAccountDao_setCommodityRegisterOrderIndex_pargs {
 public:


  virtual ~QuotationAccountDao_setCommodityRegisterOrderIndex_pargs() throw() {}

  const  ::platform::comm::PlatformArgs* platformArgs;
  const int32_t* sledCommodityId;
  const  ::QuotationPlatformEnv::type* platformEnv;
  const int32_t* orderIndex;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _QuotationAccountDao_setCommodityRegisterOrderIndex_result__isset {
  _QuotationAccountDao_setCommodityRegisterOrderIndex_result__isset() : err(false) {}
  bool err;
} _QuotationAccountDao_setCommodityRegisterOrderIndex_result__isset;

class QuotationAccountDao_setCommodityRegisterOrderIndex_result {
 public:

  QuotationAccountDao_setCommodityRegisterOrderIndex_result() {
  }

  virtual ~QuotationAccountDao_setCommodityRegisterOrderIndex_result() throw() {}

   ::platform::comm::ErrorInfo err;

  _QuotationAccountDao_setCommodityRegisterOrderIndex_result__isset __isset;

  void __set_err(const  ::platform::comm::ErrorInfo& val) {
    err = val;
  }

  bool operator == (const QuotationAccountDao_setCommodityRegisterOrderIndex_result & rhs) const
  {
    if (!(err == rhs.err))
      return false;
    return true;
  }
  bool operator != (const QuotationAccountDao_setCommodityRegisterOrderIndex_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const QuotationAccountDao_setCommodityRegisterOrderIndex_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _QuotationAccountDao_setCommodityRegisterOrderIndex_presult__isset {
  _QuotationAccountDao_setCommodityRegisterOrderIndex_presult__isset() : err(false) {}
  bool err;
} _QuotationAccountDao_setCommodityRegisterOrderIndex_presult__isset;

class QuotationAccountDao_setCommodityRegisterOrderIndex_presult {
 public:


  virtual ~QuotationAccountDao_setCommodityRegisterOrderIndex_presult() throw() {}

   ::platform::comm::ErrorInfo err;

  _QuotationAccountDao_setCommodityRegisterOrderIndex_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

class QuotationAccountDaoClient : virtual public QuotationAccountDaoIf {
 public:
  QuotationAccountDaoClient(boost::shared_ptr< ::apache::thrift::protocol::TProtocol> prot) :
    piprot_(prot),
    poprot_(prot) {
    iprot_ = prot.get();
    oprot_ = prot.get();
  }
  QuotationAccountDaoClient(boost::shared_ptr< ::apache::thrift::protocol::TProtocol> iprot, boost::shared_ptr< ::apache::thrift::protocol::TProtocol> oprot) :
    piprot_(iprot),
    poprot_(oprot) {
    iprot_ = iprot.get();
    oprot_ = oprot.get();
  }
  boost::shared_ptr< ::apache::thrift::protocol::TProtocol> getInputProtocol() {
    return piprot_;
  }
  boost::shared_ptr< ::apache::thrift::protocol::TProtocol> getOutputProtocol() {
    return poprot_;
  }
  void reqContractActiveRule( ::ContractActiveRulePage& _return, const  ::platform::comm::PlatformArgs& platformArgs, const  ::ReqContractActiveRuleOption& option, const  ::platform::page::IndexedPageOption& pageOption);
  void send_reqContractActiveRule(const  ::platform::comm::PlatformArgs& platformArgs, const  ::ReqContractActiveRuleOption& option, const  ::platform::page::IndexedPageOption& pageOption);
  void recv_reqContractActiveRule( ::ContractActiveRulePage& _return);
  void reqContractRegisterRule( ::ContractRegisterRulePage& _return, const  ::platform::comm::PlatformArgs& platformArgs, const  ::ReqContractRegisterRuleOption& option, const  ::platform::page::IndexedPageOption& pageOption);
  void send_reqContractRegisterRule(const  ::platform::comm::PlatformArgs& platformArgs, const  ::ReqContractRegisterRuleOption& option, const  ::platform::page::IndexedPageOption& pageOption);
  void recv_reqContractRegisterRule( ::ContractRegisterRulePage& _return);
  void reqQuotationAccount( ::QuotationAccountPage& _return, const  ::platform::comm::PlatformArgs& platformArgs, const  ::ReqQuotationAccountOption& option, const  ::platform::page::IndexedPageOption& pageOption);
  void send_reqQuotationAccount(const  ::platform::comm::PlatformArgs& platformArgs, const  ::ReqQuotationAccountOption& option, const  ::platform::page::IndexedPageOption& pageOption);
  void recv_reqQuotationAccount( ::QuotationAccountPage& _return);
  void addContractActiveRule(const  ::platform::comm::PlatformArgs& platformArgs, const  ::ContractActiveRule& rule);
  void send_addContractActiveRule(const  ::platform::comm::PlatformArgs& platformArgs, const  ::ContractActiveRule& rule);
  void recv_addContractActiveRule();
  void addContractRegisterRule(const  ::platform::comm::PlatformArgs& platformArgs, const  ::ContractRegisterRule& rule);
  void send_addContractRegisterRule(const  ::platform::comm::PlatformArgs& platformArgs, const  ::ContractRegisterRule& rule);
  void recv_addContractRegisterRule();
  int64_t addQuotationAccount(const  ::platform::comm::PlatformArgs& platformArgs, const  ::QuotationAccount& account);
  void send_addQuotationAccount(const  ::platform::comm::PlatformArgs& platformArgs, const  ::QuotationAccount& account);
  int64_t recv_addQuotationAccount();
  void updateContractActiveRule(const  ::platform::comm::PlatformArgs& platformArgs, const  ::ContractActiveRule& rule);
  void send_updateContractActiveRule(const  ::platform::comm::PlatformArgs& platformArgs, const  ::ContractActiveRule& rule);
  void recv_updateContractActiveRule();
  void updateContractRegisterRule(const  ::platform::comm::PlatformArgs& platformArgs, const  ::ContractRegisterRule& rule);
  void send_updateContractRegisterRule(const  ::platform::comm::PlatformArgs& platformArgs, const  ::ContractRegisterRule& rule);
  void recv_updateContractRegisterRule();
  void updateQuotationAccount(const  ::platform::comm::PlatformArgs& platformArgs, const  ::QuotationAccount& account);
  void send_updateQuotationAccount(const  ::platform::comm::PlatformArgs& platformArgs, const  ::QuotationAccount& account);
  void recv_updateQuotationAccount();
  void removeContractActiveRule(const  ::platform::comm::PlatformArgs& platformArgs, const int32_t sledCommodityId);
  void send_removeContractActiveRule(const  ::platform::comm::PlatformArgs& platformArgs, const int32_t sledCommodityId);
  void recv_removeContractActiveRule();
  void removeContractRegisterRule(const  ::platform::comm::PlatformArgs& platformArgs, const int32_t sledCommodityId, const  ::QuotationPlatformEnv::type platformEnv);
  void send_removeContractRegisterRule(const  ::platform::comm::PlatformArgs& platformArgs, const int32_t sledCommodityId, const  ::QuotationPlatformEnv::type platformEnv);
  void recv_removeContractRegisterRule();
  void removeQuotationAccount(const  ::platform::comm::PlatformArgs& platformArgs, const int64_t accountId);
  void send_removeQuotationAccount(const  ::platform::comm::PlatformArgs& platformArgs, const int64_t accountId);
  void recv_removeQuotationAccount();
  void reqAccountCommodityRegisterAbility( ::AccountCommodityRegisterAbilityPage& _return, const  ::platform::comm::PlatformArgs& platformArgs, const  ::ReqAccountCommodityRegisterAbilityOption& option, const  ::platform::page::IndexedPageOption& pageOption);
  void send_reqAccountCommodityRegisterAbility(const  ::platform::comm::PlatformArgs& platformArgs, const  ::ReqAccountCommodityRegisterAbilityOption& option, const  ::platform::page::IndexedPageOption& pageOption);
  void recv_reqAccountCommodityRegisterAbility( ::AccountCommodityRegisterAbilityPage& _return);
  void addAccountCommodityRegisterAbility(const  ::platform::comm::PlatformArgs& platformArgs, const  ::AccountCommodityRegisterAbility& ability);
  void send_addAccountCommodityRegisterAbility(const  ::platform::comm::PlatformArgs& platformArgs, const  ::AccountCommodityRegisterAbility& ability);
  void recv_addAccountCommodityRegisterAbility();
  void removeAccountCommodityRegisterAbility(const  ::platform::comm::PlatformArgs& platformArgs, const int64_t supportAbilityId);
  void send_removeAccountCommodityRegisterAbility(const  ::platform::comm::PlatformArgs& platformArgs, const int64_t supportAbilityId);
  void recv_removeAccountCommodityRegisterAbility();
  void reqQuotationAccountSupport( ::QuotationAccountSupportPage& _return, const  ::platform::comm::PlatformArgs& platformArgs, const  ::ReqQuotationAccountSupportOption& option, const  ::platform::page::IndexedPageOption& pageOption);
  void send_reqQuotationAccountSupport(const  ::platform::comm::PlatformArgs& platformArgs, const  ::ReqQuotationAccountSupportOption& option, const  ::platform::page::IndexedPageOption& pageOption);
  void recv_reqQuotationAccountSupport( ::QuotationAccountSupportPage& _return);
  void setCommodityRegisterOrderIndex(const  ::platform::comm::PlatformArgs& platformArgs, const int32_t sledCommodityId, const  ::QuotationPlatformEnv::type platformEnv, const int32_t orderIndex);
  void send_setCommodityRegisterOrderIndex(const  ::platform::comm::PlatformArgs& platformArgs, const int32_t sledCommodityId, const  ::QuotationPlatformEnv::type platformEnv, const int32_t orderIndex);
  void recv_setCommodityRegisterOrderIndex();
 protected:
  boost::shared_ptr< ::apache::thrift::protocol::TProtocol> piprot_;
  boost::shared_ptr< ::apache::thrift::protocol::TProtocol> poprot_;
  ::apache::thrift::protocol::TProtocol* iprot_;
  ::apache::thrift::protocol::TProtocol* oprot_;
};

class QuotationAccountDaoProcessor : public ::apache::thrift::TDispatchProcessor {
 protected:
  boost::shared_ptr<QuotationAccountDaoIf> iface_;
  virtual bool dispatchCall(::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, const std::string& fname, int32_t seqid, void* callContext);
 private:
  typedef  void (QuotationAccountDaoProcessor::*ProcessFunction)(int32_t, ::apache::thrift::protocol::TProtocol*, ::apache::thrift::protocol::TProtocol*, void*);
  typedef std::map<std::string, ProcessFunction> ProcessMap;
  ProcessMap processMap_;
  void process_reqContractActiveRule(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_reqContractRegisterRule(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_reqQuotationAccount(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_addContractActiveRule(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_addContractRegisterRule(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_addQuotationAccount(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_updateContractActiveRule(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_updateContractRegisterRule(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_updateQuotationAccount(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_removeContractActiveRule(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_removeContractRegisterRule(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_removeQuotationAccount(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_reqAccountCommodityRegisterAbility(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_addAccountCommodityRegisterAbility(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_removeAccountCommodityRegisterAbility(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_reqQuotationAccountSupport(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_setCommodityRegisterOrderIndex(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
 public:
  QuotationAccountDaoProcessor(boost::shared_ptr<QuotationAccountDaoIf> iface) :
    iface_(iface) {
    processMap_["reqContractActiveRule"] = &QuotationAccountDaoProcessor::process_reqContractActiveRule;
    processMap_["reqContractRegisterRule"] = &QuotationAccountDaoProcessor::process_reqContractRegisterRule;
    processMap_["reqQuotationAccount"] = &QuotationAccountDaoProcessor::process_reqQuotationAccount;
    processMap_["addContractActiveRule"] = &QuotationAccountDaoProcessor::process_addContractActiveRule;
    processMap_["addContractRegisterRule"] = &QuotationAccountDaoProcessor::process_addContractRegisterRule;
    processMap_["addQuotationAccount"] = &QuotationAccountDaoProcessor::process_addQuotationAccount;
    processMap_["updateContractActiveRule"] = &QuotationAccountDaoProcessor::process_updateContractActiveRule;
    processMap_["updateContractRegisterRule"] = &QuotationAccountDaoProcessor::process_updateContractRegisterRule;
    processMap_["updateQuotationAccount"] = &QuotationAccountDaoProcessor::process_updateQuotationAccount;
    processMap_["removeContractActiveRule"] = &QuotationAccountDaoProcessor::process_removeContractActiveRule;
    processMap_["removeContractRegisterRule"] = &QuotationAccountDaoProcessor::process_removeContractRegisterRule;
    processMap_["removeQuotationAccount"] = &QuotationAccountDaoProcessor::process_removeQuotationAccount;
    processMap_["reqAccountCommodityRegisterAbility"] = &QuotationAccountDaoProcessor::process_reqAccountCommodityRegisterAbility;
    processMap_["addAccountCommodityRegisterAbility"] = &QuotationAccountDaoProcessor::process_addAccountCommodityRegisterAbility;
    processMap_["removeAccountCommodityRegisterAbility"] = &QuotationAccountDaoProcessor::process_removeAccountCommodityRegisterAbility;
    processMap_["reqQuotationAccountSupport"] = &QuotationAccountDaoProcessor::process_reqQuotationAccountSupport;
    processMap_["setCommodityRegisterOrderIndex"] = &QuotationAccountDaoProcessor::process_setCommodityRegisterOrderIndex;
  }

  virtual ~QuotationAccountDaoProcessor() {}
};

class QuotationAccountDaoProcessorFactory : public ::apache::thrift::TProcessorFactory {
 public:
  QuotationAccountDaoProcessorFactory(const ::boost::shared_ptr< QuotationAccountDaoIfFactory >& handlerFactory) :
      handlerFactory_(handlerFactory) {}

  ::boost::shared_ptr< ::apache::thrift::TProcessor > getProcessor(const ::apache::thrift::TConnectionInfo& connInfo);

 protected:
  ::boost::shared_ptr< QuotationAccountDaoIfFactory > handlerFactory_;
};

class QuotationAccountDaoMultiface : virtual public QuotationAccountDaoIf {
 public:
  QuotationAccountDaoMultiface(std::vector<boost::shared_ptr<QuotationAccountDaoIf> >& ifaces) : ifaces_(ifaces) {
  }
  virtual ~QuotationAccountDaoMultiface() {}
 protected:
  std::vector<boost::shared_ptr<QuotationAccountDaoIf> > ifaces_;
  QuotationAccountDaoMultiface() {}
  void add(boost::shared_ptr<QuotationAccountDaoIf> iface) {
    ifaces_.push_back(iface);
  }
 public:
  void reqContractActiveRule( ::ContractActiveRulePage& _return, const  ::platform::comm::PlatformArgs& platformArgs, const  ::ReqContractActiveRuleOption& option, const  ::platform::page::IndexedPageOption& pageOption) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->reqContractActiveRule(_return, platformArgs, option, pageOption);
    }
    ifaces_[i]->reqContractActiveRule(_return, platformArgs, option, pageOption);
    return;
  }

  void reqContractRegisterRule( ::ContractRegisterRulePage& _return, const  ::platform::comm::PlatformArgs& platformArgs, const  ::ReqContractRegisterRuleOption& option, const  ::platform::page::IndexedPageOption& pageOption) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->reqContractRegisterRule(_return, platformArgs, option, pageOption);
    }
    ifaces_[i]->reqContractRegisterRule(_return, platformArgs, option, pageOption);
    return;
  }

  void reqQuotationAccount( ::QuotationAccountPage& _return, const  ::platform::comm::PlatformArgs& platformArgs, const  ::ReqQuotationAccountOption& option, const  ::platform::page::IndexedPageOption& pageOption) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->reqQuotationAccount(_return, platformArgs, option, pageOption);
    }
    ifaces_[i]->reqQuotationAccount(_return, platformArgs, option, pageOption);
    return;
  }

  void addContractActiveRule(const  ::platform::comm::PlatformArgs& platformArgs, const  ::ContractActiveRule& rule) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->addContractActiveRule(platformArgs, rule);
    }
    ifaces_[i]->addContractActiveRule(platformArgs, rule);
  }

  void addContractRegisterRule(const  ::platform::comm::PlatformArgs& platformArgs, const  ::ContractRegisterRule& rule) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->addContractRegisterRule(platformArgs, rule);
    }
    ifaces_[i]->addContractRegisterRule(platformArgs, rule);
  }

  int64_t addQuotationAccount(const  ::platform::comm::PlatformArgs& platformArgs, const  ::QuotationAccount& account) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->addQuotationAccount(platformArgs, account);
    }
    return ifaces_[i]->addQuotationAccount(platformArgs, account);
  }

  void updateContractActiveRule(const  ::platform::comm::PlatformArgs& platformArgs, const  ::ContractActiveRule& rule) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->updateContractActiveRule(platformArgs, rule);
    }
    ifaces_[i]->updateContractActiveRule(platformArgs, rule);
  }

  void updateContractRegisterRule(const  ::platform::comm::PlatformArgs& platformArgs, const  ::ContractRegisterRule& rule) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->updateContractRegisterRule(platformArgs, rule);
    }
    ifaces_[i]->updateContractRegisterRule(platformArgs, rule);
  }

  void updateQuotationAccount(const  ::platform::comm::PlatformArgs& platformArgs, const  ::QuotationAccount& account) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->updateQuotationAccount(platformArgs, account);
    }
    ifaces_[i]->updateQuotationAccount(platformArgs, account);
  }

  void removeContractActiveRule(const  ::platform::comm::PlatformArgs& platformArgs, const int32_t sledCommodityId) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->removeContractActiveRule(platformArgs, sledCommodityId);
    }
    ifaces_[i]->removeContractActiveRule(platformArgs, sledCommodityId);
  }

  void removeContractRegisterRule(const  ::platform::comm::PlatformArgs& platformArgs, const int32_t sledCommodityId, const  ::QuotationPlatformEnv::type platformEnv) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->removeContractRegisterRule(platformArgs, sledCommodityId, platformEnv);
    }
    ifaces_[i]->removeContractRegisterRule(platformArgs, sledCommodityId, platformEnv);
  }

  void removeQuotationAccount(const  ::platform::comm::PlatformArgs& platformArgs, const int64_t accountId) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->removeQuotationAccount(platformArgs, accountId);
    }
    ifaces_[i]->removeQuotationAccount(platformArgs, accountId);
  }

  void reqAccountCommodityRegisterAbility( ::AccountCommodityRegisterAbilityPage& _return, const  ::platform::comm::PlatformArgs& platformArgs, const  ::ReqAccountCommodityRegisterAbilityOption& option, const  ::platform::page::IndexedPageOption& pageOption) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->reqAccountCommodityRegisterAbility(_return, platformArgs, option, pageOption);
    }
    ifaces_[i]->reqAccountCommodityRegisterAbility(_return, platformArgs, option, pageOption);
    return;
  }

  void addAccountCommodityRegisterAbility(const  ::platform::comm::PlatformArgs& platformArgs, const  ::AccountCommodityRegisterAbility& ability) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->addAccountCommodityRegisterAbility(platformArgs, ability);
    }
    ifaces_[i]->addAccountCommodityRegisterAbility(platformArgs, ability);
  }

  void removeAccountCommodityRegisterAbility(const  ::platform::comm::PlatformArgs& platformArgs, const int64_t supportAbilityId) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->removeAccountCommodityRegisterAbility(platformArgs, supportAbilityId);
    }
    ifaces_[i]->removeAccountCommodityRegisterAbility(platformArgs, supportAbilityId);
  }

  void reqQuotationAccountSupport( ::QuotationAccountSupportPage& _return, const  ::platform::comm::PlatformArgs& platformArgs, const  ::ReqQuotationAccountSupportOption& option, const  ::platform::page::IndexedPageOption& pageOption) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->reqQuotationAccountSupport(_return, platformArgs, option, pageOption);
    }
    ifaces_[i]->reqQuotationAccountSupport(_return, platformArgs, option, pageOption);
    return;
  }

  void setCommodityRegisterOrderIndex(const  ::platform::comm::PlatformArgs& platformArgs, const int32_t sledCommodityId, const  ::QuotationPlatformEnv::type platformEnv, const int32_t orderIndex) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->setCommodityRegisterOrderIndex(platformArgs, sledCommodityId, platformEnv, orderIndex);
    }
    ifaces_[i]->setCommodityRegisterOrderIndex(platformArgs, sledCommodityId, platformEnv, orderIndex);
  }

};



#endif
