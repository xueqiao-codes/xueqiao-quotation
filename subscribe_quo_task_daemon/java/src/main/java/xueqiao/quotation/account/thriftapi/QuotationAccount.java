/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package xueqiao.quotation.account.thriftapi;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 * 行情账号信息
 */
public class QuotationAccount implements org.apache.thrift.TBase<QuotationAccount, QuotationAccount._Fields>, java.io.Serializable, Cloneable, Comparable<QuotationAccount> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("QuotationAccount");

  private static final org.apache.thrift.protocol.TField ACCOUNT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("accountId", org.apache.thrift.protocol.TType.I64, (short)1);
  private static final org.apache.thrift.protocol.TField ACCOUNT_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("accountName", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField ACCOUNTPWD_FIELD_DESC = new org.apache.thrift.protocol.TField("accountpwd", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField NICK_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("nickName", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField PLATFORM_FIELD_DESC = new org.apache.thrift.protocol.TField("platform", org.apache.thrift.protocol.TType.I32, (short)5);
  private static final org.apache.thrift.protocol.TField BROKER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("brokerId", org.apache.thrift.protocol.TType.I32, (short)6);
  private static final org.apache.thrift.protocol.TField BROKER_ACCESS_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("brokerAccessId", org.apache.thrift.protocol.TType.I32, (short)7);
  private static final org.apache.thrift.protocol.TField ACCOUNT_PROPERTIES_FIELD_DESC = new org.apache.thrift.protocol.TField("accountProperties", org.apache.thrift.protocol.TType.MAP, (short)8);
  private static final org.apache.thrift.protocol.TField ACCOUNT_STATE_FIELD_DESC = new org.apache.thrift.protocol.TField("accountState", org.apache.thrift.protocol.TType.I32, (short)9);
  private static final org.apache.thrift.protocol.TField ACCESS_STATE_FIELD_DESC = new org.apache.thrift.protocol.TField("accessState", org.apache.thrift.protocol.TType.I32, (short)10);
  private static final org.apache.thrift.protocol.TField INVALID_REASON_FIELD_DESC = new org.apache.thrift.protocol.TField("invalidReason", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField INVALID_ERROR_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("invalidErrorCode", org.apache.thrift.protocol.TType.I32, (short)12);
  private static final org.apache.thrift.protocol.TField API_RET_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("apiRetCode", org.apache.thrift.protocol.TType.I32, (short)13);
  private static final org.apache.thrift.protocol.TField MAX_REGISTER_COUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("maxRegisterCount", org.apache.thrift.protocol.TType.I32, (short)14);
  private static final org.apache.thrift.protocol.TField CREATE_TIMESTAMP_FIELD_DESC = new org.apache.thrift.protocol.TField("createTimestamp", org.apache.thrift.protocol.TType.I64, (short)15);
  private static final org.apache.thrift.protocol.TField LAST_MODIFY_TIMESTAMP_FIELD_DESC = new org.apache.thrift.protocol.TField("lastModifyTimestamp", org.apache.thrift.protocol.TType.I64, (short)16);
  private static final org.apache.thrift.protocol.TField PLATFORM_ENV_FIELD_DESC = new org.apache.thrift.protocol.TField("platformEnv", org.apache.thrift.protocol.TType.I32, (short)17);
  private static final org.apache.thrift.protocol.TField DEPLOY_SET_FIELD_DESC = new org.apache.thrift.protocol.TField("deploySet", org.apache.thrift.protocol.TType.I32, (short)18);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new QuotationAccountStandardSchemeFactory());
    schemes.put(TupleScheme.class, new QuotationAccountTupleSchemeFactory());
  }

  public long accountId; // optional
  public String accountName; // optional
  public String accountpwd; // optional
  public String nickName; // optional
  /**
   * 
   * @see QuotationTechPlatform
   */
  public QuotationTechPlatform platform; // optional
  public int brokerId; // optional
  public int brokerAccessId; // optional
  public Map<String,String> accountProperties; // optional
  /**
   * 
   * @see QuotationAccountState
   */
  public QuotationAccountState accountState; // optional
  /**
   * 
   * @see QuotationAccountAccessState
   */
  public QuotationAccountAccessState accessState; // optional
  public String invalidReason; // optional
  public int invalidErrorCode; // optional
  public int apiRetCode; // optional
  public int maxRegisterCount; // optional
  public long createTimestamp; // optional
  public long lastModifyTimestamp; // optional
  /**
   * 
   * @see QuotationPlatformEnv
   */
  public QuotationPlatformEnv platformEnv; // optional
  /**
   * 
   * @see DeploySet
   */
  public DeploySet deploySet; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ACCOUNT_ID((short)1, "accountId"),
    ACCOUNT_NAME((short)2, "accountName"),
    ACCOUNTPWD((short)3, "accountpwd"),
    NICK_NAME((short)4, "nickName"),
    /**
     * 
     * @see QuotationTechPlatform
     */
    PLATFORM((short)5, "platform"),
    BROKER_ID((short)6, "brokerId"),
    BROKER_ACCESS_ID((short)7, "brokerAccessId"),
    ACCOUNT_PROPERTIES((short)8, "accountProperties"),
    /**
     * 
     * @see QuotationAccountState
     */
    ACCOUNT_STATE((short)9, "accountState"),
    /**
     * 
     * @see QuotationAccountAccessState
     */
    ACCESS_STATE((short)10, "accessState"),
    INVALID_REASON((short)11, "invalidReason"),
    INVALID_ERROR_CODE((short)12, "invalidErrorCode"),
    API_RET_CODE((short)13, "apiRetCode"),
    MAX_REGISTER_COUNT((short)14, "maxRegisterCount"),
    CREATE_TIMESTAMP((short)15, "createTimestamp"),
    LAST_MODIFY_TIMESTAMP((short)16, "lastModifyTimestamp"),
    /**
     * 
     * @see QuotationPlatformEnv
     */
    PLATFORM_ENV((short)17, "platformEnv"),
    /**
     * 
     * @see DeploySet
     */
    DEPLOY_SET((short)18, "deploySet");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ACCOUNT_ID
          return ACCOUNT_ID;
        case 2: // ACCOUNT_NAME
          return ACCOUNT_NAME;
        case 3: // ACCOUNTPWD
          return ACCOUNTPWD;
        case 4: // NICK_NAME
          return NICK_NAME;
        case 5: // PLATFORM
          return PLATFORM;
        case 6: // BROKER_ID
          return BROKER_ID;
        case 7: // BROKER_ACCESS_ID
          return BROKER_ACCESS_ID;
        case 8: // ACCOUNT_PROPERTIES
          return ACCOUNT_PROPERTIES;
        case 9: // ACCOUNT_STATE
          return ACCOUNT_STATE;
        case 10: // ACCESS_STATE
          return ACCESS_STATE;
        case 11: // INVALID_REASON
          return INVALID_REASON;
        case 12: // INVALID_ERROR_CODE
          return INVALID_ERROR_CODE;
        case 13: // API_RET_CODE
          return API_RET_CODE;
        case 14: // MAX_REGISTER_COUNT
          return MAX_REGISTER_COUNT;
        case 15: // CREATE_TIMESTAMP
          return CREATE_TIMESTAMP;
        case 16: // LAST_MODIFY_TIMESTAMP
          return LAST_MODIFY_TIMESTAMP;
        case 17: // PLATFORM_ENV
          return PLATFORM_ENV;
        case 18: // DEPLOY_SET
          return DEPLOY_SET;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ACCOUNTID_ISSET_ID = 0;
  private static final int __BROKERID_ISSET_ID = 1;
  private static final int __BROKERACCESSID_ISSET_ID = 2;
  private static final int __INVALIDERRORCODE_ISSET_ID = 3;
  private static final int __APIRETCODE_ISSET_ID = 4;
  private static final int __MAXREGISTERCOUNT_ISSET_ID = 5;
  private static final int __CREATETIMESTAMP_ISSET_ID = 6;
  private static final int __LASTMODIFYTIMESTAMP_ISSET_ID = 7;
  private byte __isset_bitfield = 0;
  private _Fields optionals[] = {_Fields.ACCOUNT_ID,_Fields.ACCOUNT_NAME,_Fields.ACCOUNTPWD,_Fields.NICK_NAME,_Fields.PLATFORM,_Fields.BROKER_ID,_Fields.BROKER_ACCESS_ID,_Fields.ACCOUNT_PROPERTIES,_Fields.ACCOUNT_STATE,_Fields.ACCESS_STATE,_Fields.INVALID_REASON,_Fields.INVALID_ERROR_CODE,_Fields.API_RET_CODE,_Fields.MAX_REGISTER_COUNT,_Fields.CREATE_TIMESTAMP,_Fields.LAST_MODIFY_TIMESTAMP,_Fields.PLATFORM_ENV,_Fields.DEPLOY_SET};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ACCOUNT_ID, new org.apache.thrift.meta_data.FieldMetaData("accountId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.ACCOUNT_NAME, new org.apache.thrift.meta_data.FieldMetaData("accountName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ACCOUNTPWD, new org.apache.thrift.meta_data.FieldMetaData("accountpwd", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.NICK_NAME, new org.apache.thrift.meta_data.FieldMetaData("nickName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PLATFORM, new org.apache.thrift.meta_data.FieldMetaData("platform", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, QuotationTechPlatform.class)));
    tmpMap.put(_Fields.BROKER_ID, new org.apache.thrift.meta_data.FieldMetaData("brokerId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.BROKER_ACCESS_ID, new org.apache.thrift.meta_data.FieldMetaData("brokerAccessId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ACCOUNT_PROPERTIES, new org.apache.thrift.meta_data.FieldMetaData("accountProperties", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING), 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    tmpMap.put(_Fields.ACCOUNT_STATE, new org.apache.thrift.meta_data.FieldMetaData("accountState", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, QuotationAccountState.class)));
    tmpMap.put(_Fields.ACCESS_STATE, new org.apache.thrift.meta_data.FieldMetaData("accessState", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, QuotationAccountAccessState.class)));
    tmpMap.put(_Fields.INVALID_REASON, new org.apache.thrift.meta_data.FieldMetaData("invalidReason", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.INVALID_ERROR_CODE, new org.apache.thrift.meta_data.FieldMetaData("invalidErrorCode", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.API_RET_CODE, new org.apache.thrift.meta_data.FieldMetaData("apiRetCode", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.MAX_REGISTER_COUNT, new org.apache.thrift.meta_data.FieldMetaData("maxRegisterCount", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CREATE_TIMESTAMP, new org.apache.thrift.meta_data.FieldMetaData("createTimestamp", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.LAST_MODIFY_TIMESTAMP, new org.apache.thrift.meta_data.FieldMetaData("lastModifyTimestamp", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.PLATFORM_ENV, new org.apache.thrift.meta_data.FieldMetaData("platformEnv", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, QuotationPlatformEnv.class)));
    tmpMap.put(_Fields.DEPLOY_SET, new org.apache.thrift.meta_data.FieldMetaData("deploySet", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, DeploySet.class)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(QuotationAccount.class, metaDataMap);
  }

  public QuotationAccount() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public QuotationAccount(QuotationAccount other) {
    __isset_bitfield = other.__isset_bitfield;
    this.accountId = other.accountId;
    if (other.isSetAccountName()) {
      this.accountName = other.accountName;
    }
    if (other.isSetAccountpwd()) {
      this.accountpwd = other.accountpwd;
    }
    if (other.isSetNickName()) {
      this.nickName = other.nickName;
    }
    if (other.isSetPlatform()) {
      this.platform = other.platform;
    }
    this.brokerId = other.brokerId;
    this.brokerAccessId = other.brokerAccessId;
    if (other.isSetAccountProperties()) {
      Map<String,String> __this__accountProperties = new HashMap<String,String>(other.accountProperties);
      this.accountProperties = __this__accountProperties;
    }
    if (other.isSetAccountState()) {
      this.accountState = other.accountState;
    }
    if (other.isSetAccessState()) {
      this.accessState = other.accessState;
    }
    if (other.isSetInvalidReason()) {
      this.invalidReason = other.invalidReason;
    }
    this.invalidErrorCode = other.invalidErrorCode;
    this.apiRetCode = other.apiRetCode;
    this.maxRegisterCount = other.maxRegisterCount;
    this.createTimestamp = other.createTimestamp;
    this.lastModifyTimestamp = other.lastModifyTimestamp;
    if (other.isSetPlatformEnv()) {
      this.platformEnv = other.platformEnv;
    }
    if (other.isSetDeploySet()) {
      this.deploySet = other.deploySet;
    }
  }

  public QuotationAccount deepCopy() {
    return new QuotationAccount(this);
  }

  @Override
  public void clear() {
    setAccountIdIsSet(false);
    this.accountId = 0;
    this.accountName = null;
    this.accountpwd = null;
    this.nickName = null;
    this.platform = null;
    setBrokerIdIsSet(false);
    this.brokerId = 0;
    setBrokerAccessIdIsSet(false);
    this.brokerAccessId = 0;
    this.accountProperties = null;
    this.accountState = null;
    this.accessState = null;
    this.invalidReason = null;
    setInvalidErrorCodeIsSet(false);
    this.invalidErrorCode = 0;
    setApiRetCodeIsSet(false);
    this.apiRetCode = 0;
    setMaxRegisterCountIsSet(false);
    this.maxRegisterCount = 0;
    setCreateTimestampIsSet(false);
    this.createTimestamp = 0;
    setLastModifyTimestampIsSet(false);
    this.lastModifyTimestamp = 0;
    this.platformEnv = null;
    this.deploySet = null;
  }

  public long getAccountId() {
    return this.accountId;
  }

  public QuotationAccount setAccountId(long accountId) {
    this.accountId = accountId;
    setAccountIdIsSet(true);
    return this;
  }

  public void unsetAccountId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ACCOUNTID_ISSET_ID);
  }

  /** Returns true if field accountId is set (has been assigned a value) and false otherwise */
  public boolean isSetAccountId() {
    return EncodingUtils.testBit(__isset_bitfield, __ACCOUNTID_ISSET_ID);
  }

  public void setAccountIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ACCOUNTID_ISSET_ID, value);
  }

  public String getAccountName() {
    return this.accountName;
  }

  public QuotationAccount setAccountName(String accountName) {
    this.accountName = accountName;
    return this;
  }

  public void unsetAccountName() {
    this.accountName = null;
  }

  /** Returns true if field accountName is set (has been assigned a value) and false otherwise */
  public boolean isSetAccountName() {
    return this.accountName != null;
  }

  public void setAccountNameIsSet(boolean value) {
    if (!value) {
      this.accountName = null;
    }
  }

  public String getAccountpwd() {
    return this.accountpwd;
  }

  public QuotationAccount setAccountpwd(String accountpwd) {
    this.accountpwd = accountpwd;
    return this;
  }

  public void unsetAccountpwd() {
    this.accountpwd = null;
  }

  /** Returns true if field accountpwd is set (has been assigned a value) and false otherwise */
  public boolean isSetAccountpwd() {
    return this.accountpwd != null;
  }

  public void setAccountpwdIsSet(boolean value) {
    if (!value) {
      this.accountpwd = null;
    }
  }

  public String getNickName() {
    return this.nickName;
  }

  public QuotationAccount setNickName(String nickName) {
    this.nickName = nickName;
    return this;
  }

  public void unsetNickName() {
    this.nickName = null;
  }

  /** Returns true if field nickName is set (has been assigned a value) and false otherwise */
  public boolean isSetNickName() {
    return this.nickName != null;
  }

  public void setNickNameIsSet(boolean value) {
    if (!value) {
      this.nickName = null;
    }
  }

  /**
   * 
   * @see QuotationTechPlatform
   */
  public QuotationTechPlatform getPlatform() {
    return this.platform;
  }

  /**
   * 
   * @see QuotationTechPlatform
   */
  public QuotationAccount setPlatform(QuotationTechPlatform platform) {
    this.platform = platform;
    return this;
  }

  public void unsetPlatform() {
    this.platform = null;
  }

  /** Returns true if field platform is set (has been assigned a value) and false otherwise */
  public boolean isSetPlatform() {
    return this.platform != null;
  }

  public void setPlatformIsSet(boolean value) {
    if (!value) {
      this.platform = null;
    }
  }

  public int getBrokerId() {
    return this.brokerId;
  }

  public QuotationAccount setBrokerId(int brokerId) {
    this.brokerId = brokerId;
    setBrokerIdIsSet(true);
    return this;
  }

  public void unsetBrokerId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __BROKERID_ISSET_ID);
  }

  /** Returns true if field brokerId is set (has been assigned a value) and false otherwise */
  public boolean isSetBrokerId() {
    return EncodingUtils.testBit(__isset_bitfield, __BROKERID_ISSET_ID);
  }

  public void setBrokerIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __BROKERID_ISSET_ID, value);
  }

  public int getBrokerAccessId() {
    return this.brokerAccessId;
  }

  public QuotationAccount setBrokerAccessId(int brokerAccessId) {
    this.brokerAccessId = brokerAccessId;
    setBrokerAccessIdIsSet(true);
    return this;
  }

  public void unsetBrokerAccessId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __BROKERACCESSID_ISSET_ID);
  }

  /** Returns true if field brokerAccessId is set (has been assigned a value) and false otherwise */
  public boolean isSetBrokerAccessId() {
    return EncodingUtils.testBit(__isset_bitfield, __BROKERACCESSID_ISSET_ID);
  }

  public void setBrokerAccessIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __BROKERACCESSID_ISSET_ID, value);
  }

  public int getAccountPropertiesSize() {
    return (this.accountProperties == null) ? 0 : this.accountProperties.size();
  }

  public void putToAccountProperties(String key, String val) {
    if (this.accountProperties == null) {
      this.accountProperties = new HashMap<String,String>();
    }
    this.accountProperties.put(key, val);
  }

  public Map<String,String> getAccountProperties() {
    return this.accountProperties;
  }

  public QuotationAccount setAccountProperties(Map<String,String> accountProperties) {
    this.accountProperties = accountProperties;
    return this;
  }

  public void unsetAccountProperties() {
    this.accountProperties = null;
  }

  /** Returns true if field accountProperties is set (has been assigned a value) and false otherwise */
  public boolean isSetAccountProperties() {
    return this.accountProperties != null;
  }

  public void setAccountPropertiesIsSet(boolean value) {
    if (!value) {
      this.accountProperties = null;
    }
  }

  /**
   * 
   * @see QuotationAccountState
   */
  public QuotationAccountState getAccountState() {
    return this.accountState;
  }

  /**
   * 
   * @see QuotationAccountState
   */
  public QuotationAccount setAccountState(QuotationAccountState accountState) {
    this.accountState = accountState;
    return this;
  }

  public void unsetAccountState() {
    this.accountState = null;
  }

  /** Returns true if field accountState is set (has been assigned a value) and false otherwise */
  public boolean isSetAccountState() {
    return this.accountState != null;
  }

  public void setAccountStateIsSet(boolean value) {
    if (!value) {
      this.accountState = null;
    }
  }

  /**
   * 
   * @see QuotationAccountAccessState
   */
  public QuotationAccountAccessState getAccessState() {
    return this.accessState;
  }

  /**
   * 
   * @see QuotationAccountAccessState
   */
  public QuotationAccount setAccessState(QuotationAccountAccessState accessState) {
    this.accessState = accessState;
    return this;
  }

  public void unsetAccessState() {
    this.accessState = null;
  }

  /** Returns true if field accessState is set (has been assigned a value) and false otherwise */
  public boolean isSetAccessState() {
    return this.accessState != null;
  }

  public void setAccessStateIsSet(boolean value) {
    if (!value) {
      this.accessState = null;
    }
  }

  public String getInvalidReason() {
    return this.invalidReason;
  }

  public QuotationAccount setInvalidReason(String invalidReason) {
    this.invalidReason = invalidReason;
    return this;
  }

  public void unsetInvalidReason() {
    this.invalidReason = null;
  }

  /** Returns true if field invalidReason is set (has been assigned a value) and false otherwise */
  public boolean isSetInvalidReason() {
    return this.invalidReason != null;
  }

  public void setInvalidReasonIsSet(boolean value) {
    if (!value) {
      this.invalidReason = null;
    }
  }

  public int getInvalidErrorCode() {
    return this.invalidErrorCode;
  }

  public QuotationAccount setInvalidErrorCode(int invalidErrorCode) {
    this.invalidErrorCode = invalidErrorCode;
    setInvalidErrorCodeIsSet(true);
    return this;
  }

  public void unsetInvalidErrorCode() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __INVALIDERRORCODE_ISSET_ID);
  }

  /** Returns true if field invalidErrorCode is set (has been assigned a value) and false otherwise */
  public boolean isSetInvalidErrorCode() {
    return EncodingUtils.testBit(__isset_bitfield, __INVALIDERRORCODE_ISSET_ID);
  }

  public void setInvalidErrorCodeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __INVALIDERRORCODE_ISSET_ID, value);
  }

  public int getApiRetCode() {
    return this.apiRetCode;
  }

  public QuotationAccount setApiRetCode(int apiRetCode) {
    this.apiRetCode = apiRetCode;
    setApiRetCodeIsSet(true);
    return this;
  }

  public void unsetApiRetCode() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __APIRETCODE_ISSET_ID);
  }

  /** Returns true if field apiRetCode is set (has been assigned a value) and false otherwise */
  public boolean isSetApiRetCode() {
    return EncodingUtils.testBit(__isset_bitfield, __APIRETCODE_ISSET_ID);
  }

  public void setApiRetCodeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __APIRETCODE_ISSET_ID, value);
  }

  public int getMaxRegisterCount() {
    return this.maxRegisterCount;
  }

  public QuotationAccount setMaxRegisterCount(int maxRegisterCount) {
    this.maxRegisterCount = maxRegisterCount;
    setMaxRegisterCountIsSet(true);
    return this;
  }

  public void unsetMaxRegisterCount() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __MAXREGISTERCOUNT_ISSET_ID);
  }

  /** Returns true if field maxRegisterCount is set (has been assigned a value) and false otherwise */
  public boolean isSetMaxRegisterCount() {
    return EncodingUtils.testBit(__isset_bitfield, __MAXREGISTERCOUNT_ISSET_ID);
  }

  public void setMaxRegisterCountIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __MAXREGISTERCOUNT_ISSET_ID, value);
  }

  public long getCreateTimestamp() {
    return this.createTimestamp;
  }

  public QuotationAccount setCreateTimestamp(long createTimestamp) {
    this.createTimestamp = createTimestamp;
    setCreateTimestampIsSet(true);
    return this;
  }

  public void unsetCreateTimestamp() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CREATETIMESTAMP_ISSET_ID);
  }

  /** Returns true if field createTimestamp is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTimestamp() {
    return EncodingUtils.testBit(__isset_bitfield, __CREATETIMESTAMP_ISSET_ID);
  }

  public void setCreateTimestampIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CREATETIMESTAMP_ISSET_ID, value);
  }

  public long getLastModifyTimestamp() {
    return this.lastModifyTimestamp;
  }

  public QuotationAccount setLastModifyTimestamp(long lastModifyTimestamp) {
    this.lastModifyTimestamp = lastModifyTimestamp;
    setLastModifyTimestampIsSet(true);
    return this;
  }

  public void unsetLastModifyTimestamp() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __LASTMODIFYTIMESTAMP_ISSET_ID);
  }

  /** Returns true if field lastModifyTimestamp is set (has been assigned a value) and false otherwise */
  public boolean isSetLastModifyTimestamp() {
    return EncodingUtils.testBit(__isset_bitfield, __LASTMODIFYTIMESTAMP_ISSET_ID);
  }

  public void setLastModifyTimestampIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __LASTMODIFYTIMESTAMP_ISSET_ID, value);
  }

  /**
   * 
   * @see QuotationPlatformEnv
   */
  public QuotationPlatformEnv getPlatformEnv() {
    return this.platformEnv;
  }

  /**
   * 
   * @see QuotationPlatformEnv
   */
  public QuotationAccount setPlatformEnv(QuotationPlatformEnv platformEnv) {
    this.platformEnv = platformEnv;
    return this;
  }

  public void unsetPlatformEnv() {
    this.platformEnv = null;
  }

  /** Returns true if field platformEnv is set (has been assigned a value) and false otherwise */
  public boolean isSetPlatformEnv() {
    return this.platformEnv != null;
  }

  public void setPlatformEnvIsSet(boolean value) {
    if (!value) {
      this.platformEnv = null;
    }
  }

  /**
   * 
   * @see DeploySet
   */
  public DeploySet getDeploySet() {
    return this.deploySet;
  }

  /**
   * 
   * @see DeploySet
   */
  public QuotationAccount setDeploySet(DeploySet deploySet) {
    this.deploySet = deploySet;
    return this;
  }

  public void unsetDeploySet() {
    this.deploySet = null;
  }

  /** Returns true if field deploySet is set (has been assigned a value) and false otherwise */
  public boolean isSetDeploySet() {
    return this.deploySet != null;
  }

  public void setDeploySetIsSet(boolean value) {
    if (!value) {
      this.deploySet = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ACCOUNT_ID:
      if (value == null) {
        unsetAccountId();
      } else {
        setAccountId((Long)value);
      }
      break;

    case ACCOUNT_NAME:
      if (value == null) {
        unsetAccountName();
      } else {
        setAccountName((String)value);
      }
      break;

    case ACCOUNTPWD:
      if (value == null) {
        unsetAccountpwd();
      } else {
        setAccountpwd((String)value);
      }
      break;

    case NICK_NAME:
      if (value == null) {
        unsetNickName();
      } else {
        setNickName((String)value);
      }
      break;

    case PLATFORM:
      if (value == null) {
        unsetPlatform();
      } else {
        setPlatform((QuotationTechPlatform)value);
      }
      break;

    case BROKER_ID:
      if (value == null) {
        unsetBrokerId();
      } else {
        setBrokerId((Integer)value);
      }
      break;

    case BROKER_ACCESS_ID:
      if (value == null) {
        unsetBrokerAccessId();
      } else {
        setBrokerAccessId((Integer)value);
      }
      break;

    case ACCOUNT_PROPERTIES:
      if (value == null) {
        unsetAccountProperties();
      } else {
        setAccountProperties((Map<String,String>)value);
      }
      break;

    case ACCOUNT_STATE:
      if (value == null) {
        unsetAccountState();
      } else {
        setAccountState((QuotationAccountState)value);
      }
      break;

    case ACCESS_STATE:
      if (value == null) {
        unsetAccessState();
      } else {
        setAccessState((QuotationAccountAccessState)value);
      }
      break;

    case INVALID_REASON:
      if (value == null) {
        unsetInvalidReason();
      } else {
        setInvalidReason((String)value);
      }
      break;

    case INVALID_ERROR_CODE:
      if (value == null) {
        unsetInvalidErrorCode();
      } else {
        setInvalidErrorCode((Integer)value);
      }
      break;

    case API_RET_CODE:
      if (value == null) {
        unsetApiRetCode();
      } else {
        setApiRetCode((Integer)value);
      }
      break;

    case MAX_REGISTER_COUNT:
      if (value == null) {
        unsetMaxRegisterCount();
      } else {
        setMaxRegisterCount((Integer)value);
      }
      break;

    case CREATE_TIMESTAMP:
      if (value == null) {
        unsetCreateTimestamp();
      } else {
        setCreateTimestamp((Long)value);
      }
      break;

    case LAST_MODIFY_TIMESTAMP:
      if (value == null) {
        unsetLastModifyTimestamp();
      } else {
        setLastModifyTimestamp((Long)value);
      }
      break;

    case PLATFORM_ENV:
      if (value == null) {
        unsetPlatformEnv();
      } else {
        setPlatformEnv((QuotationPlatformEnv)value);
      }
      break;

    case DEPLOY_SET:
      if (value == null) {
        unsetDeploySet();
      } else {
        setDeploySet((DeploySet)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ACCOUNT_ID:
      return Long.valueOf(getAccountId());

    case ACCOUNT_NAME:
      return getAccountName();

    case ACCOUNTPWD:
      return getAccountpwd();

    case NICK_NAME:
      return getNickName();

    case PLATFORM:
      return getPlatform();

    case BROKER_ID:
      return Integer.valueOf(getBrokerId());

    case BROKER_ACCESS_ID:
      return Integer.valueOf(getBrokerAccessId());

    case ACCOUNT_PROPERTIES:
      return getAccountProperties();

    case ACCOUNT_STATE:
      return getAccountState();

    case ACCESS_STATE:
      return getAccessState();

    case INVALID_REASON:
      return getInvalidReason();

    case INVALID_ERROR_CODE:
      return Integer.valueOf(getInvalidErrorCode());

    case API_RET_CODE:
      return Integer.valueOf(getApiRetCode());

    case MAX_REGISTER_COUNT:
      return Integer.valueOf(getMaxRegisterCount());

    case CREATE_TIMESTAMP:
      return Long.valueOf(getCreateTimestamp());

    case LAST_MODIFY_TIMESTAMP:
      return Long.valueOf(getLastModifyTimestamp());

    case PLATFORM_ENV:
      return getPlatformEnv();

    case DEPLOY_SET:
      return getDeploySet();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ACCOUNT_ID:
      return isSetAccountId();
    case ACCOUNT_NAME:
      return isSetAccountName();
    case ACCOUNTPWD:
      return isSetAccountpwd();
    case NICK_NAME:
      return isSetNickName();
    case PLATFORM:
      return isSetPlatform();
    case BROKER_ID:
      return isSetBrokerId();
    case BROKER_ACCESS_ID:
      return isSetBrokerAccessId();
    case ACCOUNT_PROPERTIES:
      return isSetAccountProperties();
    case ACCOUNT_STATE:
      return isSetAccountState();
    case ACCESS_STATE:
      return isSetAccessState();
    case INVALID_REASON:
      return isSetInvalidReason();
    case INVALID_ERROR_CODE:
      return isSetInvalidErrorCode();
    case API_RET_CODE:
      return isSetApiRetCode();
    case MAX_REGISTER_COUNT:
      return isSetMaxRegisterCount();
    case CREATE_TIMESTAMP:
      return isSetCreateTimestamp();
    case LAST_MODIFY_TIMESTAMP:
      return isSetLastModifyTimestamp();
    case PLATFORM_ENV:
      return isSetPlatformEnv();
    case DEPLOY_SET:
      return isSetDeploySet();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof QuotationAccount)
      return this.equals((QuotationAccount)that);
    return false;
  }

  public boolean equals(QuotationAccount that) {
    if (that == null)
      return false;

    boolean this_present_accountId = true && this.isSetAccountId();
    boolean that_present_accountId = true && that.isSetAccountId();
    if (this_present_accountId || that_present_accountId) {
      if (!(this_present_accountId && that_present_accountId))
        return false;
      if (this.accountId != that.accountId)
        return false;
    }

    boolean this_present_accountName = true && this.isSetAccountName();
    boolean that_present_accountName = true && that.isSetAccountName();
    if (this_present_accountName || that_present_accountName) {
      if (!(this_present_accountName && that_present_accountName))
        return false;
      if (!this.accountName.equals(that.accountName))
        return false;
    }

    boolean this_present_accountpwd = true && this.isSetAccountpwd();
    boolean that_present_accountpwd = true && that.isSetAccountpwd();
    if (this_present_accountpwd || that_present_accountpwd) {
      if (!(this_present_accountpwd && that_present_accountpwd))
        return false;
      if (!this.accountpwd.equals(that.accountpwd))
        return false;
    }

    boolean this_present_nickName = true && this.isSetNickName();
    boolean that_present_nickName = true && that.isSetNickName();
    if (this_present_nickName || that_present_nickName) {
      if (!(this_present_nickName && that_present_nickName))
        return false;
      if (!this.nickName.equals(that.nickName))
        return false;
    }

    boolean this_present_platform = true && this.isSetPlatform();
    boolean that_present_platform = true && that.isSetPlatform();
    if (this_present_platform || that_present_platform) {
      if (!(this_present_platform && that_present_platform))
        return false;
      if (!this.platform.equals(that.platform))
        return false;
    }

    boolean this_present_brokerId = true && this.isSetBrokerId();
    boolean that_present_brokerId = true && that.isSetBrokerId();
    if (this_present_brokerId || that_present_brokerId) {
      if (!(this_present_brokerId && that_present_brokerId))
        return false;
      if (this.brokerId != that.brokerId)
        return false;
    }

    boolean this_present_brokerAccessId = true && this.isSetBrokerAccessId();
    boolean that_present_brokerAccessId = true && that.isSetBrokerAccessId();
    if (this_present_brokerAccessId || that_present_brokerAccessId) {
      if (!(this_present_brokerAccessId && that_present_brokerAccessId))
        return false;
      if (this.brokerAccessId != that.brokerAccessId)
        return false;
    }

    boolean this_present_accountProperties = true && this.isSetAccountProperties();
    boolean that_present_accountProperties = true && that.isSetAccountProperties();
    if (this_present_accountProperties || that_present_accountProperties) {
      if (!(this_present_accountProperties && that_present_accountProperties))
        return false;
      if (!this.accountProperties.equals(that.accountProperties))
        return false;
    }

    boolean this_present_accountState = true && this.isSetAccountState();
    boolean that_present_accountState = true && that.isSetAccountState();
    if (this_present_accountState || that_present_accountState) {
      if (!(this_present_accountState && that_present_accountState))
        return false;
      if (!this.accountState.equals(that.accountState))
        return false;
    }

    boolean this_present_accessState = true && this.isSetAccessState();
    boolean that_present_accessState = true && that.isSetAccessState();
    if (this_present_accessState || that_present_accessState) {
      if (!(this_present_accessState && that_present_accessState))
        return false;
      if (!this.accessState.equals(that.accessState))
        return false;
    }

    boolean this_present_invalidReason = true && this.isSetInvalidReason();
    boolean that_present_invalidReason = true && that.isSetInvalidReason();
    if (this_present_invalidReason || that_present_invalidReason) {
      if (!(this_present_invalidReason && that_present_invalidReason))
        return false;
      if (!this.invalidReason.equals(that.invalidReason))
        return false;
    }

    boolean this_present_invalidErrorCode = true && this.isSetInvalidErrorCode();
    boolean that_present_invalidErrorCode = true && that.isSetInvalidErrorCode();
    if (this_present_invalidErrorCode || that_present_invalidErrorCode) {
      if (!(this_present_invalidErrorCode && that_present_invalidErrorCode))
        return false;
      if (this.invalidErrorCode != that.invalidErrorCode)
        return false;
    }

    boolean this_present_apiRetCode = true && this.isSetApiRetCode();
    boolean that_present_apiRetCode = true && that.isSetApiRetCode();
    if (this_present_apiRetCode || that_present_apiRetCode) {
      if (!(this_present_apiRetCode && that_present_apiRetCode))
        return false;
      if (this.apiRetCode != that.apiRetCode)
        return false;
    }

    boolean this_present_maxRegisterCount = true && this.isSetMaxRegisterCount();
    boolean that_present_maxRegisterCount = true && that.isSetMaxRegisterCount();
    if (this_present_maxRegisterCount || that_present_maxRegisterCount) {
      if (!(this_present_maxRegisterCount && that_present_maxRegisterCount))
        return false;
      if (this.maxRegisterCount != that.maxRegisterCount)
        return false;
    }

    boolean this_present_createTimestamp = true && this.isSetCreateTimestamp();
    boolean that_present_createTimestamp = true && that.isSetCreateTimestamp();
    if (this_present_createTimestamp || that_present_createTimestamp) {
      if (!(this_present_createTimestamp && that_present_createTimestamp))
        return false;
      if (this.createTimestamp != that.createTimestamp)
        return false;
    }

    boolean this_present_lastModifyTimestamp = true && this.isSetLastModifyTimestamp();
    boolean that_present_lastModifyTimestamp = true && that.isSetLastModifyTimestamp();
    if (this_present_lastModifyTimestamp || that_present_lastModifyTimestamp) {
      if (!(this_present_lastModifyTimestamp && that_present_lastModifyTimestamp))
        return false;
      if (this.lastModifyTimestamp != that.lastModifyTimestamp)
        return false;
    }

    boolean this_present_platformEnv = true && this.isSetPlatformEnv();
    boolean that_present_platformEnv = true && that.isSetPlatformEnv();
    if (this_present_platformEnv || that_present_platformEnv) {
      if (!(this_present_platformEnv && that_present_platformEnv))
        return false;
      if (!this.platformEnv.equals(that.platformEnv))
        return false;
    }

    boolean this_present_deploySet = true && this.isSetDeploySet();
    boolean that_present_deploySet = true && that.isSetDeploySet();
    if (this_present_deploySet || that_present_deploySet) {
      if (!(this_present_deploySet && that_present_deploySet))
        return false;
      if (!this.deploySet.equals(that.deploySet))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  @Override
  public int compareTo(QuotationAccount other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetAccountId()).compareTo(other.isSetAccountId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAccountId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.accountId, other.accountId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAccountName()).compareTo(other.isSetAccountName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAccountName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.accountName, other.accountName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAccountpwd()).compareTo(other.isSetAccountpwd());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAccountpwd()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.accountpwd, other.accountpwd);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNickName()).compareTo(other.isSetNickName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNickName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.nickName, other.nickName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPlatform()).compareTo(other.isSetPlatform());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPlatform()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.platform, other.platform);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBrokerId()).compareTo(other.isSetBrokerId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBrokerId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.brokerId, other.brokerId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBrokerAccessId()).compareTo(other.isSetBrokerAccessId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBrokerAccessId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.brokerAccessId, other.brokerAccessId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAccountProperties()).compareTo(other.isSetAccountProperties());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAccountProperties()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.accountProperties, other.accountProperties);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAccountState()).compareTo(other.isSetAccountState());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAccountState()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.accountState, other.accountState);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAccessState()).compareTo(other.isSetAccessState());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAccessState()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.accessState, other.accessState);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetInvalidReason()).compareTo(other.isSetInvalidReason());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetInvalidReason()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.invalidReason, other.invalidReason);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetInvalidErrorCode()).compareTo(other.isSetInvalidErrorCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetInvalidErrorCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.invalidErrorCode, other.invalidErrorCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetApiRetCode()).compareTo(other.isSetApiRetCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetApiRetCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.apiRetCode, other.apiRetCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMaxRegisterCount()).compareTo(other.isSetMaxRegisterCount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMaxRegisterCount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.maxRegisterCount, other.maxRegisterCount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateTimestamp()).compareTo(other.isSetCreateTimestamp());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTimestamp()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTimestamp, other.createTimestamp);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLastModifyTimestamp()).compareTo(other.isSetLastModifyTimestamp());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLastModifyTimestamp()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.lastModifyTimestamp, other.lastModifyTimestamp);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPlatformEnv()).compareTo(other.isSetPlatformEnv());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPlatformEnv()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.platformEnv, other.platformEnv);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDeploySet()).compareTo(other.isSetDeploySet());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDeploySet()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.deploySet, other.deploySet);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("QuotationAccount(");
    boolean first = true;

    if (isSetAccountId()) {
      sb.append("accountId:");
      sb.append(this.accountId);
      first = false;
    }
    if (isSetAccountName()) {
      if (!first) sb.append(", ");
      sb.append("accountName:");
      if (this.accountName == null) {
        sb.append("null");
      } else {
        sb.append(this.accountName);
      }
      first = false;
    }
    if (isSetAccountpwd()) {
      if (!first) sb.append(", ");
      sb.append("accountpwd:");
      if (this.accountpwd == null) {
        sb.append("null");
      } else {
        sb.append(this.accountpwd);
      }
      first = false;
    }
    if (isSetNickName()) {
      if (!first) sb.append(", ");
      sb.append("nickName:");
      if (this.nickName == null) {
        sb.append("null");
      } else {
        sb.append(this.nickName);
      }
      first = false;
    }
    if (isSetPlatform()) {
      if (!first) sb.append(", ");
      sb.append("platform:");
      if (this.platform == null) {
        sb.append("null");
      } else {
        sb.append(this.platform);
      }
      first = false;
    }
    if (isSetBrokerId()) {
      if (!first) sb.append(", ");
      sb.append("brokerId:");
      sb.append(this.brokerId);
      first = false;
    }
    if (isSetBrokerAccessId()) {
      if (!first) sb.append(", ");
      sb.append("brokerAccessId:");
      sb.append(this.brokerAccessId);
      first = false;
    }
    if (isSetAccountProperties()) {
      if (!first) sb.append(", ");
      sb.append("accountProperties:");
      if (this.accountProperties == null) {
        sb.append("null");
      } else {
        sb.append(this.accountProperties);
      }
      first = false;
    }
    if (isSetAccountState()) {
      if (!first) sb.append(", ");
      sb.append("accountState:");
      if (this.accountState == null) {
        sb.append("null");
      } else {
        sb.append(this.accountState);
      }
      first = false;
    }
    if (isSetAccessState()) {
      if (!first) sb.append(", ");
      sb.append("accessState:");
      if (this.accessState == null) {
        sb.append("null");
      } else {
        sb.append(this.accessState);
      }
      first = false;
    }
    if (isSetInvalidReason()) {
      if (!first) sb.append(", ");
      sb.append("invalidReason:");
      if (this.invalidReason == null) {
        sb.append("null");
      } else {
        sb.append(this.invalidReason);
      }
      first = false;
    }
    if (isSetInvalidErrorCode()) {
      if (!first) sb.append(", ");
      sb.append("invalidErrorCode:");
      sb.append(this.invalidErrorCode);
      first = false;
    }
    if (isSetApiRetCode()) {
      if (!first) sb.append(", ");
      sb.append("apiRetCode:");
      sb.append(this.apiRetCode);
      first = false;
    }
    if (isSetMaxRegisterCount()) {
      if (!first) sb.append(", ");
      sb.append("maxRegisterCount:");
      sb.append(this.maxRegisterCount);
      first = false;
    }
    if (isSetCreateTimestamp()) {
      if (!first) sb.append(", ");
      sb.append("createTimestamp:");
      sb.append(this.createTimestamp);
      first = false;
    }
    if (isSetLastModifyTimestamp()) {
      if (!first) sb.append(", ");
      sb.append("lastModifyTimestamp:");
      sb.append(this.lastModifyTimestamp);
      first = false;
    }
    if (isSetPlatformEnv()) {
      if (!first) sb.append(", ");
      sb.append("platformEnv:");
      if (this.platformEnv == null) {
        sb.append("null");
      } else {
        sb.append(this.platformEnv);
      }
      first = false;
    }
    if (isSetDeploySet()) {
      if (!first) sb.append(", ");
      sb.append("deploySet:");
      if (this.deploySet == null) {
        sb.append("null");
      } else {
        sb.append(this.deploySet);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class QuotationAccountStandardSchemeFactory implements SchemeFactory {
    public QuotationAccountStandardScheme getScheme() {
      return new QuotationAccountStandardScheme();
    }
  }

  private static class QuotationAccountStandardScheme extends StandardScheme<QuotationAccount> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, QuotationAccount struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ACCOUNT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.accountId = iprot.readI64();
              struct.setAccountIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // ACCOUNT_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.accountName = iprot.readString();
              struct.setAccountNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // ACCOUNTPWD
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.accountpwd = iprot.readString();
              struct.setAccountpwdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // NICK_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.nickName = iprot.readString();
              struct.setNickNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // PLATFORM
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.platform = QuotationTechPlatform.findByValue(iprot.readI32());
              struct.setPlatformIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // BROKER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.brokerId = iprot.readI32();
              struct.setBrokerIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // BROKER_ACCESS_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.brokerAccessId = iprot.readI32();
              struct.setBrokerAccessIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // ACCOUNT_PROPERTIES
            if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
              {
                org.apache.thrift.protocol.TMap _map30 = iprot.readMapBegin();
                struct.accountProperties = new HashMap<String,String>(2*_map30.size);
                for (int _i31 = 0; _i31 < _map30.size; ++_i31)
                {
                  String _key32;
                  String _val33;
                  _key32 = iprot.readString();
                  _val33 = iprot.readString();
                  struct.accountProperties.put(_key32, _val33);
                }
                iprot.readMapEnd();
              }
              struct.setAccountPropertiesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // ACCOUNT_STATE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.accountState = QuotationAccountState.findByValue(iprot.readI32());
              struct.setAccountStateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // ACCESS_STATE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.accessState = QuotationAccountAccessState.findByValue(iprot.readI32());
              struct.setAccessStateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // INVALID_REASON
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.invalidReason = iprot.readString();
              struct.setInvalidReasonIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // INVALID_ERROR_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.invalidErrorCode = iprot.readI32();
              struct.setInvalidErrorCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // API_RET_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.apiRetCode = iprot.readI32();
              struct.setApiRetCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // MAX_REGISTER_COUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.maxRegisterCount = iprot.readI32();
              struct.setMaxRegisterCountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // CREATE_TIMESTAMP
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.createTimestamp = iprot.readI64();
              struct.setCreateTimestampIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // LAST_MODIFY_TIMESTAMP
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.lastModifyTimestamp = iprot.readI64();
              struct.setLastModifyTimestampIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // PLATFORM_ENV
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.platformEnv = QuotationPlatformEnv.findByValue(iprot.readI32());
              struct.setPlatformEnvIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // DEPLOY_SET
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.deploySet = DeploySet.findByValue(iprot.readI32());
              struct.setDeploySetIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, QuotationAccount struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetAccountId()) {
        oprot.writeFieldBegin(ACCOUNT_ID_FIELD_DESC);
        oprot.writeI64(struct.accountId);
        oprot.writeFieldEnd();
      }
      if (struct.accountName != null) {
        if (struct.isSetAccountName()) {
          oprot.writeFieldBegin(ACCOUNT_NAME_FIELD_DESC);
          oprot.writeString(struct.accountName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.accountpwd != null) {
        if (struct.isSetAccountpwd()) {
          oprot.writeFieldBegin(ACCOUNTPWD_FIELD_DESC);
          oprot.writeString(struct.accountpwd);
          oprot.writeFieldEnd();
        }
      }
      if (struct.nickName != null) {
        if (struct.isSetNickName()) {
          oprot.writeFieldBegin(NICK_NAME_FIELD_DESC);
          oprot.writeString(struct.nickName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.platform != null) {
        if (struct.isSetPlatform()) {
          oprot.writeFieldBegin(PLATFORM_FIELD_DESC);
          oprot.writeI32(struct.platform.getValue());
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetBrokerId()) {
        oprot.writeFieldBegin(BROKER_ID_FIELD_DESC);
        oprot.writeI32(struct.brokerId);
        oprot.writeFieldEnd();
      }
      if (struct.isSetBrokerAccessId()) {
        oprot.writeFieldBegin(BROKER_ACCESS_ID_FIELD_DESC);
        oprot.writeI32(struct.brokerAccessId);
        oprot.writeFieldEnd();
      }
      if (struct.accountProperties != null) {
        if (struct.isSetAccountProperties()) {
          oprot.writeFieldBegin(ACCOUNT_PROPERTIES_FIELD_DESC);
          {
            oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, struct.accountProperties.size()));
            for (Map.Entry<String, String> _iter34 : struct.accountProperties.entrySet())
            {
              oprot.writeString(_iter34.getKey());
              oprot.writeString(_iter34.getValue());
            }
            oprot.writeMapEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.accountState != null) {
        if (struct.isSetAccountState()) {
          oprot.writeFieldBegin(ACCOUNT_STATE_FIELD_DESC);
          oprot.writeI32(struct.accountState.getValue());
          oprot.writeFieldEnd();
        }
      }
      if (struct.accessState != null) {
        if (struct.isSetAccessState()) {
          oprot.writeFieldBegin(ACCESS_STATE_FIELD_DESC);
          oprot.writeI32(struct.accessState.getValue());
          oprot.writeFieldEnd();
        }
      }
      if (struct.invalidReason != null) {
        if (struct.isSetInvalidReason()) {
          oprot.writeFieldBegin(INVALID_REASON_FIELD_DESC);
          oprot.writeString(struct.invalidReason);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetInvalidErrorCode()) {
        oprot.writeFieldBegin(INVALID_ERROR_CODE_FIELD_DESC);
        oprot.writeI32(struct.invalidErrorCode);
        oprot.writeFieldEnd();
      }
      if (struct.isSetApiRetCode()) {
        oprot.writeFieldBegin(API_RET_CODE_FIELD_DESC);
        oprot.writeI32(struct.apiRetCode);
        oprot.writeFieldEnd();
      }
      if (struct.isSetMaxRegisterCount()) {
        oprot.writeFieldBegin(MAX_REGISTER_COUNT_FIELD_DESC);
        oprot.writeI32(struct.maxRegisterCount);
        oprot.writeFieldEnd();
      }
      if (struct.isSetCreateTimestamp()) {
        oprot.writeFieldBegin(CREATE_TIMESTAMP_FIELD_DESC);
        oprot.writeI64(struct.createTimestamp);
        oprot.writeFieldEnd();
      }
      if (struct.isSetLastModifyTimestamp()) {
        oprot.writeFieldBegin(LAST_MODIFY_TIMESTAMP_FIELD_DESC);
        oprot.writeI64(struct.lastModifyTimestamp);
        oprot.writeFieldEnd();
      }
      if (struct.platformEnv != null) {
        if (struct.isSetPlatformEnv()) {
          oprot.writeFieldBegin(PLATFORM_ENV_FIELD_DESC);
          oprot.writeI32(struct.platformEnv.getValue());
          oprot.writeFieldEnd();
        }
      }
      if (struct.deploySet != null) {
        if (struct.isSetDeploySet()) {
          oprot.writeFieldBegin(DEPLOY_SET_FIELD_DESC);
          oprot.writeI32(struct.deploySet.getValue());
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class QuotationAccountTupleSchemeFactory implements SchemeFactory {
    public QuotationAccountTupleScheme getScheme() {
      return new QuotationAccountTupleScheme();
    }
  }

  private static class QuotationAccountTupleScheme extends TupleScheme<QuotationAccount> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, QuotationAccount struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetAccountId()) {
        optionals.set(0);
      }
      if (struct.isSetAccountName()) {
        optionals.set(1);
      }
      if (struct.isSetAccountpwd()) {
        optionals.set(2);
      }
      if (struct.isSetNickName()) {
        optionals.set(3);
      }
      if (struct.isSetPlatform()) {
        optionals.set(4);
      }
      if (struct.isSetBrokerId()) {
        optionals.set(5);
      }
      if (struct.isSetBrokerAccessId()) {
        optionals.set(6);
      }
      if (struct.isSetAccountProperties()) {
        optionals.set(7);
      }
      if (struct.isSetAccountState()) {
        optionals.set(8);
      }
      if (struct.isSetAccessState()) {
        optionals.set(9);
      }
      if (struct.isSetInvalidReason()) {
        optionals.set(10);
      }
      if (struct.isSetInvalidErrorCode()) {
        optionals.set(11);
      }
      if (struct.isSetApiRetCode()) {
        optionals.set(12);
      }
      if (struct.isSetMaxRegisterCount()) {
        optionals.set(13);
      }
      if (struct.isSetCreateTimestamp()) {
        optionals.set(14);
      }
      if (struct.isSetLastModifyTimestamp()) {
        optionals.set(15);
      }
      if (struct.isSetPlatformEnv()) {
        optionals.set(16);
      }
      if (struct.isSetDeploySet()) {
        optionals.set(17);
      }
      oprot.writeBitSet(optionals, 18);
      if (struct.isSetAccountId()) {
        oprot.writeI64(struct.accountId);
      }
      if (struct.isSetAccountName()) {
        oprot.writeString(struct.accountName);
      }
      if (struct.isSetAccountpwd()) {
        oprot.writeString(struct.accountpwd);
      }
      if (struct.isSetNickName()) {
        oprot.writeString(struct.nickName);
      }
      if (struct.isSetPlatform()) {
        oprot.writeI32(struct.platform.getValue());
      }
      if (struct.isSetBrokerId()) {
        oprot.writeI32(struct.brokerId);
      }
      if (struct.isSetBrokerAccessId()) {
        oprot.writeI32(struct.brokerAccessId);
      }
      if (struct.isSetAccountProperties()) {
        {
          oprot.writeI32(struct.accountProperties.size());
          for (Map.Entry<String, String> _iter35 : struct.accountProperties.entrySet())
          {
            oprot.writeString(_iter35.getKey());
            oprot.writeString(_iter35.getValue());
          }
        }
      }
      if (struct.isSetAccountState()) {
        oprot.writeI32(struct.accountState.getValue());
      }
      if (struct.isSetAccessState()) {
        oprot.writeI32(struct.accessState.getValue());
      }
      if (struct.isSetInvalidReason()) {
        oprot.writeString(struct.invalidReason);
      }
      if (struct.isSetInvalidErrorCode()) {
        oprot.writeI32(struct.invalidErrorCode);
      }
      if (struct.isSetApiRetCode()) {
        oprot.writeI32(struct.apiRetCode);
      }
      if (struct.isSetMaxRegisterCount()) {
        oprot.writeI32(struct.maxRegisterCount);
      }
      if (struct.isSetCreateTimestamp()) {
        oprot.writeI64(struct.createTimestamp);
      }
      if (struct.isSetLastModifyTimestamp()) {
        oprot.writeI64(struct.lastModifyTimestamp);
      }
      if (struct.isSetPlatformEnv()) {
        oprot.writeI32(struct.platformEnv.getValue());
      }
      if (struct.isSetDeploySet()) {
        oprot.writeI32(struct.deploySet.getValue());
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, QuotationAccount struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(18);
      if (incoming.get(0)) {
        struct.accountId = iprot.readI64();
        struct.setAccountIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.accountName = iprot.readString();
        struct.setAccountNameIsSet(true);
      }
      if (incoming.get(2)) {
        struct.accountpwd = iprot.readString();
        struct.setAccountpwdIsSet(true);
      }
      if (incoming.get(3)) {
        struct.nickName = iprot.readString();
        struct.setNickNameIsSet(true);
      }
      if (incoming.get(4)) {
        struct.platform = QuotationTechPlatform.findByValue(iprot.readI32());
        struct.setPlatformIsSet(true);
      }
      if (incoming.get(5)) {
        struct.brokerId = iprot.readI32();
        struct.setBrokerIdIsSet(true);
      }
      if (incoming.get(6)) {
        struct.brokerAccessId = iprot.readI32();
        struct.setBrokerAccessIdIsSet(true);
      }
      if (incoming.get(7)) {
        {
          org.apache.thrift.protocol.TMap _map36 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.accountProperties = new HashMap<String,String>(2*_map36.size);
          for (int _i37 = 0; _i37 < _map36.size; ++_i37)
          {
            String _key38;
            String _val39;
            _key38 = iprot.readString();
            _val39 = iprot.readString();
            struct.accountProperties.put(_key38, _val39);
          }
        }
        struct.setAccountPropertiesIsSet(true);
      }
      if (incoming.get(8)) {
        struct.accountState = QuotationAccountState.findByValue(iprot.readI32());
        struct.setAccountStateIsSet(true);
      }
      if (incoming.get(9)) {
        struct.accessState = QuotationAccountAccessState.findByValue(iprot.readI32());
        struct.setAccessStateIsSet(true);
      }
      if (incoming.get(10)) {
        struct.invalidReason = iprot.readString();
        struct.setInvalidReasonIsSet(true);
      }
      if (incoming.get(11)) {
        struct.invalidErrorCode = iprot.readI32();
        struct.setInvalidErrorCodeIsSet(true);
      }
      if (incoming.get(12)) {
        struct.apiRetCode = iprot.readI32();
        struct.setApiRetCodeIsSet(true);
      }
      if (incoming.get(13)) {
        struct.maxRegisterCount = iprot.readI32();
        struct.setMaxRegisterCountIsSet(true);
      }
      if (incoming.get(14)) {
        struct.createTimestamp = iprot.readI64();
        struct.setCreateTimestampIsSet(true);
      }
      if (incoming.get(15)) {
        struct.lastModifyTimestamp = iprot.readI64();
        struct.setLastModifyTimestampIsSet(true);
      }
      if (incoming.get(16)) {
        struct.platformEnv = QuotationPlatformEnv.findByValue(iprot.readI32());
        struct.setPlatformEnvIsSet(true);
      }
      if (incoming.get(17)) {
        struct.deploySet = DeploySet.findByValue(iprot.readI32());
        struct.setDeploySetIsSet(true);
      }
    }
  }

}

