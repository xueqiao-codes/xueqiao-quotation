/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.longsheng.xueqiao.contract.dao.thriftapi;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class TCommodityMapFileInfo implements org.apache.thrift.TBase<TCommodityMapFileInfo, TCommodityMapFileInfo._Fields>, java.io.Serializable, Cloneable, Comparable<TCommodityMapFileInfo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TCommodityMapFileInfo");

  private static final org.apache.thrift.protocol.TField COMMODITY_MAP_FILE_FIELD_DESC = new org.apache.thrift.protocol.TField("commodityMapFile", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField TECH_PLATFORM_FIELD_DESC = new org.apache.thrift.protocol.TField("techPlatform", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField BROKER_ENTRY_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("brokerEntryId", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField FILE_MD5_FIELD_DESC = new org.apache.thrift.protocol.TField("fileMD5", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField CREATE_TIMESTAMP_FIELD_DESC = new org.apache.thrift.protocol.TField("createTimestamp", org.apache.thrift.protocol.TType.I64, (short)40);
  private static final org.apache.thrift.protocol.TField LAST_MODITY_TIMESTAMP_FIELD_DESC = new org.apache.thrift.protocol.TField("lastModityTimestamp", org.apache.thrift.protocol.TType.I64, (short)41);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new TCommodityMapFileInfoStandardSchemeFactory());
    schemes.put(TupleScheme.class, new TCommodityMapFileInfoTupleSchemeFactory());
  }

  public ByteBuffer commodityMapFile; // optional
  public int techPlatform; // optional
  public int brokerEntryId; // optional
  public String fileMD5; // optional
  public long createTimestamp; // optional
  public long lastModityTimestamp; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    COMMODITY_MAP_FILE((short)1, "commodityMapFile"),
    TECH_PLATFORM((short)2, "techPlatform"),
    BROKER_ENTRY_ID((short)3, "brokerEntryId"),
    FILE_MD5((short)4, "fileMD5"),
    CREATE_TIMESTAMP((short)40, "createTimestamp"),
    LAST_MODITY_TIMESTAMP((short)41, "lastModityTimestamp");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // COMMODITY_MAP_FILE
          return COMMODITY_MAP_FILE;
        case 2: // TECH_PLATFORM
          return TECH_PLATFORM;
        case 3: // BROKER_ENTRY_ID
          return BROKER_ENTRY_ID;
        case 4: // FILE_MD5
          return FILE_MD5;
        case 40: // CREATE_TIMESTAMP
          return CREATE_TIMESTAMP;
        case 41: // LAST_MODITY_TIMESTAMP
          return LAST_MODITY_TIMESTAMP;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __TECHPLATFORM_ISSET_ID = 0;
  private static final int __BROKERENTRYID_ISSET_ID = 1;
  private static final int __CREATETIMESTAMP_ISSET_ID = 2;
  private static final int __LASTMODITYTIMESTAMP_ISSET_ID = 3;
  private byte __isset_bitfield = 0;
  private _Fields optionals[] = {_Fields.COMMODITY_MAP_FILE,_Fields.TECH_PLATFORM,_Fields.BROKER_ENTRY_ID,_Fields.FILE_MD5,_Fields.CREATE_TIMESTAMP,_Fields.LAST_MODITY_TIMESTAMP};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.COMMODITY_MAP_FILE, new org.apache.thrift.meta_data.FieldMetaData("commodityMapFile", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING        , true)));
    tmpMap.put(_Fields.TECH_PLATFORM, new org.apache.thrift.meta_data.FieldMetaData("techPlatform", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.BROKER_ENTRY_ID, new org.apache.thrift.meta_data.FieldMetaData("brokerEntryId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.FILE_MD5, new org.apache.thrift.meta_data.FieldMetaData("fileMD5", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CREATE_TIMESTAMP, new org.apache.thrift.meta_data.FieldMetaData("createTimestamp", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.LAST_MODITY_TIMESTAMP, new org.apache.thrift.meta_data.FieldMetaData("lastModityTimestamp", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(TCommodityMapFileInfo.class, metaDataMap);
  }

  public TCommodityMapFileInfo() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public TCommodityMapFileInfo(TCommodityMapFileInfo other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetCommodityMapFile()) {
      this.commodityMapFile = org.apache.thrift.TBaseHelper.copyBinary(other.commodityMapFile);
;
    }
    this.techPlatform = other.techPlatform;
    this.brokerEntryId = other.brokerEntryId;
    if (other.isSetFileMD5()) {
      this.fileMD5 = other.fileMD5;
    }
    this.createTimestamp = other.createTimestamp;
    this.lastModityTimestamp = other.lastModityTimestamp;
  }

  public TCommodityMapFileInfo deepCopy() {
    return new TCommodityMapFileInfo(this);
  }

  @Override
  public void clear() {
    this.commodityMapFile = null;
    setTechPlatformIsSet(false);
    this.techPlatform = 0;
    setBrokerEntryIdIsSet(false);
    this.brokerEntryId = 0;
    this.fileMD5 = null;
    setCreateTimestampIsSet(false);
    this.createTimestamp = 0;
    setLastModityTimestampIsSet(false);
    this.lastModityTimestamp = 0;
  }

  public byte[] getCommodityMapFile() {
    setCommodityMapFile(org.apache.thrift.TBaseHelper.rightSize(commodityMapFile));
    return commodityMapFile == null ? null : commodityMapFile.array();
  }

  public ByteBuffer bufferForCommodityMapFile() {
    return commodityMapFile;
  }

  public TCommodityMapFileInfo setCommodityMapFile(byte[] commodityMapFile) {
    setCommodityMapFile(commodityMapFile == null ? (ByteBuffer)null : ByteBuffer.wrap(commodityMapFile));
    return this;
  }

  public TCommodityMapFileInfo setCommodityMapFile(ByteBuffer commodityMapFile) {
    this.commodityMapFile = commodityMapFile;
    return this;
  }

  public void unsetCommodityMapFile() {
    this.commodityMapFile = null;
  }

  /** Returns true if field commodityMapFile is set (has been assigned a value) and false otherwise */
  public boolean isSetCommodityMapFile() {
    return this.commodityMapFile != null;
  }

  public void setCommodityMapFileIsSet(boolean value) {
    if (!value) {
      this.commodityMapFile = null;
    }
  }

  public int getTechPlatform() {
    return this.techPlatform;
  }

  public TCommodityMapFileInfo setTechPlatform(int techPlatform) {
    this.techPlatform = techPlatform;
    setTechPlatformIsSet(true);
    return this;
  }

  public void unsetTechPlatform() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __TECHPLATFORM_ISSET_ID);
  }

  /** Returns true if field techPlatform is set (has been assigned a value) and false otherwise */
  public boolean isSetTechPlatform() {
    return EncodingUtils.testBit(__isset_bitfield, __TECHPLATFORM_ISSET_ID);
  }

  public void setTechPlatformIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __TECHPLATFORM_ISSET_ID, value);
  }

  public int getBrokerEntryId() {
    return this.brokerEntryId;
  }

  public TCommodityMapFileInfo setBrokerEntryId(int brokerEntryId) {
    this.brokerEntryId = brokerEntryId;
    setBrokerEntryIdIsSet(true);
    return this;
  }

  public void unsetBrokerEntryId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __BROKERENTRYID_ISSET_ID);
  }

  /** Returns true if field brokerEntryId is set (has been assigned a value) and false otherwise */
  public boolean isSetBrokerEntryId() {
    return EncodingUtils.testBit(__isset_bitfield, __BROKERENTRYID_ISSET_ID);
  }

  public void setBrokerEntryIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __BROKERENTRYID_ISSET_ID, value);
  }

  public String getFileMD5() {
    return this.fileMD5;
  }

  public TCommodityMapFileInfo setFileMD5(String fileMD5) {
    this.fileMD5 = fileMD5;
    return this;
  }

  public void unsetFileMD5() {
    this.fileMD5 = null;
  }

  /** Returns true if field fileMD5 is set (has been assigned a value) and false otherwise */
  public boolean isSetFileMD5() {
    return this.fileMD5 != null;
  }

  public void setFileMD5IsSet(boolean value) {
    if (!value) {
      this.fileMD5 = null;
    }
  }

  public long getCreateTimestamp() {
    return this.createTimestamp;
  }

  public TCommodityMapFileInfo setCreateTimestamp(long createTimestamp) {
    this.createTimestamp = createTimestamp;
    setCreateTimestampIsSet(true);
    return this;
  }

  public void unsetCreateTimestamp() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CREATETIMESTAMP_ISSET_ID);
  }

  /** Returns true if field createTimestamp is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTimestamp() {
    return EncodingUtils.testBit(__isset_bitfield, __CREATETIMESTAMP_ISSET_ID);
  }

  public void setCreateTimestampIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CREATETIMESTAMP_ISSET_ID, value);
  }

  public long getLastModityTimestamp() {
    return this.lastModityTimestamp;
  }

  public TCommodityMapFileInfo setLastModityTimestamp(long lastModityTimestamp) {
    this.lastModityTimestamp = lastModityTimestamp;
    setLastModityTimestampIsSet(true);
    return this;
  }

  public void unsetLastModityTimestamp() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __LASTMODITYTIMESTAMP_ISSET_ID);
  }

  /** Returns true if field lastModityTimestamp is set (has been assigned a value) and false otherwise */
  public boolean isSetLastModityTimestamp() {
    return EncodingUtils.testBit(__isset_bitfield, __LASTMODITYTIMESTAMP_ISSET_ID);
  }

  public void setLastModityTimestampIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __LASTMODITYTIMESTAMP_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case COMMODITY_MAP_FILE:
      if (value == null) {
        unsetCommodityMapFile();
      } else {
        setCommodityMapFile((ByteBuffer)value);
      }
      break;

    case TECH_PLATFORM:
      if (value == null) {
        unsetTechPlatform();
      } else {
        setTechPlatform((Integer)value);
      }
      break;

    case BROKER_ENTRY_ID:
      if (value == null) {
        unsetBrokerEntryId();
      } else {
        setBrokerEntryId((Integer)value);
      }
      break;

    case FILE_MD5:
      if (value == null) {
        unsetFileMD5();
      } else {
        setFileMD5((String)value);
      }
      break;

    case CREATE_TIMESTAMP:
      if (value == null) {
        unsetCreateTimestamp();
      } else {
        setCreateTimestamp((Long)value);
      }
      break;

    case LAST_MODITY_TIMESTAMP:
      if (value == null) {
        unsetLastModityTimestamp();
      } else {
        setLastModityTimestamp((Long)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case COMMODITY_MAP_FILE:
      return getCommodityMapFile();

    case TECH_PLATFORM:
      return Integer.valueOf(getTechPlatform());

    case BROKER_ENTRY_ID:
      return Integer.valueOf(getBrokerEntryId());

    case FILE_MD5:
      return getFileMD5();

    case CREATE_TIMESTAMP:
      return Long.valueOf(getCreateTimestamp());

    case LAST_MODITY_TIMESTAMP:
      return Long.valueOf(getLastModityTimestamp());

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case COMMODITY_MAP_FILE:
      return isSetCommodityMapFile();
    case TECH_PLATFORM:
      return isSetTechPlatform();
    case BROKER_ENTRY_ID:
      return isSetBrokerEntryId();
    case FILE_MD5:
      return isSetFileMD5();
    case CREATE_TIMESTAMP:
      return isSetCreateTimestamp();
    case LAST_MODITY_TIMESTAMP:
      return isSetLastModityTimestamp();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof TCommodityMapFileInfo)
      return this.equals((TCommodityMapFileInfo)that);
    return false;
  }

  public boolean equals(TCommodityMapFileInfo that) {
    if (that == null)
      return false;

    boolean this_present_commodityMapFile = true && this.isSetCommodityMapFile();
    boolean that_present_commodityMapFile = true && that.isSetCommodityMapFile();
    if (this_present_commodityMapFile || that_present_commodityMapFile) {
      if (!(this_present_commodityMapFile && that_present_commodityMapFile))
        return false;
      if (!this.commodityMapFile.equals(that.commodityMapFile))
        return false;
    }

    boolean this_present_techPlatform = true && this.isSetTechPlatform();
    boolean that_present_techPlatform = true && that.isSetTechPlatform();
    if (this_present_techPlatform || that_present_techPlatform) {
      if (!(this_present_techPlatform && that_present_techPlatform))
        return false;
      if (this.techPlatform != that.techPlatform)
        return false;
    }

    boolean this_present_brokerEntryId = true && this.isSetBrokerEntryId();
    boolean that_present_brokerEntryId = true && that.isSetBrokerEntryId();
    if (this_present_brokerEntryId || that_present_brokerEntryId) {
      if (!(this_present_brokerEntryId && that_present_brokerEntryId))
        return false;
      if (this.brokerEntryId != that.brokerEntryId)
        return false;
    }

    boolean this_present_fileMD5 = true && this.isSetFileMD5();
    boolean that_present_fileMD5 = true && that.isSetFileMD5();
    if (this_present_fileMD5 || that_present_fileMD5) {
      if (!(this_present_fileMD5 && that_present_fileMD5))
        return false;
      if (!this.fileMD5.equals(that.fileMD5))
        return false;
    }

    boolean this_present_createTimestamp = true && this.isSetCreateTimestamp();
    boolean that_present_createTimestamp = true && that.isSetCreateTimestamp();
    if (this_present_createTimestamp || that_present_createTimestamp) {
      if (!(this_present_createTimestamp && that_present_createTimestamp))
        return false;
      if (this.createTimestamp != that.createTimestamp)
        return false;
    }

    boolean this_present_lastModityTimestamp = true && this.isSetLastModityTimestamp();
    boolean that_present_lastModityTimestamp = true && that.isSetLastModityTimestamp();
    if (this_present_lastModityTimestamp || that_present_lastModityTimestamp) {
      if (!(this_present_lastModityTimestamp && that_present_lastModityTimestamp))
        return false;
      if (this.lastModityTimestamp != that.lastModityTimestamp)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  @Override
  public int compareTo(TCommodityMapFileInfo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetCommodityMapFile()).compareTo(other.isSetCommodityMapFile());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCommodityMapFile()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.commodityMapFile, other.commodityMapFile);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTechPlatform()).compareTo(other.isSetTechPlatform());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTechPlatform()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.techPlatform, other.techPlatform);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBrokerEntryId()).compareTo(other.isSetBrokerEntryId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBrokerEntryId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.brokerEntryId, other.brokerEntryId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFileMD5()).compareTo(other.isSetFileMD5());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFileMD5()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.fileMD5, other.fileMD5);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateTimestamp()).compareTo(other.isSetCreateTimestamp());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTimestamp()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTimestamp, other.createTimestamp);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLastModityTimestamp()).compareTo(other.isSetLastModityTimestamp());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLastModityTimestamp()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.lastModityTimestamp, other.lastModityTimestamp);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("TCommodityMapFileInfo(");
    boolean first = true;

    if (isSetCommodityMapFile()) {
      sb.append("commodityMapFile:");
      if (this.commodityMapFile == null) {
        sb.append("null");
      } else {
        org.apache.thrift.TBaseHelper.toString(this.commodityMapFile, sb);
      }
      first = false;
    }
    if (isSetTechPlatform()) {
      if (!first) sb.append(", ");
      sb.append("techPlatform:");
      sb.append(this.techPlatform);
      first = false;
    }
    if (isSetBrokerEntryId()) {
      if (!first) sb.append(", ");
      sb.append("brokerEntryId:");
      sb.append(this.brokerEntryId);
      first = false;
    }
    if (isSetFileMD5()) {
      if (!first) sb.append(", ");
      sb.append("fileMD5:");
      if (this.fileMD5 == null) {
        sb.append("null");
      } else {
        sb.append(this.fileMD5);
      }
      first = false;
    }
    if (isSetCreateTimestamp()) {
      if (!first) sb.append(", ");
      sb.append("createTimestamp:");
      sb.append(this.createTimestamp);
      first = false;
    }
    if (isSetLastModityTimestamp()) {
      if (!first) sb.append(", ");
      sb.append("lastModityTimestamp:");
      sb.append(this.lastModityTimestamp);
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class TCommodityMapFileInfoStandardSchemeFactory implements SchemeFactory {
    public TCommodityMapFileInfoStandardScheme getScheme() {
      return new TCommodityMapFileInfoStandardScheme();
    }
  }

  private static class TCommodityMapFileInfoStandardScheme extends StandardScheme<TCommodityMapFileInfo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, TCommodityMapFileInfo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // COMMODITY_MAP_FILE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.commodityMapFile = iprot.readBinary();
              struct.setCommodityMapFileIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // TECH_PLATFORM
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.techPlatform = iprot.readI32();
              struct.setTechPlatformIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // BROKER_ENTRY_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.brokerEntryId = iprot.readI32();
              struct.setBrokerEntryIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // FILE_MD5
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.fileMD5 = iprot.readString();
              struct.setFileMD5IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 40: // CREATE_TIMESTAMP
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.createTimestamp = iprot.readI64();
              struct.setCreateTimestampIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 41: // LAST_MODITY_TIMESTAMP
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.lastModityTimestamp = iprot.readI64();
              struct.setLastModityTimestampIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, TCommodityMapFileInfo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.commodityMapFile != null) {
        if (struct.isSetCommodityMapFile()) {
          oprot.writeFieldBegin(COMMODITY_MAP_FILE_FIELD_DESC);
          oprot.writeBinary(struct.commodityMapFile);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetTechPlatform()) {
        oprot.writeFieldBegin(TECH_PLATFORM_FIELD_DESC);
        oprot.writeI32(struct.techPlatform);
        oprot.writeFieldEnd();
      }
      if (struct.isSetBrokerEntryId()) {
        oprot.writeFieldBegin(BROKER_ENTRY_ID_FIELD_DESC);
        oprot.writeI32(struct.brokerEntryId);
        oprot.writeFieldEnd();
      }
      if (struct.fileMD5 != null) {
        if (struct.isSetFileMD5()) {
          oprot.writeFieldBegin(FILE_MD5_FIELD_DESC);
          oprot.writeString(struct.fileMD5);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetCreateTimestamp()) {
        oprot.writeFieldBegin(CREATE_TIMESTAMP_FIELD_DESC);
        oprot.writeI64(struct.createTimestamp);
        oprot.writeFieldEnd();
      }
      if (struct.isSetLastModityTimestamp()) {
        oprot.writeFieldBegin(LAST_MODITY_TIMESTAMP_FIELD_DESC);
        oprot.writeI64(struct.lastModityTimestamp);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class TCommodityMapFileInfoTupleSchemeFactory implements SchemeFactory {
    public TCommodityMapFileInfoTupleScheme getScheme() {
      return new TCommodityMapFileInfoTupleScheme();
    }
  }

  private static class TCommodityMapFileInfoTupleScheme extends TupleScheme<TCommodityMapFileInfo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, TCommodityMapFileInfo struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetCommodityMapFile()) {
        optionals.set(0);
      }
      if (struct.isSetTechPlatform()) {
        optionals.set(1);
      }
      if (struct.isSetBrokerEntryId()) {
        optionals.set(2);
      }
      if (struct.isSetFileMD5()) {
        optionals.set(3);
      }
      if (struct.isSetCreateTimestamp()) {
        optionals.set(4);
      }
      if (struct.isSetLastModityTimestamp()) {
        optionals.set(5);
      }
      oprot.writeBitSet(optionals, 6);
      if (struct.isSetCommodityMapFile()) {
        oprot.writeBinary(struct.commodityMapFile);
      }
      if (struct.isSetTechPlatform()) {
        oprot.writeI32(struct.techPlatform);
      }
      if (struct.isSetBrokerEntryId()) {
        oprot.writeI32(struct.brokerEntryId);
      }
      if (struct.isSetFileMD5()) {
        oprot.writeString(struct.fileMD5);
      }
      if (struct.isSetCreateTimestamp()) {
        oprot.writeI64(struct.createTimestamp);
      }
      if (struct.isSetLastModityTimestamp()) {
        oprot.writeI64(struct.lastModityTimestamp);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, TCommodityMapFileInfo struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(6);
      if (incoming.get(0)) {
        struct.commodityMapFile = iprot.readBinary();
        struct.setCommodityMapFileIsSet(true);
      }
      if (incoming.get(1)) {
        struct.techPlatform = iprot.readI32();
        struct.setTechPlatformIsSet(true);
      }
      if (incoming.get(2)) {
        struct.brokerEntryId = iprot.readI32();
        struct.setBrokerEntryIdIsSet(true);
      }
      if (incoming.get(3)) {
        struct.fileMD5 = iprot.readString();
        struct.setFileMD5IsSet(true);
      }
      if (incoming.get(4)) {
        struct.createTimestamp = iprot.readI64();
        struct.setCreateTimestampIsSet(true);
      }
      if (incoming.get(5)) {
        struct.lastModityTimestamp = iprot.readI64();
        struct.setLastModityTimestampIsSet(true);
      }
    }
  }

}

