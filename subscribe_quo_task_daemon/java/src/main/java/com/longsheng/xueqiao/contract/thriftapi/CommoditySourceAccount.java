/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.longsheng.xueqiao.contract.thriftapi;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class CommoditySourceAccount implements org.apache.thrift.TBase<CommoditySourceAccount, CommoditySourceAccount._Fields>, java.io.Serializable, Cloneable, Comparable<CommoditySourceAccount> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("CommoditySourceAccount");

  private static final org.apache.thrift.protocol.TField ACCOUNT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("accountId", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField TECH_PLATFORM_FIELD_DESC = new org.apache.thrift.protocol.TField("techPlatform", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField TECH_PLATFORM_ENV_FIELD_DESC = new org.apache.thrift.protocol.TField("techPlatformEnv", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField ACCOUNT_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("accountName", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField ACCOUNTPWD_FIELD_DESC = new org.apache.thrift.protocol.TField("accountpwd", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField BROKER_ENTRY_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("brokerEntryId", org.apache.thrift.protocol.TType.I32, (short)6);
  private static final org.apache.thrift.protocol.TField BROKER_ACCESS_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("brokerAccessId", org.apache.thrift.protocol.TType.I32, (short)7);
  private static final org.apache.thrift.protocol.TField ACCOUNT_PROPERTIES_FIELD_DESC = new org.apache.thrift.protocol.TField("accountProperties", org.apache.thrift.protocol.TType.MAP, (short)10);
  private static final org.apache.thrift.protocol.TField ACCESS_STATE_FIELD_DESC = new org.apache.thrift.protocol.TField("accessState", org.apache.thrift.protocol.TType.I32, (short)11);
  private static final org.apache.thrift.protocol.TField INVALID_REASON_FIELD_DESC = new org.apache.thrift.protocol.TField("invalidReason", org.apache.thrift.protocol.TType.STRING, (short)12);
  private static final org.apache.thrift.protocol.TField API_RET_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("apiRetCode", org.apache.thrift.protocol.TType.I32, (short)14);
  private static final org.apache.thrift.protocol.TField IP_ADDRESS_FIELD_DESC = new org.apache.thrift.protocol.TField("ipAddress", org.apache.thrift.protocol.TType.STRING, (short)16);
  private static final org.apache.thrift.protocol.TField PORT_FIELD_DESC = new org.apache.thrift.protocol.TField("port", org.apache.thrift.protocol.TType.I32, (short)17);
  private static final org.apache.thrift.protocol.TField CREATE_TIMESTAMP_FIELD_DESC = new org.apache.thrift.protocol.TField("createTimestamp", org.apache.thrift.protocol.TType.I64, (short)25);
  private static final org.apache.thrift.protocol.TField LAST_MODIFY_TIMESTAMP_FIELD_DESC = new org.apache.thrift.protocol.TField("lastModifyTimestamp", org.apache.thrift.protocol.TType.I64, (short)26);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new CommoditySourceAccountStandardSchemeFactory());
    schemes.put(TupleScheme.class, new CommoditySourceAccountTupleSchemeFactory());
  }

  public int accountId; // optional
  /**
   * 
   * @see com.longsheng.xueqiao.contract.standard.thriftapi.TechPlatform
   */
  public com.longsheng.xueqiao.contract.standard.thriftapi.TechPlatform techPlatform; // optional
  /**
   * 
   * @see com.longsheng.xueqiao.contract.standard.thriftapi.TechPlatformEnv
   */
  public com.longsheng.xueqiao.contract.standard.thriftapi.TechPlatformEnv techPlatformEnv; // optional
  public String accountName; // optional
  public String accountpwd; // optional
  public int brokerEntryId; // optional
  public int brokerAccessId; // optional
  public Map<String,String> accountProperties; // optional
  /**
   * 
   * @see AccountAccessState
   */
  public AccountAccessState accessState; // optional
  public String invalidReason; // optional
  public int apiRetCode; // optional
  public String ipAddress; // optional
  public int port; // optional
  public long createTimestamp; // optional
  public long lastModifyTimestamp; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ACCOUNT_ID((short)1, "accountId"),
    /**
     * 
     * @see com.longsheng.xueqiao.contract.standard.thriftapi.TechPlatform
     */
    TECH_PLATFORM((short)2, "techPlatform"),
    /**
     * 
     * @see com.longsheng.xueqiao.contract.standard.thriftapi.TechPlatformEnv
     */
    TECH_PLATFORM_ENV((short)3, "techPlatformEnv"),
    ACCOUNT_NAME((short)4, "accountName"),
    ACCOUNTPWD((short)5, "accountpwd"),
    BROKER_ENTRY_ID((short)6, "brokerEntryId"),
    BROKER_ACCESS_ID((short)7, "brokerAccessId"),
    ACCOUNT_PROPERTIES((short)10, "accountProperties"),
    /**
     * 
     * @see AccountAccessState
     */
    ACCESS_STATE((short)11, "accessState"),
    INVALID_REASON((short)12, "invalidReason"),
    API_RET_CODE((short)14, "apiRetCode"),
    IP_ADDRESS((short)16, "ipAddress"),
    PORT((short)17, "port"),
    CREATE_TIMESTAMP((short)25, "createTimestamp"),
    LAST_MODIFY_TIMESTAMP((short)26, "lastModifyTimestamp");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ACCOUNT_ID
          return ACCOUNT_ID;
        case 2: // TECH_PLATFORM
          return TECH_PLATFORM;
        case 3: // TECH_PLATFORM_ENV
          return TECH_PLATFORM_ENV;
        case 4: // ACCOUNT_NAME
          return ACCOUNT_NAME;
        case 5: // ACCOUNTPWD
          return ACCOUNTPWD;
        case 6: // BROKER_ENTRY_ID
          return BROKER_ENTRY_ID;
        case 7: // BROKER_ACCESS_ID
          return BROKER_ACCESS_ID;
        case 10: // ACCOUNT_PROPERTIES
          return ACCOUNT_PROPERTIES;
        case 11: // ACCESS_STATE
          return ACCESS_STATE;
        case 12: // INVALID_REASON
          return INVALID_REASON;
        case 14: // API_RET_CODE
          return API_RET_CODE;
        case 16: // IP_ADDRESS
          return IP_ADDRESS;
        case 17: // PORT
          return PORT;
        case 25: // CREATE_TIMESTAMP
          return CREATE_TIMESTAMP;
        case 26: // LAST_MODIFY_TIMESTAMP
          return LAST_MODIFY_TIMESTAMP;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ACCOUNTID_ISSET_ID = 0;
  private static final int __BROKERENTRYID_ISSET_ID = 1;
  private static final int __BROKERACCESSID_ISSET_ID = 2;
  private static final int __APIRETCODE_ISSET_ID = 3;
  private static final int __PORT_ISSET_ID = 4;
  private static final int __CREATETIMESTAMP_ISSET_ID = 5;
  private static final int __LASTMODIFYTIMESTAMP_ISSET_ID = 6;
  private byte __isset_bitfield = 0;
  private _Fields optionals[] = {_Fields.ACCOUNT_ID,_Fields.TECH_PLATFORM,_Fields.TECH_PLATFORM_ENV,_Fields.ACCOUNT_NAME,_Fields.ACCOUNTPWD,_Fields.BROKER_ENTRY_ID,_Fields.BROKER_ACCESS_ID,_Fields.ACCOUNT_PROPERTIES,_Fields.ACCESS_STATE,_Fields.INVALID_REASON,_Fields.API_RET_CODE,_Fields.IP_ADDRESS,_Fields.PORT,_Fields.CREATE_TIMESTAMP,_Fields.LAST_MODIFY_TIMESTAMP};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ACCOUNT_ID, new org.apache.thrift.meta_data.FieldMetaData("accountId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.TECH_PLATFORM, new org.apache.thrift.meta_data.FieldMetaData("techPlatform", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, com.longsheng.xueqiao.contract.standard.thriftapi.TechPlatform.class)));
    tmpMap.put(_Fields.TECH_PLATFORM_ENV, new org.apache.thrift.meta_data.FieldMetaData("techPlatformEnv", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, com.longsheng.xueqiao.contract.standard.thriftapi.TechPlatformEnv.class)));
    tmpMap.put(_Fields.ACCOUNT_NAME, new org.apache.thrift.meta_data.FieldMetaData("accountName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ACCOUNTPWD, new org.apache.thrift.meta_data.FieldMetaData("accountpwd", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BROKER_ENTRY_ID, new org.apache.thrift.meta_data.FieldMetaData("brokerEntryId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.BROKER_ACCESS_ID, new org.apache.thrift.meta_data.FieldMetaData("brokerAccessId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ACCOUNT_PROPERTIES, new org.apache.thrift.meta_data.FieldMetaData("accountProperties", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING), 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    tmpMap.put(_Fields.ACCESS_STATE, new org.apache.thrift.meta_data.FieldMetaData("accessState", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, AccountAccessState.class)));
    tmpMap.put(_Fields.INVALID_REASON, new org.apache.thrift.meta_data.FieldMetaData("invalidReason", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.API_RET_CODE, new org.apache.thrift.meta_data.FieldMetaData("apiRetCode", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.IP_ADDRESS, new org.apache.thrift.meta_data.FieldMetaData("ipAddress", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PORT, new org.apache.thrift.meta_data.FieldMetaData("port", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CREATE_TIMESTAMP, new org.apache.thrift.meta_data.FieldMetaData("createTimestamp", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.LAST_MODIFY_TIMESTAMP, new org.apache.thrift.meta_data.FieldMetaData("lastModifyTimestamp", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(CommoditySourceAccount.class, metaDataMap);
  }

  public CommoditySourceAccount() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public CommoditySourceAccount(CommoditySourceAccount other) {
    __isset_bitfield = other.__isset_bitfield;
    this.accountId = other.accountId;
    if (other.isSetTechPlatform()) {
      this.techPlatform = other.techPlatform;
    }
    if (other.isSetTechPlatformEnv()) {
      this.techPlatformEnv = other.techPlatformEnv;
    }
    if (other.isSetAccountName()) {
      this.accountName = other.accountName;
    }
    if (other.isSetAccountpwd()) {
      this.accountpwd = other.accountpwd;
    }
    this.brokerEntryId = other.brokerEntryId;
    this.brokerAccessId = other.brokerAccessId;
    if (other.isSetAccountProperties()) {
      Map<String,String> __this__accountProperties = new HashMap<String,String>(other.accountProperties);
      this.accountProperties = __this__accountProperties;
    }
    if (other.isSetAccessState()) {
      this.accessState = other.accessState;
    }
    if (other.isSetInvalidReason()) {
      this.invalidReason = other.invalidReason;
    }
    this.apiRetCode = other.apiRetCode;
    if (other.isSetIpAddress()) {
      this.ipAddress = other.ipAddress;
    }
    this.port = other.port;
    this.createTimestamp = other.createTimestamp;
    this.lastModifyTimestamp = other.lastModifyTimestamp;
  }

  public CommoditySourceAccount deepCopy() {
    return new CommoditySourceAccount(this);
  }

  @Override
  public void clear() {
    setAccountIdIsSet(false);
    this.accountId = 0;
    this.techPlatform = null;
    this.techPlatformEnv = null;
    this.accountName = null;
    this.accountpwd = null;
    setBrokerEntryIdIsSet(false);
    this.brokerEntryId = 0;
    setBrokerAccessIdIsSet(false);
    this.brokerAccessId = 0;
    this.accountProperties = null;
    this.accessState = null;
    this.invalidReason = null;
    setApiRetCodeIsSet(false);
    this.apiRetCode = 0;
    this.ipAddress = null;
    setPortIsSet(false);
    this.port = 0;
    setCreateTimestampIsSet(false);
    this.createTimestamp = 0;
    setLastModifyTimestampIsSet(false);
    this.lastModifyTimestamp = 0;
  }

  public int getAccountId() {
    return this.accountId;
  }

  public CommoditySourceAccount setAccountId(int accountId) {
    this.accountId = accountId;
    setAccountIdIsSet(true);
    return this;
  }

  public void unsetAccountId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ACCOUNTID_ISSET_ID);
  }

  /** Returns true if field accountId is set (has been assigned a value) and false otherwise */
  public boolean isSetAccountId() {
    return EncodingUtils.testBit(__isset_bitfield, __ACCOUNTID_ISSET_ID);
  }

  public void setAccountIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ACCOUNTID_ISSET_ID, value);
  }

  /**
   * 
   * @see com.longsheng.xueqiao.contract.standard.thriftapi.TechPlatform
   */
  public com.longsheng.xueqiao.contract.standard.thriftapi.TechPlatform getTechPlatform() {
    return this.techPlatform;
  }

  /**
   * 
   * @see com.longsheng.xueqiao.contract.standard.thriftapi.TechPlatform
   */
  public CommoditySourceAccount setTechPlatform(com.longsheng.xueqiao.contract.standard.thriftapi.TechPlatform techPlatform) {
    this.techPlatform = techPlatform;
    return this;
  }

  public void unsetTechPlatform() {
    this.techPlatform = null;
  }

  /** Returns true if field techPlatform is set (has been assigned a value) and false otherwise */
  public boolean isSetTechPlatform() {
    return this.techPlatform != null;
  }

  public void setTechPlatformIsSet(boolean value) {
    if (!value) {
      this.techPlatform = null;
    }
  }

  /**
   * 
   * @see com.longsheng.xueqiao.contract.standard.thriftapi.TechPlatformEnv
   */
  public com.longsheng.xueqiao.contract.standard.thriftapi.TechPlatformEnv getTechPlatformEnv() {
    return this.techPlatformEnv;
  }

  /**
   * 
   * @see com.longsheng.xueqiao.contract.standard.thriftapi.TechPlatformEnv
   */
  public CommoditySourceAccount setTechPlatformEnv(com.longsheng.xueqiao.contract.standard.thriftapi.TechPlatformEnv techPlatformEnv) {
    this.techPlatformEnv = techPlatformEnv;
    return this;
  }

  public void unsetTechPlatformEnv() {
    this.techPlatformEnv = null;
  }

  /** Returns true if field techPlatformEnv is set (has been assigned a value) and false otherwise */
  public boolean isSetTechPlatformEnv() {
    return this.techPlatformEnv != null;
  }

  public void setTechPlatformEnvIsSet(boolean value) {
    if (!value) {
      this.techPlatformEnv = null;
    }
  }

  public String getAccountName() {
    return this.accountName;
  }

  public CommoditySourceAccount setAccountName(String accountName) {
    this.accountName = accountName;
    return this;
  }

  public void unsetAccountName() {
    this.accountName = null;
  }

  /** Returns true if field accountName is set (has been assigned a value) and false otherwise */
  public boolean isSetAccountName() {
    return this.accountName != null;
  }

  public void setAccountNameIsSet(boolean value) {
    if (!value) {
      this.accountName = null;
    }
  }

  public String getAccountpwd() {
    return this.accountpwd;
  }

  public CommoditySourceAccount setAccountpwd(String accountpwd) {
    this.accountpwd = accountpwd;
    return this;
  }

  public void unsetAccountpwd() {
    this.accountpwd = null;
  }

  /** Returns true if field accountpwd is set (has been assigned a value) and false otherwise */
  public boolean isSetAccountpwd() {
    return this.accountpwd != null;
  }

  public void setAccountpwdIsSet(boolean value) {
    if (!value) {
      this.accountpwd = null;
    }
  }

  public int getBrokerEntryId() {
    return this.brokerEntryId;
  }

  public CommoditySourceAccount setBrokerEntryId(int brokerEntryId) {
    this.brokerEntryId = brokerEntryId;
    setBrokerEntryIdIsSet(true);
    return this;
  }

  public void unsetBrokerEntryId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __BROKERENTRYID_ISSET_ID);
  }

  /** Returns true if field brokerEntryId is set (has been assigned a value) and false otherwise */
  public boolean isSetBrokerEntryId() {
    return EncodingUtils.testBit(__isset_bitfield, __BROKERENTRYID_ISSET_ID);
  }

  public void setBrokerEntryIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __BROKERENTRYID_ISSET_ID, value);
  }

  public int getBrokerAccessId() {
    return this.brokerAccessId;
  }

  public CommoditySourceAccount setBrokerAccessId(int brokerAccessId) {
    this.brokerAccessId = brokerAccessId;
    setBrokerAccessIdIsSet(true);
    return this;
  }

  public void unsetBrokerAccessId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __BROKERACCESSID_ISSET_ID);
  }

  /** Returns true if field brokerAccessId is set (has been assigned a value) and false otherwise */
  public boolean isSetBrokerAccessId() {
    return EncodingUtils.testBit(__isset_bitfield, __BROKERACCESSID_ISSET_ID);
  }

  public void setBrokerAccessIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __BROKERACCESSID_ISSET_ID, value);
  }

  public int getAccountPropertiesSize() {
    return (this.accountProperties == null) ? 0 : this.accountProperties.size();
  }

  public void putToAccountProperties(String key, String val) {
    if (this.accountProperties == null) {
      this.accountProperties = new HashMap<String,String>();
    }
    this.accountProperties.put(key, val);
  }

  public Map<String,String> getAccountProperties() {
    return this.accountProperties;
  }

  public CommoditySourceAccount setAccountProperties(Map<String,String> accountProperties) {
    this.accountProperties = accountProperties;
    return this;
  }

  public void unsetAccountProperties() {
    this.accountProperties = null;
  }

  /** Returns true if field accountProperties is set (has been assigned a value) and false otherwise */
  public boolean isSetAccountProperties() {
    return this.accountProperties != null;
  }

  public void setAccountPropertiesIsSet(boolean value) {
    if (!value) {
      this.accountProperties = null;
    }
  }

  /**
   * 
   * @see AccountAccessState
   */
  public AccountAccessState getAccessState() {
    return this.accessState;
  }

  /**
   * 
   * @see AccountAccessState
   */
  public CommoditySourceAccount setAccessState(AccountAccessState accessState) {
    this.accessState = accessState;
    return this;
  }

  public void unsetAccessState() {
    this.accessState = null;
  }

  /** Returns true if field accessState is set (has been assigned a value) and false otherwise */
  public boolean isSetAccessState() {
    return this.accessState != null;
  }

  public void setAccessStateIsSet(boolean value) {
    if (!value) {
      this.accessState = null;
    }
  }

  public String getInvalidReason() {
    return this.invalidReason;
  }

  public CommoditySourceAccount setInvalidReason(String invalidReason) {
    this.invalidReason = invalidReason;
    return this;
  }

  public void unsetInvalidReason() {
    this.invalidReason = null;
  }

  /** Returns true if field invalidReason is set (has been assigned a value) and false otherwise */
  public boolean isSetInvalidReason() {
    return this.invalidReason != null;
  }

  public void setInvalidReasonIsSet(boolean value) {
    if (!value) {
      this.invalidReason = null;
    }
  }

  public int getApiRetCode() {
    return this.apiRetCode;
  }

  public CommoditySourceAccount setApiRetCode(int apiRetCode) {
    this.apiRetCode = apiRetCode;
    setApiRetCodeIsSet(true);
    return this;
  }

  public void unsetApiRetCode() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __APIRETCODE_ISSET_ID);
  }

  /** Returns true if field apiRetCode is set (has been assigned a value) and false otherwise */
  public boolean isSetApiRetCode() {
    return EncodingUtils.testBit(__isset_bitfield, __APIRETCODE_ISSET_ID);
  }

  public void setApiRetCodeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __APIRETCODE_ISSET_ID, value);
  }

  public String getIpAddress() {
    return this.ipAddress;
  }

  public CommoditySourceAccount setIpAddress(String ipAddress) {
    this.ipAddress = ipAddress;
    return this;
  }

  public void unsetIpAddress() {
    this.ipAddress = null;
  }

  /** Returns true if field ipAddress is set (has been assigned a value) and false otherwise */
  public boolean isSetIpAddress() {
    return this.ipAddress != null;
  }

  public void setIpAddressIsSet(boolean value) {
    if (!value) {
      this.ipAddress = null;
    }
  }

  public int getPort() {
    return this.port;
  }

  public CommoditySourceAccount setPort(int port) {
    this.port = port;
    setPortIsSet(true);
    return this;
  }

  public void unsetPort() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PORT_ISSET_ID);
  }

  /** Returns true if field port is set (has been assigned a value) and false otherwise */
  public boolean isSetPort() {
    return EncodingUtils.testBit(__isset_bitfield, __PORT_ISSET_ID);
  }

  public void setPortIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PORT_ISSET_ID, value);
  }

  public long getCreateTimestamp() {
    return this.createTimestamp;
  }

  public CommoditySourceAccount setCreateTimestamp(long createTimestamp) {
    this.createTimestamp = createTimestamp;
    setCreateTimestampIsSet(true);
    return this;
  }

  public void unsetCreateTimestamp() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CREATETIMESTAMP_ISSET_ID);
  }

  /** Returns true if field createTimestamp is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTimestamp() {
    return EncodingUtils.testBit(__isset_bitfield, __CREATETIMESTAMP_ISSET_ID);
  }

  public void setCreateTimestampIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CREATETIMESTAMP_ISSET_ID, value);
  }

  public long getLastModifyTimestamp() {
    return this.lastModifyTimestamp;
  }

  public CommoditySourceAccount setLastModifyTimestamp(long lastModifyTimestamp) {
    this.lastModifyTimestamp = lastModifyTimestamp;
    setLastModifyTimestampIsSet(true);
    return this;
  }

  public void unsetLastModifyTimestamp() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __LASTMODIFYTIMESTAMP_ISSET_ID);
  }

  /** Returns true if field lastModifyTimestamp is set (has been assigned a value) and false otherwise */
  public boolean isSetLastModifyTimestamp() {
    return EncodingUtils.testBit(__isset_bitfield, __LASTMODIFYTIMESTAMP_ISSET_ID);
  }

  public void setLastModifyTimestampIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __LASTMODIFYTIMESTAMP_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ACCOUNT_ID:
      if (value == null) {
        unsetAccountId();
      } else {
        setAccountId((Integer)value);
      }
      break;

    case TECH_PLATFORM:
      if (value == null) {
        unsetTechPlatform();
      } else {
        setTechPlatform((com.longsheng.xueqiao.contract.standard.thriftapi.TechPlatform)value);
      }
      break;

    case TECH_PLATFORM_ENV:
      if (value == null) {
        unsetTechPlatformEnv();
      } else {
        setTechPlatformEnv((com.longsheng.xueqiao.contract.standard.thriftapi.TechPlatformEnv)value);
      }
      break;

    case ACCOUNT_NAME:
      if (value == null) {
        unsetAccountName();
      } else {
        setAccountName((String)value);
      }
      break;

    case ACCOUNTPWD:
      if (value == null) {
        unsetAccountpwd();
      } else {
        setAccountpwd((String)value);
      }
      break;

    case BROKER_ENTRY_ID:
      if (value == null) {
        unsetBrokerEntryId();
      } else {
        setBrokerEntryId((Integer)value);
      }
      break;

    case BROKER_ACCESS_ID:
      if (value == null) {
        unsetBrokerAccessId();
      } else {
        setBrokerAccessId((Integer)value);
      }
      break;

    case ACCOUNT_PROPERTIES:
      if (value == null) {
        unsetAccountProperties();
      } else {
        setAccountProperties((Map<String,String>)value);
      }
      break;

    case ACCESS_STATE:
      if (value == null) {
        unsetAccessState();
      } else {
        setAccessState((AccountAccessState)value);
      }
      break;

    case INVALID_REASON:
      if (value == null) {
        unsetInvalidReason();
      } else {
        setInvalidReason((String)value);
      }
      break;

    case API_RET_CODE:
      if (value == null) {
        unsetApiRetCode();
      } else {
        setApiRetCode((Integer)value);
      }
      break;

    case IP_ADDRESS:
      if (value == null) {
        unsetIpAddress();
      } else {
        setIpAddress((String)value);
      }
      break;

    case PORT:
      if (value == null) {
        unsetPort();
      } else {
        setPort((Integer)value);
      }
      break;

    case CREATE_TIMESTAMP:
      if (value == null) {
        unsetCreateTimestamp();
      } else {
        setCreateTimestamp((Long)value);
      }
      break;

    case LAST_MODIFY_TIMESTAMP:
      if (value == null) {
        unsetLastModifyTimestamp();
      } else {
        setLastModifyTimestamp((Long)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ACCOUNT_ID:
      return Integer.valueOf(getAccountId());

    case TECH_PLATFORM:
      return getTechPlatform();

    case TECH_PLATFORM_ENV:
      return getTechPlatformEnv();

    case ACCOUNT_NAME:
      return getAccountName();

    case ACCOUNTPWD:
      return getAccountpwd();

    case BROKER_ENTRY_ID:
      return Integer.valueOf(getBrokerEntryId());

    case BROKER_ACCESS_ID:
      return Integer.valueOf(getBrokerAccessId());

    case ACCOUNT_PROPERTIES:
      return getAccountProperties();

    case ACCESS_STATE:
      return getAccessState();

    case INVALID_REASON:
      return getInvalidReason();

    case API_RET_CODE:
      return Integer.valueOf(getApiRetCode());

    case IP_ADDRESS:
      return getIpAddress();

    case PORT:
      return Integer.valueOf(getPort());

    case CREATE_TIMESTAMP:
      return Long.valueOf(getCreateTimestamp());

    case LAST_MODIFY_TIMESTAMP:
      return Long.valueOf(getLastModifyTimestamp());

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ACCOUNT_ID:
      return isSetAccountId();
    case TECH_PLATFORM:
      return isSetTechPlatform();
    case TECH_PLATFORM_ENV:
      return isSetTechPlatformEnv();
    case ACCOUNT_NAME:
      return isSetAccountName();
    case ACCOUNTPWD:
      return isSetAccountpwd();
    case BROKER_ENTRY_ID:
      return isSetBrokerEntryId();
    case BROKER_ACCESS_ID:
      return isSetBrokerAccessId();
    case ACCOUNT_PROPERTIES:
      return isSetAccountProperties();
    case ACCESS_STATE:
      return isSetAccessState();
    case INVALID_REASON:
      return isSetInvalidReason();
    case API_RET_CODE:
      return isSetApiRetCode();
    case IP_ADDRESS:
      return isSetIpAddress();
    case PORT:
      return isSetPort();
    case CREATE_TIMESTAMP:
      return isSetCreateTimestamp();
    case LAST_MODIFY_TIMESTAMP:
      return isSetLastModifyTimestamp();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof CommoditySourceAccount)
      return this.equals((CommoditySourceAccount)that);
    return false;
  }

  public boolean equals(CommoditySourceAccount that) {
    if (that == null)
      return false;

    boolean this_present_accountId = true && this.isSetAccountId();
    boolean that_present_accountId = true && that.isSetAccountId();
    if (this_present_accountId || that_present_accountId) {
      if (!(this_present_accountId && that_present_accountId))
        return false;
      if (this.accountId != that.accountId)
        return false;
    }

    boolean this_present_techPlatform = true && this.isSetTechPlatform();
    boolean that_present_techPlatform = true && that.isSetTechPlatform();
    if (this_present_techPlatform || that_present_techPlatform) {
      if (!(this_present_techPlatform && that_present_techPlatform))
        return false;
      if (!this.techPlatform.equals(that.techPlatform))
        return false;
    }

    boolean this_present_techPlatformEnv = true && this.isSetTechPlatformEnv();
    boolean that_present_techPlatformEnv = true && that.isSetTechPlatformEnv();
    if (this_present_techPlatformEnv || that_present_techPlatformEnv) {
      if (!(this_present_techPlatformEnv && that_present_techPlatformEnv))
        return false;
      if (!this.techPlatformEnv.equals(that.techPlatformEnv))
        return false;
    }

    boolean this_present_accountName = true && this.isSetAccountName();
    boolean that_present_accountName = true && that.isSetAccountName();
    if (this_present_accountName || that_present_accountName) {
      if (!(this_present_accountName && that_present_accountName))
        return false;
      if (!this.accountName.equals(that.accountName))
        return false;
    }

    boolean this_present_accountpwd = true && this.isSetAccountpwd();
    boolean that_present_accountpwd = true && that.isSetAccountpwd();
    if (this_present_accountpwd || that_present_accountpwd) {
      if (!(this_present_accountpwd && that_present_accountpwd))
        return false;
      if (!this.accountpwd.equals(that.accountpwd))
        return false;
    }

    boolean this_present_brokerEntryId = true && this.isSetBrokerEntryId();
    boolean that_present_brokerEntryId = true && that.isSetBrokerEntryId();
    if (this_present_brokerEntryId || that_present_brokerEntryId) {
      if (!(this_present_brokerEntryId && that_present_brokerEntryId))
        return false;
      if (this.brokerEntryId != that.brokerEntryId)
        return false;
    }

    boolean this_present_brokerAccessId = true && this.isSetBrokerAccessId();
    boolean that_present_brokerAccessId = true && that.isSetBrokerAccessId();
    if (this_present_brokerAccessId || that_present_brokerAccessId) {
      if (!(this_present_brokerAccessId && that_present_brokerAccessId))
        return false;
      if (this.brokerAccessId != that.brokerAccessId)
        return false;
    }

    boolean this_present_accountProperties = true && this.isSetAccountProperties();
    boolean that_present_accountProperties = true && that.isSetAccountProperties();
    if (this_present_accountProperties || that_present_accountProperties) {
      if (!(this_present_accountProperties && that_present_accountProperties))
        return false;
      if (!this.accountProperties.equals(that.accountProperties))
        return false;
    }

    boolean this_present_accessState = true && this.isSetAccessState();
    boolean that_present_accessState = true && that.isSetAccessState();
    if (this_present_accessState || that_present_accessState) {
      if (!(this_present_accessState && that_present_accessState))
        return false;
      if (!this.accessState.equals(that.accessState))
        return false;
    }

    boolean this_present_invalidReason = true && this.isSetInvalidReason();
    boolean that_present_invalidReason = true && that.isSetInvalidReason();
    if (this_present_invalidReason || that_present_invalidReason) {
      if (!(this_present_invalidReason && that_present_invalidReason))
        return false;
      if (!this.invalidReason.equals(that.invalidReason))
        return false;
    }

    boolean this_present_apiRetCode = true && this.isSetApiRetCode();
    boolean that_present_apiRetCode = true && that.isSetApiRetCode();
    if (this_present_apiRetCode || that_present_apiRetCode) {
      if (!(this_present_apiRetCode && that_present_apiRetCode))
        return false;
      if (this.apiRetCode != that.apiRetCode)
        return false;
    }

    boolean this_present_ipAddress = true && this.isSetIpAddress();
    boolean that_present_ipAddress = true && that.isSetIpAddress();
    if (this_present_ipAddress || that_present_ipAddress) {
      if (!(this_present_ipAddress && that_present_ipAddress))
        return false;
      if (!this.ipAddress.equals(that.ipAddress))
        return false;
    }

    boolean this_present_port = true && this.isSetPort();
    boolean that_present_port = true && that.isSetPort();
    if (this_present_port || that_present_port) {
      if (!(this_present_port && that_present_port))
        return false;
      if (this.port != that.port)
        return false;
    }

    boolean this_present_createTimestamp = true && this.isSetCreateTimestamp();
    boolean that_present_createTimestamp = true && that.isSetCreateTimestamp();
    if (this_present_createTimestamp || that_present_createTimestamp) {
      if (!(this_present_createTimestamp && that_present_createTimestamp))
        return false;
      if (this.createTimestamp != that.createTimestamp)
        return false;
    }

    boolean this_present_lastModifyTimestamp = true && this.isSetLastModifyTimestamp();
    boolean that_present_lastModifyTimestamp = true && that.isSetLastModifyTimestamp();
    if (this_present_lastModifyTimestamp || that_present_lastModifyTimestamp) {
      if (!(this_present_lastModifyTimestamp && that_present_lastModifyTimestamp))
        return false;
      if (this.lastModifyTimestamp != that.lastModifyTimestamp)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  @Override
  public int compareTo(CommoditySourceAccount other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetAccountId()).compareTo(other.isSetAccountId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAccountId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.accountId, other.accountId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTechPlatform()).compareTo(other.isSetTechPlatform());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTechPlatform()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.techPlatform, other.techPlatform);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTechPlatformEnv()).compareTo(other.isSetTechPlatformEnv());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTechPlatformEnv()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.techPlatformEnv, other.techPlatformEnv);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAccountName()).compareTo(other.isSetAccountName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAccountName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.accountName, other.accountName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAccountpwd()).compareTo(other.isSetAccountpwd());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAccountpwd()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.accountpwd, other.accountpwd);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBrokerEntryId()).compareTo(other.isSetBrokerEntryId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBrokerEntryId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.brokerEntryId, other.brokerEntryId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBrokerAccessId()).compareTo(other.isSetBrokerAccessId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBrokerAccessId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.brokerAccessId, other.brokerAccessId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAccountProperties()).compareTo(other.isSetAccountProperties());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAccountProperties()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.accountProperties, other.accountProperties);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAccessState()).compareTo(other.isSetAccessState());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAccessState()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.accessState, other.accessState);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetInvalidReason()).compareTo(other.isSetInvalidReason());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetInvalidReason()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.invalidReason, other.invalidReason);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetApiRetCode()).compareTo(other.isSetApiRetCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetApiRetCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.apiRetCode, other.apiRetCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIpAddress()).compareTo(other.isSetIpAddress());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIpAddress()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ipAddress, other.ipAddress);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPort()).compareTo(other.isSetPort());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPort()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.port, other.port);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateTimestamp()).compareTo(other.isSetCreateTimestamp());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTimestamp()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTimestamp, other.createTimestamp);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLastModifyTimestamp()).compareTo(other.isSetLastModifyTimestamp());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLastModifyTimestamp()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.lastModifyTimestamp, other.lastModifyTimestamp);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("CommoditySourceAccount(");
    boolean first = true;

    if (isSetAccountId()) {
      sb.append("accountId:");
      sb.append(this.accountId);
      first = false;
    }
    if (isSetTechPlatform()) {
      if (!first) sb.append(", ");
      sb.append("techPlatform:");
      if (this.techPlatform == null) {
        sb.append("null");
      } else {
        sb.append(this.techPlatform);
      }
      first = false;
    }
    if (isSetTechPlatformEnv()) {
      if (!first) sb.append(", ");
      sb.append("techPlatformEnv:");
      if (this.techPlatformEnv == null) {
        sb.append("null");
      } else {
        sb.append(this.techPlatformEnv);
      }
      first = false;
    }
    if (isSetAccountName()) {
      if (!first) sb.append(", ");
      sb.append("accountName:");
      if (this.accountName == null) {
        sb.append("null");
      } else {
        sb.append(this.accountName);
      }
      first = false;
    }
    if (isSetAccountpwd()) {
      if (!first) sb.append(", ");
      sb.append("accountpwd:");
      if (this.accountpwd == null) {
        sb.append("null");
      } else {
        sb.append(this.accountpwd);
      }
      first = false;
    }
    if (isSetBrokerEntryId()) {
      if (!first) sb.append(", ");
      sb.append("brokerEntryId:");
      sb.append(this.brokerEntryId);
      first = false;
    }
    if (isSetBrokerAccessId()) {
      if (!first) sb.append(", ");
      sb.append("brokerAccessId:");
      sb.append(this.brokerAccessId);
      first = false;
    }
    if (isSetAccountProperties()) {
      if (!first) sb.append(", ");
      sb.append("accountProperties:");
      if (this.accountProperties == null) {
        sb.append("null");
      } else {
        sb.append(this.accountProperties);
      }
      first = false;
    }
    if (isSetAccessState()) {
      if (!first) sb.append(", ");
      sb.append("accessState:");
      if (this.accessState == null) {
        sb.append("null");
      } else {
        sb.append(this.accessState);
      }
      first = false;
    }
    if (isSetInvalidReason()) {
      if (!first) sb.append(", ");
      sb.append("invalidReason:");
      if (this.invalidReason == null) {
        sb.append("null");
      } else {
        sb.append(this.invalidReason);
      }
      first = false;
    }
    if (isSetApiRetCode()) {
      if (!first) sb.append(", ");
      sb.append("apiRetCode:");
      sb.append(this.apiRetCode);
      first = false;
    }
    if (isSetIpAddress()) {
      if (!first) sb.append(", ");
      sb.append("ipAddress:");
      if (this.ipAddress == null) {
        sb.append("null");
      } else {
        sb.append(this.ipAddress);
      }
      first = false;
    }
    if (isSetPort()) {
      if (!first) sb.append(", ");
      sb.append("port:");
      sb.append(this.port);
      first = false;
    }
    if (isSetCreateTimestamp()) {
      if (!first) sb.append(", ");
      sb.append("createTimestamp:");
      sb.append(this.createTimestamp);
      first = false;
    }
    if (isSetLastModifyTimestamp()) {
      if (!first) sb.append(", ");
      sb.append("lastModifyTimestamp:");
      sb.append(this.lastModifyTimestamp);
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class CommoditySourceAccountStandardSchemeFactory implements SchemeFactory {
    public CommoditySourceAccountStandardScheme getScheme() {
      return new CommoditySourceAccountStandardScheme();
    }
  }

  private static class CommoditySourceAccountStandardScheme extends StandardScheme<CommoditySourceAccount> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, CommoditySourceAccount struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ACCOUNT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.accountId = iprot.readI32();
              struct.setAccountIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // TECH_PLATFORM
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.techPlatform = com.longsheng.xueqiao.contract.standard.thriftapi.TechPlatform.findByValue(iprot.readI32());
              struct.setTechPlatformIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // TECH_PLATFORM_ENV
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.techPlatformEnv = com.longsheng.xueqiao.contract.standard.thriftapi.TechPlatformEnv.findByValue(iprot.readI32());
              struct.setTechPlatformEnvIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // ACCOUNT_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.accountName = iprot.readString();
              struct.setAccountNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // ACCOUNTPWD
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.accountpwd = iprot.readString();
              struct.setAccountpwdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // BROKER_ENTRY_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.brokerEntryId = iprot.readI32();
              struct.setBrokerEntryIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // BROKER_ACCESS_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.brokerAccessId = iprot.readI32();
              struct.setBrokerAccessIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // ACCOUNT_PROPERTIES
            if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
              {
                org.apache.thrift.protocol.TMap _map770 = iprot.readMapBegin();
                struct.accountProperties = new HashMap<String,String>(2*_map770.size);
                for (int _i771 = 0; _i771 < _map770.size; ++_i771)
                {
                  String _key772;
                  String _val773;
                  _key772 = iprot.readString();
                  _val773 = iprot.readString();
                  struct.accountProperties.put(_key772, _val773);
                }
                iprot.readMapEnd();
              }
              struct.setAccountPropertiesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // ACCESS_STATE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.accessState = AccountAccessState.findByValue(iprot.readI32());
              struct.setAccessStateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // INVALID_REASON
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.invalidReason = iprot.readString();
              struct.setInvalidReasonIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // API_RET_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.apiRetCode = iprot.readI32();
              struct.setApiRetCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // IP_ADDRESS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.ipAddress = iprot.readString();
              struct.setIpAddressIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // PORT
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.port = iprot.readI32();
              struct.setPortIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 25: // CREATE_TIMESTAMP
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.createTimestamp = iprot.readI64();
              struct.setCreateTimestampIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 26: // LAST_MODIFY_TIMESTAMP
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.lastModifyTimestamp = iprot.readI64();
              struct.setLastModifyTimestampIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, CommoditySourceAccount struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetAccountId()) {
        oprot.writeFieldBegin(ACCOUNT_ID_FIELD_DESC);
        oprot.writeI32(struct.accountId);
        oprot.writeFieldEnd();
      }
      if (struct.techPlatform != null) {
        if (struct.isSetTechPlatform()) {
          oprot.writeFieldBegin(TECH_PLATFORM_FIELD_DESC);
          oprot.writeI32(struct.techPlatform.getValue());
          oprot.writeFieldEnd();
        }
      }
      if (struct.techPlatformEnv != null) {
        if (struct.isSetTechPlatformEnv()) {
          oprot.writeFieldBegin(TECH_PLATFORM_ENV_FIELD_DESC);
          oprot.writeI32(struct.techPlatformEnv.getValue());
          oprot.writeFieldEnd();
        }
      }
      if (struct.accountName != null) {
        if (struct.isSetAccountName()) {
          oprot.writeFieldBegin(ACCOUNT_NAME_FIELD_DESC);
          oprot.writeString(struct.accountName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.accountpwd != null) {
        if (struct.isSetAccountpwd()) {
          oprot.writeFieldBegin(ACCOUNTPWD_FIELD_DESC);
          oprot.writeString(struct.accountpwd);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetBrokerEntryId()) {
        oprot.writeFieldBegin(BROKER_ENTRY_ID_FIELD_DESC);
        oprot.writeI32(struct.brokerEntryId);
        oprot.writeFieldEnd();
      }
      if (struct.isSetBrokerAccessId()) {
        oprot.writeFieldBegin(BROKER_ACCESS_ID_FIELD_DESC);
        oprot.writeI32(struct.brokerAccessId);
        oprot.writeFieldEnd();
      }
      if (struct.accountProperties != null) {
        if (struct.isSetAccountProperties()) {
          oprot.writeFieldBegin(ACCOUNT_PROPERTIES_FIELD_DESC);
          {
            oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, struct.accountProperties.size()));
            for (Map.Entry<String, String> _iter774 : struct.accountProperties.entrySet())
            {
              oprot.writeString(_iter774.getKey());
              oprot.writeString(_iter774.getValue());
            }
            oprot.writeMapEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.accessState != null) {
        if (struct.isSetAccessState()) {
          oprot.writeFieldBegin(ACCESS_STATE_FIELD_DESC);
          oprot.writeI32(struct.accessState.getValue());
          oprot.writeFieldEnd();
        }
      }
      if (struct.invalidReason != null) {
        if (struct.isSetInvalidReason()) {
          oprot.writeFieldBegin(INVALID_REASON_FIELD_DESC);
          oprot.writeString(struct.invalidReason);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetApiRetCode()) {
        oprot.writeFieldBegin(API_RET_CODE_FIELD_DESC);
        oprot.writeI32(struct.apiRetCode);
        oprot.writeFieldEnd();
      }
      if (struct.ipAddress != null) {
        if (struct.isSetIpAddress()) {
          oprot.writeFieldBegin(IP_ADDRESS_FIELD_DESC);
          oprot.writeString(struct.ipAddress);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetPort()) {
        oprot.writeFieldBegin(PORT_FIELD_DESC);
        oprot.writeI32(struct.port);
        oprot.writeFieldEnd();
      }
      if (struct.isSetCreateTimestamp()) {
        oprot.writeFieldBegin(CREATE_TIMESTAMP_FIELD_DESC);
        oprot.writeI64(struct.createTimestamp);
        oprot.writeFieldEnd();
      }
      if (struct.isSetLastModifyTimestamp()) {
        oprot.writeFieldBegin(LAST_MODIFY_TIMESTAMP_FIELD_DESC);
        oprot.writeI64(struct.lastModifyTimestamp);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class CommoditySourceAccountTupleSchemeFactory implements SchemeFactory {
    public CommoditySourceAccountTupleScheme getScheme() {
      return new CommoditySourceAccountTupleScheme();
    }
  }

  private static class CommoditySourceAccountTupleScheme extends TupleScheme<CommoditySourceAccount> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, CommoditySourceAccount struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetAccountId()) {
        optionals.set(0);
      }
      if (struct.isSetTechPlatform()) {
        optionals.set(1);
      }
      if (struct.isSetTechPlatformEnv()) {
        optionals.set(2);
      }
      if (struct.isSetAccountName()) {
        optionals.set(3);
      }
      if (struct.isSetAccountpwd()) {
        optionals.set(4);
      }
      if (struct.isSetBrokerEntryId()) {
        optionals.set(5);
      }
      if (struct.isSetBrokerAccessId()) {
        optionals.set(6);
      }
      if (struct.isSetAccountProperties()) {
        optionals.set(7);
      }
      if (struct.isSetAccessState()) {
        optionals.set(8);
      }
      if (struct.isSetInvalidReason()) {
        optionals.set(9);
      }
      if (struct.isSetApiRetCode()) {
        optionals.set(10);
      }
      if (struct.isSetIpAddress()) {
        optionals.set(11);
      }
      if (struct.isSetPort()) {
        optionals.set(12);
      }
      if (struct.isSetCreateTimestamp()) {
        optionals.set(13);
      }
      if (struct.isSetLastModifyTimestamp()) {
        optionals.set(14);
      }
      oprot.writeBitSet(optionals, 15);
      if (struct.isSetAccountId()) {
        oprot.writeI32(struct.accountId);
      }
      if (struct.isSetTechPlatform()) {
        oprot.writeI32(struct.techPlatform.getValue());
      }
      if (struct.isSetTechPlatformEnv()) {
        oprot.writeI32(struct.techPlatformEnv.getValue());
      }
      if (struct.isSetAccountName()) {
        oprot.writeString(struct.accountName);
      }
      if (struct.isSetAccountpwd()) {
        oprot.writeString(struct.accountpwd);
      }
      if (struct.isSetBrokerEntryId()) {
        oprot.writeI32(struct.brokerEntryId);
      }
      if (struct.isSetBrokerAccessId()) {
        oprot.writeI32(struct.brokerAccessId);
      }
      if (struct.isSetAccountProperties()) {
        {
          oprot.writeI32(struct.accountProperties.size());
          for (Map.Entry<String, String> _iter775 : struct.accountProperties.entrySet())
          {
            oprot.writeString(_iter775.getKey());
            oprot.writeString(_iter775.getValue());
          }
        }
      }
      if (struct.isSetAccessState()) {
        oprot.writeI32(struct.accessState.getValue());
      }
      if (struct.isSetInvalidReason()) {
        oprot.writeString(struct.invalidReason);
      }
      if (struct.isSetApiRetCode()) {
        oprot.writeI32(struct.apiRetCode);
      }
      if (struct.isSetIpAddress()) {
        oprot.writeString(struct.ipAddress);
      }
      if (struct.isSetPort()) {
        oprot.writeI32(struct.port);
      }
      if (struct.isSetCreateTimestamp()) {
        oprot.writeI64(struct.createTimestamp);
      }
      if (struct.isSetLastModifyTimestamp()) {
        oprot.writeI64(struct.lastModifyTimestamp);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, CommoditySourceAccount struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(15);
      if (incoming.get(0)) {
        struct.accountId = iprot.readI32();
        struct.setAccountIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.techPlatform = com.longsheng.xueqiao.contract.standard.thriftapi.TechPlatform.findByValue(iprot.readI32());
        struct.setTechPlatformIsSet(true);
      }
      if (incoming.get(2)) {
        struct.techPlatformEnv = com.longsheng.xueqiao.contract.standard.thriftapi.TechPlatformEnv.findByValue(iprot.readI32());
        struct.setTechPlatformEnvIsSet(true);
      }
      if (incoming.get(3)) {
        struct.accountName = iprot.readString();
        struct.setAccountNameIsSet(true);
      }
      if (incoming.get(4)) {
        struct.accountpwd = iprot.readString();
        struct.setAccountpwdIsSet(true);
      }
      if (incoming.get(5)) {
        struct.brokerEntryId = iprot.readI32();
        struct.setBrokerEntryIdIsSet(true);
      }
      if (incoming.get(6)) {
        struct.brokerAccessId = iprot.readI32();
        struct.setBrokerAccessIdIsSet(true);
      }
      if (incoming.get(7)) {
        {
          org.apache.thrift.protocol.TMap _map776 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.accountProperties = new HashMap<String,String>(2*_map776.size);
          for (int _i777 = 0; _i777 < _map776.size; ++_i777)
          {
            String _key778;
            String _val779;
            _key778 = iprot.readString();
            _val779 = iprot.readString();
            struct.accountProperties.put(_key778, _val779);
          }
        }
        struct.setAccountPropertiesIsSet(true);
      }
      if (incoming.get(8)) {
        struct.accessState = AccountAccessState.findByValue(iprot.readI32());
        struct.setAccessStateIsSet(true);
      }
      if (incoming.get(9)) {
        struct.invalidReason = iprot.readString();
        struct.setInvalidReasonIsSet(true);
      }
      if (incoming.get(10)) {
        struct.apiRetCode = iprot.readI32();
        struct.setApiRetCodeIsSet(true);
      }
      if (incoming.get(11)) {
        struct.ipAddress = iprot.readString();
        struct.setIpAddressIsSet(true);
      }
      if (incoming.get(12)) {
        struct.port = iprot.readI32();
        struct.setPortIsSet(true);
      }
      if (incoming.get(13)) {
        struct.createTimestamp = iprot.readI64();
        struct.setCreateTimestampIsSet(true);
      }
      if (incoming.get(14)) {
        struct.lastModifyTimestamp = iprot.readI64();
        struct.setLastModifyTimestampIsSet(true);
      }
    }
  }

}

