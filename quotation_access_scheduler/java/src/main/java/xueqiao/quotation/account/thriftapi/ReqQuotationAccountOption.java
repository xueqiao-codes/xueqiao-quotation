/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package xueqiao.quotation.account.thriftapi;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class ReqQuotationAccountOption implements org.apache.thrift.TBase<ReqQuotationAccountOption, ReqQuotationAccountOption._Fields>, java.io.Serializable, Cloneable, Comparable<ReqQuotationAccountOption> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ReqQuotationAccountOption");

  private static final org.apache.thrift.protocol.TField ACCOUNT_IDS_FIELD_DESC = new org.apache.thrift.protocol.TField("accountIds", org.apache.thrift.protocol.TType.SET, (short)1);
  private static final org.apache.thrift.protocol.TField PLATFORM_FIELD_DESC = new org.apache.thrift.protocol.TField("platform", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField PLATFORM_ENV_FIELD_DESC = new org.apache.thrift.protocol.TField("platformEnv", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField SUPPORT_COMMODITY_IDS_FIELD_DESC = new org.apache.thrift.protocol.TField("supportCommodityIds", org.apache.thrift.protocol.TType.SET, (short)4);
  private static final org.apache.thrift.protocol.TField BROKER_IDS_FIELD_DESC = new org.apache.thrift.protocol.TField("brokerIds", org.apache.thrift.protocol.TType.SET, (short)5);
  private static final org.apache.thrift.protocol.TField ACCOUNT_NAME_PARTICAL_FIELD_DESC = new org.apache.thrift.protocol.TField("accountNamePartical", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField NICK_NAME_PARTICAL_FIELD_DESC = new org.apache.thrift.protocol.TField("nickNamePartical", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField ORDER_BY_FIELD_DESC = new org.apache.thrift.protocol.TField("orderBy", org.apache.thrift.protocol.TType.I32, (short)8);
  private static final org.apache.thrift.protocol.TField DEPLOY_SET_FIELD_DESC = new org.apache.thrift.protocol.TField("deploySet", org.apache.thrift.protocol.TType.I32, (short)9);
  private static final org.apache.thrift.protocol.TField ORDER_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("orderType", org.apache.thrift.protocol.TType.I32, (short)10);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new ReqQuotationAccountOptionStandardSchemeFactory());
    schemes.put(TupleScheme.class, new ReqQuotationAccountOptionTupleSchemeFactory());
  }

  public Set<Long> accountIds; // optional
  /**
   * 
   * @see QuotationTechPlatform
   */
  public QuotationTechPlatform platform; // optional
  /**
   * 
   * @see QuotationPlatformEnv
   */
  public QuotationPlatformEnv platformEnv; // optional
  public Set<Integer> supportCommodityIds; // optional
  public Set<Integer> brokerIds; // optional
  public String accountNamePartical; // optional
  public String nickNamePartical; // optional
  /**
   * 
   * @see QuotationAccountOrderBy
   */
  public QuotationAccountOrderBy orderBy; // optional
  /**
   * 
   * @see DeploySet
   */
  public DeploySet deploySet; // optional
  /**
   * 
   * @see QueryOrderType
   */
  public QueryOrderType orderType; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ACCOUNT_IDS((short)1, "accountIds"),
    /**
     * 
     * @see QuotationTechPlatform
     */
    PLATFORM((short)2, "platform"),
    /**
     * 
     * @see QuotationPlatformEnv
     */
    PLATFORM_ENV((short)3, "platformEnv"),
    SUPPORT_COMMODITY_IDS((short)4, "supportCommodityIds"),
    BROKER_IDS((short)5, "brokerIds"),
    ACCOUNT_NAME_PARTICAL((short)6, "accountNamePartical"),
    NICK_NAME_PARTICAL((short)7, "nickNamePartical"),
    /**
     * 
     * @see QuotationAccountOrderBy
     */
    ORDER_BY((short)8, "orderBy"),
    /**
     * 
     * @see DeploySet
     */
    DEPLOY_SET((short)9, "deploySet"),
    /**
     * 
     * @see QueryOrderType
     */
    ORDER_TYPE((short)10, "orderType");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ACCOUNT_IDS
          return ACCOUNT_IDS;
        case 2: // PLATFORM
          return PLATFORM;
        case 3: // PLATFORM_ENV
          return PLATFORM_ENV;
        case 4: // SUPPORT_COMMODITY_IDS
          return SUPPORT_COMMODITY_IDS;
        case 5: // BROKER_IDS
          return BROKER_IDS;
        case 6: // ACCOUNT_NAME_PARTICAL
          return ACCOUNT_NAME_PARTICAL;
        case 7: // NICK_NAME_PARTICAL
          return NICK_NAME_PARTICAL;
        case 8: // ORDER_BY
          return ORDER_BY;
        case 9: // DEPLOY_SET
          return DEPLOY_SET;
        case 10: // ORDER_TYPE
          return ORDER_TYPE;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private _Fields optionals[] = {_Fields.ACCOUNT_IDS,_Fields.PLATFORM,_Fields.PLATFORM_ENV,_Fields.SUPPORT_COMMODITY_IDS,_Fields.BROKER_IDS,_Fields.ACCOUNT_NAME_PARTICAL,_Fields.NICK_NAME_PARTICAL,_Fields.ORDER_BY,_Fields.DEPLOY_SET,_Fields.ORDER_TYPE};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ACCOUNT_IDS, new org.apache.thrift.meta_data.FieldMetaData("accountIds", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.SetMetaData(org.apache.thrift.protocol.TType.SET, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64))));
    tmpMap.put(_Fields.PLATFORM, new org.apache.thrift.meta_data.FieldMetaData("platform", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, QuotationTechPlatform.class)));
    tmpMap.put(_Fields.PLATFORM_ENV, new org.apache.thrift.meta_data.FieldMetaData("platformEnv", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, QuotationPlatformEnv.class)));
    tmpMap.put(_Fields.SUPPORT_COMMODITY_IDS, new org.apache.thrift.meta_data.FieldMetaData("supportCommodityIds", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.SetMetaData(org.apache.thrift.protocol.TType.SET, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32))));
    tmpMap.put(_Fields.BROKER_IDS, new org.apache.thrift.meta_data.FieldMetaData("brokerIds", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.SetMetaData(org.apache.thrift.protocol.TType.SET, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32))));
    tmpMap.put(_Fields.ACCOUNT_NAME_PARTICAL, new org.apache.thrift.meta_data.FieldMetaData("accountNamePartical", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.NICK_NAME_PARTICAL, new org.apache.thrift.meta_data.FieldMetaData("nickNamePartical", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ORDER_BY, new org.apache.thrift.meta_data.FieldMetaData("orderBy", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, QuotationAccountOrderBy.class)));
    tmpMap.put(_Fields.DEPLOY_SET, new org.apache.thrift.meta_data.FieldMetaData("deploySet", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, DeploySet.class)));
    tmpMap.put(_Fields.ORDER_TYPE, new org.apache.thrift.meta_data.FieldMetaData("orderType", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, QueryOrderType.class)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(ReqQuotationAccountOption.class, metaDataMap);
  }

  public ReqQuotationAccountOption() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public ReqQuotationAccountOption(ReqQuotationAccountOption other) {
    if (other.isSetAccountIds()) {
      Set<Long> __this__accountIds = new HashSet<Long>(other.accountIds);
      this.accountIds = __this__accountIds;
    }
    if (other.isSetPlatform()) {
      this.platform = other.platform;
    }
    if (other.isSetPlatformEnv()) {
      this.platformEnv = other.platformEnv;
    }
    if (other.isSetSupportCommodityIds()) {
      Set<Integer> __this__supportCommodityIds = new HashSet<Integer>(other.supportCommodityIds);
      this.supportCommodityIds = __this__supportCommodityIds;
    }
    if (other.isSetBrokerIds()) {
      Set<Integer> __this__brokerIds = new HashSet<Integer>(other.brokerIds);
      this.brokerIds = __this__brokerIds;
    }
    if (other.isSetAccountNamePartical()) {
      this.accountNamePartical = other.accountNamePartical;
    }
    if (other.isSetNickNamePartical()) {
      this.nickNamePartical = other.nickNamePartical;
    }
    if (other.isSetOrderBy()) {
      this.orderBy = other.orderBy;
    }
    if (other.isSetDeploySet()) {
      this.deploySet = other.deploySet;
    }
    if (other.isSetOrderType()) {
      this.orderType = other.orderType;
    }
  }

  public ReqQuotationAccountOption deepCopy() {
    return new ReqQuotationAccountOption(this);
  }

  @Override
  public void clear() {
    this.accountIds = null;
    this.platform = null;
    this.platformEnv = null;
    this.supportCommodityIds = null;
    this.brokerIds = null;
    this.accountNamePartical = null;
    this.nickNamePartical = null;
    this.orderBy = null;
    this.deploySet = null;
    this.orderType = null;
  }

  public int getAccountIdsSize() {
    return (this.accountIds == null) ? 0 : this.accountIds.size();
  }

  public java.util.Iterator<Long> getAccountIdsIterator() {
    return (this.accountIds == null) ? null : this.accountIds.iterator();
  }

  public void addToAccountIds(long elem) {
    if (this.accountIds == null) {
      this.accountIds = new HashSet<Long>();
    }
    this.accountIds.add(elem);
  }

  public Set<Long> getAccountIds() {
    return this.accountIds;
  }

  public ReqQuotationAccountOption setAccountIds(Set<Long> accountIds) {
    this.accountIds = accountIds;
    return this;
  }

  public void unsetAccountIds() {
    this.accountIds = null;
  }

  /** Returns true if field accountIds is set (has been assigned a value) and false otherwise */
  public boolean isSetAccountIds() {
    return this.accountIds != null;
  }

  public void setAccountIdsIsSet(boolean value) {
    if (!value) {
      this.accountIds = null;
    }
  }

  /**
   * 
   * @see QuotationTechPlatform
   */
  public QuotationTechPlatform getPlatform() {
    return this.platform;
  }

  /**
   * 
   * @see QuotationTechPlatform
   */
  public ReqQuotationAccountOption setPlatform(QuotationTechPlatform platform) {
    this.platform = platform;
    return this;
  }

  public void unsetPlatform() {
    this.platform = null;
  }

  /** Returns true if field platform is set (has been assigned a value) and false otherwise */
  public boolean isSetPlatform() {
    return this.platform != null;
  }

  public void setPlatformIsSet(boolean value) {
    if (!value) {
      this.platform = null;
    }
  }

  /**
   * 
   * @see QuotationPlatformEnv
   */
  public QuotationPlatformEnv getPlatformEnv() {
    return this.platformEnv;
  }

  /**
   * 
   * @see QuotationPlatformEnv
   */
  public ReqQuotationAccountOption setPlatformEnv(QuotationPlatformEnv platformEnv) {
    this.platformEnv = platformEnv;
    return this;
  }

  public void unsetPlatformEnv() {
    this.platformEnv = null;
  }

  /** Returns true if field platformEnv is set (has been assigned a value) and false otherwise */
  public boolean isSetPlatformEnv() {
    return this.platformEnv != null;
  }

  public void setPlatformEnvIsSet(boolean value) {
    if (!value) {
      this.platformEnv = null;
    }
  }

  public int getSupportCommodityIdsSize() {
    return (this.supportCommodityIds == null) ? 0 : this.supportCommodityIds.size();
  }

  public java.util.Iterator<Integer> getSupportCommodityIdsIterator() {
    return (this.supportCommodityIds == null) ? null : this.supportCommodityIds.iterator();
  }

  public void addToSupportCommodityIds(int elem) {
    if (this.supportCommodityIds == null) {
      this.supportCommodityIds = new HashSet<Integer>();
    }
    this.supportCommodityIds.add(elem);
  }

  public Set<Integer> getSupportCommodityIds() {
    return this.supportCommodityIds;
  }

  public ReqQuotationAccountOption setSupportCommodityIds(Set<Integer> supportCommodityIds) {
    this.supportCommodityIds = supportCommodityIds;
    return this;
  }

  public void unsetSupportCommodityIds() {
    this.supportCommodityIds = null;
  }

  /** Returns true if field supportCommodityIds is set (has been assigned a value) and false otherwise */
  public boolean isSetSupportCommodityIds() {
    return this.supportCommodityIds != null;
  }

  public void setSupportCommodityIdsIsSet(boolean value) {
    if (!value) {
      this.supportCommodityIds = null;
    }
  }

  public int getBrokerIdsSize() {
    return (this.brokerIds == null) ? 0 : this.brokerIds.size();
  }

  public java.util.Iterator<Integer> getBrokerIdsIterator() {
    return (this.brokerIds == null) ? null : this.brokerIds.iterator();
  }

  public void addToBrokerIds(int elem) {
    if (this.brokerIds == null) {
      this.brokerIds = new HashSet<Integer>();
    }
    this.brokerIds.add(elem);
  }

  public Set<Integer> getBrokerIds() {
    return this.brokerIds;
  }

  public ReqQuotationAccountOption setBrokerIds(Set<Integer> brokerIds) {
    this.brokerIds = brokerIds;
    return this;
  }

  public void unsetBrokerIds() {
    this.brokerIds = null;
  }

  /** Returns true if field brokerIds is set (has been assigned a value) and false otherwise */
  public boolean isSetBrokerIds() {
    return this.brokerIds != null;
  }

  public void setBrokerIdsIsSet(boolean value) {
    if (!value) {
      this.brokerIds = null;
    }
  }

  public String getAccountNamePartical() {
    return this.accountNamePartical;
  }

  public ReqQuotationAccountOption setAccountNamePartical(String accountNamePartical) {
    this.accountNamePartical = accountNamePartical;
    return this;
  }

  public void unsetAccountNamePartical() {
    this.accountNamePartical = null;
  }

  /** Returns true if field accountNamePartical is set (has been assigned a value) and false otherwise */
  public boolean isSetAccountNamePartical() {
    return this.accountNamePartical != null;
  }

  public void setAccountNameParticalIsSet(boolean value) {
    if (!value) {
      this.accountNamePartical = null;
    }
  }

  public String getNickNamePartical() {
    return this.nickNamePartical;
  }

  public ReqQuotationAccountOption setNickNamePartical(String nickNamePartical) {
    this.nickNamePartical = nickNamePartical;
    return this;
  }

  public void unsetNickNamePartical() {
    this.nickNamePartical = null;
  }

  /** Returns true if field nickNamePartical is set (has been assigned a value) and false otherwise */
  public boolean isSetNickNamePartical() {
    return this.nickNamePartical != null;
  }

  public void setNickNameParticalIsSet(boolean value) {
    if (!value) {
      this.nickNamePartical = null;
    }
  }

  /**
   * 
   * @see QuotationAccountOrderBy
   */
  public QuotationAccountOrderBy getOrderBy() {
    return this.orderBy;
  }

  /**
   * 
   * @see QuotationAccountOrderBy
   */
  public ReqQuotationAccountOption setOrderBy(QuotationAccountOrderBy orderBy) {
    this.orderBy = orderBy;
    return this;
  }

  public void unsetOrderBy() {
    this.orderBy = null;
  }

  /** Returns true if field orderBy is set (has been assigned a value) and false otherwise */
  public boolean isSetOrderBy() {
    return this.orderBy != null;
  }

  public void setOrderByIsSet(boolean value) {
    if (!value) {
      this.orderBy = null;
    }
  }

  /**
   * 
   * @see DeploySet
   */
  public DeploySet getDeploySet() {
    return this.deploySet;
  }

  /**
   * 
   * @see DeploySet
   */
  public ReqQuotationAccountOption setDeploySet(DeploySet deploySet) {
    this.deploySet = deploySet;
    return this;
  }

  public void unsetDeploySet() {
    this.deploySet = null;
  }

  /** Returns true if field deploySet is set (has been assigned a value) and false otherwise */
  public boolean isSetDeploySet() {
    return this.deploySet != null;
  }

  public void setDeploySetIsSet(boolean value) {
    if (!value) {
      this.deploySet = null;
    }
  }

  /**
   * 
   * @see QueryOrderType
   */
  public QueryOrderType getOrderType() {
    return this.orderType;
  }

  /**
   * 
   * @see QueryOrderType
   */
  public ReqQuotationAccountOption setOrderType(QueryOrderType orderType) {
    this.orderType = orderType;
    return this;
  }

  public void unsetOrderType() {
    this.orderType = null;
  }

  /** Returns true if field orderType is set (has been assigned a value) and false otherwise */
  public boolean isSetOrderType() {
    return this.orderType != null;
  }

  public void setOrderTypeIsSet(boolean value) {
    if (!value) {
      this.orderType = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ACCOUNT_IDS:
      if (value == null) {
        unsetAccountIds();
      } else {
        setAccountIds((Set<Long>)value);
      }
      break;

    case PLATFORM:
      if (value == null) {
        unsetPlatform();
      } else {
        setPlatform((QuotationTechPlatform)value);
      }
      break;

    case PLATFORM_ENV:
      if (value == null) {
        unsetPlatformEnv();
      } else {
        setPlatformEnv((QuotationPlatformEnv)value);
      }
      break;

    case SUPPORT_COMMODITY_IDS:
      if (value == null) {
        unsetSupportCommodityIds();
      } else {
        setSupportCommodityIds((Set<Integer>)value);
      }
      break;

    case BROKER_IDS:
      if (value == null) {
        unsetBrokerIds();
      } else {
        setBrokerIds((Set<Integer>)value);
      }
      break;

    case ACCOUNT_NAME_PARTICAL:
      if (value == null) {
        unsetAccountNamePartical();
      } else {
        setAccountNamePartical((String)value);
      }
      break;

    case NICK_NAME_PARTICAL:
      if (value == null) {
        unsetNickNamePartical();
      } else {
        setNickNamePartical((String)value);
      }
      break;

    case ORDER_BY:
      if (value == null) {
        unsetOrderBy();
      } else {
        setOrderBy((QuotationAccountOrderBy)value);
      }
      break;

    case DEPLOY_SET:
      if (value == null) {
        unsetDeploySet();
      } else {
        setDeploySet((DeploySet)value);
      }
      break;

    case ORDER_TYPE:
      if (value == null) {
        unsetOrderType();
      } else {
        setOrderType((QueryOrderType)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ACCOUNT_IDS:
      return getAccountIds();

    case PLATFORM:
      return getPlatform();

    case PLATFORM_ENV:
      return getPlatformEnv();

    case SUPPORT_COMMODITY_IDS:
      return getSupportCommodityIds();

    case BROKER_IDS:
      return getBrokerIds();

    case ACCOUNT_NAME_PARTICAL:
      return getAccountNamePartical();

    case NICK_NAME_PARTICAL:
      return getNickNamePartical();

    case ORDER_BY:
      return getOrderBy();

    case DEPLOY_SET:
      return getDeploySet();

    case ORDER_TYPE:
      return getOrderType();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ACCOUNT_IDS:
      return isSetAccountIds();
    case PLATFORM:
      return isSetPlatform();
    case PLATFORM_ENV:
      return isSetPlatformEnv();
    case SUPPORT_COMMODITY_IDS:
      return isSetSupportCommodityIds();
    case BROKER_IDS:
      return isSetBrokerIds();
    case ACCOUNT_NAME_PARTICAL:
      return isSetAccountNamePartical();
    case NICK_NAME_PARTICAL:
      return isSetNickNamePartical();
    case ORDER_BY:
      return isSetOrderBy();
    case DEPLOY_SET:
      return isSetDeploySet();
    case ORDER_TYPE:
      return isSetOrderType();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof ReqQuotationAccountOption)
      return this.equals((ReqQuotationAccountOption)that);
    return false;
  }

  public boolean equals(ReqQuotationAccountOption that) {
    if (that == null)
      return false;

    boolean this_present_accountIds = true && this.isSetAccountIds();
    boolean that_present_accountIds = true && that.isSetAccountIds();
    if (this_present_accountIds || that_present_accountIds) {
      if (!(this_present_accountIds && that_present_accountIds))
        return false;
      if (!this.accountIds.equals(that.accountIds))
        return false;
    }

    boolean this_present_platform = true && this.isSetPlatform();
    boolean that_present_platform = true && that.isSetPlatform();
    if (this_present_platform || that_present_platform) {
      if (!(this_present_platform && that_present_platform))
        return false;
      if (!this.platform.equals(that.platform))
        return false;
    }

    boolean this_present_platformEnv = true && this.isSetPlatformEnv();
    boolean that_present_platformEnv = true && that.isSetPlatformEnv();
    if (this_present_platformEnv || that_present_platformEnv) {
      if (!(this_present_platformEnv && that_present_platformEnv))
        return false;
      if (!this.platformEnv.equals(that.platformEnv))
        return false;
    }

    boolean this_present_supportCommodityIds = true && this.isSetSupportCommodityIds();
    boolean that_present_supportCommodityIds = true && that.isSetSupportCommodityIds();
    if (this_present_supportCommodityIds || that_present_supportCommodityIds) {
      if (!(this_present_supportCommodityIds && that_present_supportCommodityIds))
        return false;
      if (!this.supportCommodityIds.equals(that.supportCommodityIds))
        return false;
    }

    boolean this_present_brokerIds = true && this.isSetBrokerIds();
    boolean that_present_brokerIds = true && that.isSetBrokerIds();
    if (this_present_brokerIds || that_present_brokerIds) {
      if (!(this_present_brokerIds && that_present_brokerIds))
        return false;
      if (!this.brokerIds.equals(that.brokerIds))
        return false;
    }

    boolean this_present_accountNamePartical = true && this.isSetAccountNamePartical();
    boolean that_present_accountNamePartical = true && that.isSetAccountNamePartical();
    if (this_present_accountNamePartical || that_present_accountNamePartical) {
      if (!(this_present_accountNamePartical && that_present_accountNamePartical))
        return false;
      if (!this.accountNamePartical.equals(that.accountNamePartical))
        return false;
    }

    boolean this_present_nickNamePartical = true && this.isSetNickNamePartical();
    boolean that_present_nickNamePartical = true && that.isSetNickNamePartical();
    if (this_present_nickNamePartical || that_present_nickNamePartical) {
      if (!(this_present_nickNamePartical && that_present_nickNamePartical))
        return false;
      if (!this.nickNamePartical.equals(that.nickNamePartical))
        return false;
    }

    boolean this_present_orderBy = true && this.isSetOrderBy();
    boolean that_present_orderBy = true && that.isSetOrderBy();
    if (this_present_orderBy || that_present_orderBy) {
      if (!(this_present_orderBy && that_present_orderBy))
        return false;
      if (!this.orderBy.equals(that.orderBy))
        return false;
    }

    boolean this_present_deploySet = true && this.isSetDeploySet();
    boolean that_present_deploySet = true && that.isSetDeploySet();
    if (this_present_deploySet || that_present_deploySet) {
      if (!(this_present_deploySet && that_present_deploySet))
        return false;
      if (!this.deploySet.equals(that.deploySet))
        return false;
    }

    boolean this_present_orderType = true && this.isSetOrderType();
    boolean that_present_orderType = true && that.isSetOrderType();
    if (this_present_orderType || that_present_orderType) {
      if (!(this_present_orderType && that_present_orderType))
        return false;
      if (!this.orderType.equals(that.orderType))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  @Override
  public int compareTo(ReqQuotationAccountOption other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetAccountIds()).compareTo(other.isSetAccountIds());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAccountIds()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.accountIds, other.accountIds);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPlatform()).compareTo(other.isSetPlatform());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPlatform()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.platform, other.platform);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPlatformEnv()).compareTo(other.isSetPlatformEnv());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPlatformEnv()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.platformEnv, other.platformEnv);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSupportCommodityIds()).compareTo(other.isSetSupportCommodityIds());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSupportCommodityIds()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.supportCommodityIds, other.supportCommodityIds);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBrokerIds()).compareTo(other.isSetBrokerIds());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBrokerIds()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.brokerIds, other.brokerIds);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAccountNamePartical()).compareTo(other.isSetAccountNamePartical());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAccountNamePartical()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.accountNamePartical, other.accountNamePartical);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNickNamePartical()).compareTo(other.isSetNickNamePartical());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNickNamePartical()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.nickNamePartical, other.nickNamePartical);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrderBy()).compareTo(other.isSetOrderBy());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrderBy()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orderBy, other.orderBy);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDeploySet()).compareTo(other.isSetDeploySet());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDeploySet()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.deploySet, other.deploySet);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrderType()).compareTo(other.isSetOrderType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrderType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orderType, other.orderType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("ReqQuotationAccountOption(");
    boolean first = true;

    if (isSetAccountIds()) {
      sb.append("accountIds:");
      if (this.accountIds == null) {
        sb.append("null");
      } else {
        sb.append(this.accountIds);
      }
      first = false;
    }
    if (isSetPlatform()) {
      if (!first) sb.append(", ");
      sb.append("platform:");
      if (this.platform == null) {
        sb.append("null");
      } else {
        sb.append(this.platform);
      }
      first = false;
    }
    if (isSetPlatformEnv()) {
      if (!first) sb.append(", ");
      sb.append("platformEnv:");
      if (this.platformEnv == null) {
        sb.append("null");
      } else {
        sb.append(this.platformEnv);
      }
      first = false;
    }
    if (isSetSupportCommodityIds()) {
      if (!first) sb.append(", ");
      sb.append("supportCommodityIds:");
      if (this.supportCommodityIds == null) {
        sb.append("null");
      } else {
        sb.append(this.supportCommodityIds);
      }
      first = false;
    }
    if (isSetBrokerIds()) {
      if (!first) sb.append(", ");
      sb.append("brokerIds:");
      if (this.brokerIds == null) {
        sb.append("null");
      } else {
        sb.append(this.brokerIds);
      }
      first = false;
    }
    if (isSetAccountNamePartical()) {
      if (!first) sb.append(", ");
      sb.append("accountNamePartical:");
      if (this.accountNamePartical == null) {
        sb.append("null");
      } else {
        sb.append(this.accountNamePartical);
      }
      first = false;
    }
    if (isSetNickNamePartical()) {
      if (!first) sb.append(", ");
      sb.append("nickNamePartical:");
      if (this.nickNamePartical == null) {
        sb.append("null");
      } else {
        sb.append(this.nickNamePartical);
      }
      first = false;
    }
    if (isSetOrderBy()) {
      if (!first) sb.append(", ");
      sb.append("orderBy:");
      if (this.orderBy == null) {
        sb.append("null");
      } else {
        sb.append(this.orderBy);
      }
      first = false;
    }
    if (isSetDeploySet()) {
      if (!first) sb.append(", ");
      sb.append("deploySet:");
      if (this.deploySet == null) {
        sb.append("null");
      } else {
        sb.append(this.deploySet);
      }
      first = false;
    }
    if (isSetOrderType()) {
      if (!first) sb.append(", ");
      sb.append("orderType:");
      if (this.orderType == null) {
        sb.append("null");
      } else {
        sb.append(this.orderType);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class ReqQuotationAccountOptionStandardSchemeFactory implements SchemeFactory {
    public ReqQuotationAccountOptionStandardScheme getScheme() {
      return new ReqQuotationAccountOptionStandardScheme();
    }
  }

  private static class ReqQuotationAccountOptionStandardScheme extends StandardScheme<ReqQuotationAccountOption> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, ReqQuotationAccountOption struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ACCOUNT_IDS
            if (schemeField.type == org.apache.thrift.protocol.TType.SET) {
              {
                org.apache.thrift.protocol.TSet _set276 = iprot.readSetBegin();
                struct.accountIds = new HashSet<Long>(2*_set276.size);
                for (int _i277 = 0; _i277 < _set276.size; ++_i277)
                {
                  long _elem278;
                  _elem278 = iprot.readI64();
                  struct.accountIds.add(_elem278);
                }
                iprot.readSetEnd();
              }
              struct.setAccountIdsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // PLATFORM
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.platform = QuotationTechPlatform.findByValue(iprot.readI32());
              struct.setPlatformIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // PLATFORM_ENV
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.platformEnv = QuotationPlatformEnv.findByValue(iprot.readI32());
              struct.setPlatformEnvIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // SUPPORT_COMMODITY_IDS
            if (schemeField.type == org.apache.thrift.protocol.TType.SET) {
              {
                org.apache.thrift.protocol.TSet _set279 = iprot.readSetBegin();
                struct.supportCommodityIds = new HashSet<Integer>(2*_set279.size);
                for (int _i280 = 0; _i280 < _set279.size; ++_i280)
                {
                  int _elem281;
                  _elem281 = iprot.readI32();
                  struct.supportCommodityIds.add(_elem281);
                }
                iprot.readSetEnd();
              }
              struct.setSupportCommodityIdsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // BROKER_IDS
            if (schemeField.type == org.apache.thrift.protocol.TType.SET) {
              {
                org.apache.thrift.protocol.TSet _set282 = iprot.readSetBegin();
                struct.brokerIds = new HashSet<Integer>(2*_set282.size);
                for (int _i283 = 0; _i283 < _set282.size; ++_i283)
                {
                  int _elem284;
                  _elem284 = iprot.readI32();
                  struct.brokerIds.add(_elem284);
                }
                iprot.readSetEnd();
              }
              struct.setBrokerIdsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // ACCOUNT_NAME_PARTICAL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.accountNamePartical = iprot.readString();
              struct.setAccountNameParticalIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // NICK_NAME_PARTICAL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.nickNamePartical = iprot.readString();
              struct.setNickNameParticalIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // ORDER_BY
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.orderBy = QuotationAccountOrderBy.findByValue(iprot.readI32());
              struct.setOrderByIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // DEPLOY_SET
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.deploySet = DeploySet.findByValue(iprot.readI32());
              struct.setDeploySetIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // ORDER_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.orderType = QueryOrderType.findByValue(iprot.readI32());
              struct.setOrderTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, ReqQuotationAccountOption struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.accountIds != null) {
        if (struct.isSetAccountIds()) {
          oprot.writeFieldBegin(ACCOUNT_IDS_FIELD_DESC);
          {
            oprot.writeSetBegin(new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I64, struct.accountIds.size()));
            for (long _iter285 : struct.accountIds)
            {
              oprot.writeI64(_iter285);
            }
            oprot.writeSetEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.platform != null) {
        if (struct.isSetPlatform()) {
          oprot.writeFieldBegin(PLATFORM_FIELD_DESC);
          oprot.writeI32(struct.platform.getValue());
          oprot.writeFieldEnd();
        }
      }
      if (struct.platformEnv != null) {
        if (struct.isSetPlatformEnv()) {
          oprot.writeFieldBegin(PLATFORM_ENV_FIELD_DESC);
          oprot.writeI32(struct.platformEnv.getValue());
          oprot.writeFieldEnd();
        }
      }
      if (struct.supportCommodityIds != null) {
        if (struct.isSetSupportCommodityIds()) {
          oprot.writeFieldBegin(SUPPORT_COMMODITY_IDS_FIELD_DESC);
          {
            oprot.writeSetBegin(new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I32, struct.supportCommodityIds.size()));
            for (int _iter286 : struct.supportCommodityIds)
            {
              oprot.writeI32(_iter286);
            }
            oprot.writeSetEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.brokerIds != null) {
        if (struct.isSetBrokerIds()) {
          oprot.writeFieldBegin(BROKER_IDS_FIELD_DESC);
          {
            oprot.writeSetBegin(new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I32, struct.brokerIds.size()));
            for (int _iter287 : struct.brokerIds)
            {
              oprot.writeI32(_iter287);
            }
            oprot.writeSetEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.accountNamePartical != null) {
        if (struct.isSetAccountNamePartical()) {
          oprot.writeFieldBegin(ACCOUNT_NAME_PARTICAL_FIELD_DESC);
          oprot.writeString(struct.accountNamePartical);
          oprot.writeFieldEnd();
        }
      }
      if (struct.nickNamePartical != null) {
        if (struct.isSetNickNamePartical()) {
          oprot.writeFieldBegin(NICK_NAME_PARTICAL_FIELD_DESC);
          oprot.writeString(struct.nickNamePartical);
          oprot.writeFieldEnd();
        }
      }
      if (struct.orderBy != null) {
        if (struct.isSetOrderBy()) {
          oprot.writeFieldBegin(ORDER_BY_FIELD_DESC);
          oprot.writeI32(struct.orderBy.getValue());
          oprot.writeFieldEnd();
        }
      }
      if (struct.deploySet != null) {
        if (struct.isSetDeploySet()) {
          oprot.writeFieldBegin(DEPLOY_SET_FIELD_DESC);
          oprot.writeI32(struct.deploySet.getValue());
          oprot.writeFieldEnd();
        }
      }
      if (struct.orderType != null) {
        if (struct.isSetOrderType()) {
          oprot.writeFieldBegin(ORDER_TYPE_FIELD_DESC);
          oprot.writeI32(struct.orderType.getValue());
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class ReqQuotationAccountOptionTupleSchemeFactory implements SchemeFactory {
    public ReqQuotationAccountOptionTupleScheme getScheme() {
      return new ReqQuotationAccountOptionTupleScheme();
    }
  }

  private static class ReqQuotationAccountOptionTupleScheme extends TupleScheme<ReqQuotationAccountOption> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, ReqQuotationAccountOption struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetAccountIds()) {
        optionals.set(0);
      }
      if (struct.isSetPlatform()) {
        optionals.set(1);
      }
      if (struct.isSetPlatformEnv()) {
        optionals.set(2);
      }
      if (struct.isSetSupportCommodityIds()) {
        optionals.set(3);
      }
      if (struct.isSetBrokerIds()) {
        optionals.set(4);
      }
      if (struct.isSetAccountNamePartical()) {
        optionals.set(5);
      }
      if (struct.isSetNickNamePartical()) {
        optionals.set(6);
      }
      if (struct.isSetOrderBy()) {
        optionals.set(7);
      }
      if (struct.isSetDeploySet()) {
        optionals.set(8);
      }
      if (struct.isSetOrderType()) {
        optionals.set(9);
      }
      oprot.writeBitSet(optionals, 10);
      if (struct.isSetAccountIds()) {
        {
          oprot.writeI32(struct.accountIds.size());
          for (long _iter288 : struct.accountIds)
          {
            oprot.writeI64(_iter288);
          }
        }
      }
      if (struct.isSetPlatform()) {
        oprot.writeI32(struct.platform.getValue());
      }
      if (struct.isSetPlatformEnv()) {
        oprot.writeI32(struct.platformEnv.getValue());
      }
      if (struct.isSetSupportCommodityIds()) {
        {
          oprot.writeI32(struct.supportCommodityIds.size());
          for (int _iter289 : struct.supportCommodityIds)
          {
            oprot.writeI32(_iter289);
          }
        }
      }
      if (struct.isSetBrokerIds()) {
        {
          oprot.writeI32(struct.brokerIds.size());
          for (int _iter290 : struct.brokerIds)
          {
            oprot.writeI32(_iter290);
          }
        }
      }
      if (struct.isSetAccountNamePartical()) {
        oprot.writeString(struct.accountNamePartical);
      }
      if (struct.isSetNickNamePartical()) {
        oprot.writeString(struct.nickNamePartical);
      }
      if (struct.isSetOrderBy()) {
        oprot.writeI32(struct.orderBy.getValue());
      }
      if (struct.isSetDeploySet()) {
        oprot.writeI32(struct.deploySet.getValue());
      }
      if (struct.isSetOrderType()) {
        oprot.writeI32(struct.orderType.getValue());
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, ReqQuotationAccountOption struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(10);
      if (incoming.get(0)) {
        {
          org.apache.thrift.protocol.TSet _set291 = new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I64, iprot.readI32());
          struct.accountIds = new HashSet<Long>(2*_set291.size);
          for (int _i292 = 0; _i292 < _set291.size; ++_i292)
          {
            long _elem293;
            _elem293 = iprot.readI64();
            struct.accountIds.add(_elem293);
          }
        }
        struct.setAccountIdsIsSet(true);
      }
      if (incoming.get(1)) {
        struct.platform = QuotationTechPlatform.findByValue(iprot.readI32());
        struct.setPlatformIsSet(true);
      }
      if (incoming.get(2)) {
        struct.platformEnv = QuotationPlatformEnv.findByValue(iprot.readI32());
        struct.setPlatformEnvIsSet(true);
      }
      if (incoming.get(3)) {
        {
          org.apache.thrift.protocol.TSet _set294 = new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I32, iprot.readI32());
          struct.supportCommodityIds = new HashSet<Integer>(2*_set294.size);
          for (int _i295 = 0; _i295 < _set294.size; ++_i295)
          {
            int _elem296;
            _elem296 = iprot.readI32();
            struct.supportCommodityIds.add(_elem296);
          }
        }
        struct.setSupportCommodityIdsIsSet(true);
      }
      if (incoming.get(4)) {
        {
          org.apache.thrift.protocol.TSet _set297 = new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I32, iprot.readI32());
          struct.brokerIds = new HashSet<Integer>(2*_set297.size);
          for (int _i298 = 0; _i298 < _set297.size; ++_i298)
          {
            int _elem299;
            _elem299 = iprot.readI32();
            struct.brokerIds.add(_elem299);
          }
        }
        struct.setBrokerIdsIsSet(true);
      }
      if (incoming.get(5)) {
        struct.accountNamePartical = iprot.readString();
        struct.setAccountNameParticalIsSet(true);
      }
      if (incoming.get(6)) {
        struct.nickNamePartical = iprot.readString();
        struct.setNickNameParticalIsSet(true);
      }
      if (incoming.get(7)) {
        struct.orderBy = QuotationAccountOrderBy.findByValue(iprot.readI32());
        struct.setOrderByIsSet(true);
      }
      if (incoming.get(8)) {
        struct.deploySet = DeploySet.findByValue(iprot.readI32());
        struct.setDeploySetIsSet(true);
      }
      if (incoming.get(9)) {
        struct.orderType = QueryOrderType.findByValue(iprot.readI32());
        struct.setOrderTypeIsSet(true);
      }
    }
  }

}

